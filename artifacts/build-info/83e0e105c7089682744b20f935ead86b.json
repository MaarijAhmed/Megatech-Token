{"id":"83e0e105c7089682744b20f935ead86b","_format":"hh-sol-build-info-1","solcVersion":"0.8.2","solcLongVersion":"0.8.2+commit.661d1103","input":{"language":"Solidity","sources":{"contracts/Megatech.sol":{"content":"// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\npragma solidity ^0.8.2;\n\n/// @custom:security-contact marketing@megatechmgt.com\ncontract Megatech is\n    ERC20,\n    ERC20Burnable,\n    ERC20Snapshot,\n    Ownable,\n    ERC20Permit,\n    ERC20Votes\n{\n    constructor() ERC20(\"Megatech\", \"MGT\") ERC20Permit(\"Megatech\") {\n        _mint(msg.sender, 5000000000 * 10**decimals());\n    }\n\n    function snapshot() public onlyOwner {\n        _snapshot();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20, ERC20Snapshot) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20, ERC20Votes) {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._mint(to, amount);\n    }\n\n    function _burn(address account, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Arrays.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds down (it does integer division with truncation).\n            if (array[mid] > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && array[low - 1] == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/draft-EIP712.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20Permit.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../governance/utils/IVotes.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is IVotes, ERC20Permit {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 high = ckpts.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (ckpts[mid].fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : ckpts[high - 1].votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {DelegateChanged} and {DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n        oldWeight = pos == 0 ? 0 : ckpts[pos - 1].votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && ckpts[pos - 1].fromBlock == block.number) {\n            ckpts[pos - 1].votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(block.number), votes: SafeCast.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/extensions/ERC20Snapshot.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Arrays.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n * total supply at the time are recorded for later access.\n *\n * This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n * In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n * accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n * used to create an efficient ERC20 forking mechanism.\n *\n * Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n * snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n * id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n * and the account address.\n *\n * NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n * return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n * function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n *\n * Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n * alternative consider {ERC20Votes}.\n *\n * ==== Gas Costs\n *\n * Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n * n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n * smaller since identical balances in subsequent snapshots are stored as a single entry.\n *\n * There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n * only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n * transfers will have normal cost until the next snapshot, and so on.\n */\n\nabstract contract ERC20Snapshot is ERC20 {\n    // Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n    // https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n\n    using Arrays for uint256[];\n    using Counters for Counters.Counter;\n\n    // Snapshotted values have arrays of ids and the value corresponding to that id. These could be an array of a\n    // Snapshot struct, but that would impede usage of functions that work on an array.\n    struct Snapshots {\n        uint256[] ids;\n        uint256[] values;\n    }\n\n    mapping(address => Snapshots) private _accountBalanceSnapshots;\n    Snapshots private _totalSupplySnapshots;\n\n    // Snapshot ids increase monotonically, with the first value being 1. An id of 0 is invalid.\n    Counters.Counter private _currentSnapshotId;\n\n    /**\n     * @dev Emitted by {_snapshot} when a snapshot identified by `id` is created.\n     */\n    event Snapshot(uint256 id);\n\n    /**\n     * @dev Creates a new snapshot and returns its snapshot id.\n     *\n     * Emits a {Snapshot} event that contains the same id.\n     *\n     * {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n     * set of accounts, for example using {AccessControl}, or it may be open to the public.\n     *\n     * [WARNING]\n     * ====\n     * While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n     * you must consider that it can potentially be used by attackers in two ways.\n     *\n     * First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n     * logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n     * specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n     * section above.\n     *\n     * We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n     * ====\n     */\n    function _snapshot() internal virtual returns (uint256) {\n        _currentSnapshotId.increment();\n\n        uint256 currentId = _getCurrentSnapshotId();\n        emit Snapshot(currentId);\n        return currentId;\n    }\n\n    /**\n     * @dev Get the current snapshotId\n     */\n    function _getCurrentSnapshotId() internal view virtual returns (uint256) {\n        return _currentSnapshotId.current();\n    }\n\n    /**\n     * @dev Retrieves the balance of `account` at the time `snapshotId` was created.\n     */\n    function balanceOfAt(address account, uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _accountBalanceSnapshots[account]);\n\n        return snapshotted ? value : balanceOf(account);\n    }\n\n    /**\n     * @dev Retrieves the total supply at the time `snapshotId` was created.\n     */\n    function totalSupplyAt(uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _totalSupplySnapshots);\n\n        return snapshotted ? value : totalSupply();\n    }\n\n    // Update balance and/or total supply snapshots before the values are modified. This is implemented\n    // in the _beforeTokenTransfer hook, which is executed for _mint, _burn, and _transfer operations.\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) {\n            // mint\n            _updateAccountSnapshot(to);\n            _updateTotalSupplySnapshot();\n        } else if (to == address(0)) {\n            // burn\n            _updateAccountSnapshot(from);\n            _updateTotalSupplySnapshot();\n        } else {\n            // transfer\n            _updateAccountSnapshot(from);\n            _updateAccountSnapshot(to);\n        }\n    }\n\n    function _valueAt(uint256 snapshotId, Snapshots storage snapshots) private view returns (bool, uint256) {\n        require(snapshotId > 0, \"ERC20Snapshot: id is 0\");\n        require(snapshotId <= _getCurrentSnapshotId(), \"ERC20Snapshot: nonexistent id\");\n\n        // When a valid snapshot is queried, there are three possibilities:\n        //  a) The queried value was not modified after the snapshot was taken. Therefore, a snapshot entry was never\n        //  created for this id, and all stored snapshot ids are smaller than the requested one. The value that corresponds\n        //  to this id is the current one.\n        //  b) The queried value was modified after the snapshot was taken. Therefore, there will be an entry with the\n        //  requested id, and its value is the one to return.\n        //  c) More snapshots were created after the requested one, and the queried value was later modified. There will be\n        //  no entry for the requested id: the value that corresponds to it is that of the smallest snapshot id that is\n        //  larger than the requested one.\n        //\n        // In summary, we need to find an element in an array, returning the index of the smallest value that is larger if\n        // it is not found, unless said value doesn't exist (e.g. when all values are smaller). Arrays.findUpperBound does\n        // exactly this.\n\n        uint256 index = snapshots.ids.findUpperBound(snapshotId);\n\n        if (index == snapshots.ids.length) {\n            return (false, 0);\n        } else {\n            return (true, snapshots.values[index]);\n        }\n    }\n\n    function _updateAccountSnapshot(address account) private {\n        _updateSnapshot(_accountBalanceSnapshots[account], balanceOf(account));\n    }\n\n    function _updateTotalSupplySnapshot() private {\n        _updateSnapshot(_totalSupplySnapshots, totalSupply());\n    }\n\n    function _updateSnapshot(Snapshots storage snapshots, uint256 currentValue) private {\n        uint256 currentId = _getCurrentSnapshotId();\n        if (_lastSnapshotId(snapshots.ids) < currentId) {\n            snapshots.ids.push(currentId);\n            snapshots.values.push(currentValue);\n        }\n    }\n\n    function _lastSnapshotId(uint256[] storage ids) private view returns (uint256) {\n        if (ids.length == 0) {\n            return 0;\n        } else {\n            return ids[ids.length - 1];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2203],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2204,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2203,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[2203],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2203],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0"}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:1","nodeType":"VariableDeclaration","scope":151,"src":"1028:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1072:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:1"},"scope":190,"src":"989:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1087:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:1","nodeType":"VariableDeclaration","scope":159,"src":"1485:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1529:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:1"},"scope":190,"src":"1457:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1544:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1647:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1639:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:1"},"scope":190,"src":"1620:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1694:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:1","nodeType":"VariableDeclaration","scope":173,"src":"1788:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1815:0:1"},"scope":190,"src":"1770:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1822:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:1","nodeType":"VariableDeclaration","scope":189,"src":"1926:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:1","nodeType":"VariableDeclaration","scope":189,"src":"1953:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:1","nodeType":"VariableDeclaration","scope":189,"src":"1976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2006:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2000:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2025:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2017:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2044:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2060:0:1"},"scope":190,"src":"1894:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1795:1"}],"src":"110:1954:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2203],"ERC20":[776],"IERC20":[854],"IERC20Metadata":[1888]},"id":777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":777,"sourceUnit":855,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":777,"sourceUnit":1889,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":777,"sourceUnit":2204,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":197,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2203,"src":"1421:7:2"},"id":198,"nodeType":"InheritanceSpecifier","src":"1421:7:2"},{"baseName":{"id":199,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1430:6:2"},"id":200,"nodeType":"InheritanceSpecifier","src":"1430:6:2"},{"baseName":{"id":201,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1888,"src":"1438:14:2"},"id":202,"nodeType":"InheritanceSpecifier","src":"1438:14:2"}],"contractDependencies":[854,1888,2203],"contractKind":"contract","documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"230:1172:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776,1888,854,2203],"name":"ERC20","nameLocation":"1412:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":206,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:2","nodeType":"VariableDeclaration","scope":776,"src":"1459:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":205,"keyType":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":212,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:2","nodeType":"VariableDeclaration","scope":776,"src":"1511:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":211,"keyType":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":210,"keyType":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":214,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:2","nodeType":"VariableDeclaration","scope":776,"src":"1585:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":216,"mutability":"mutable","name":"_name","nameLocation":"1635:5:2","nodeType":"VariableDeclaration","scope":776,"src":"1620:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":215,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":218,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:2","nodeType":"VariableDeclaration","scope":776,"src":"1646:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":234,"nodeType":"Block","src":"2034:57:2","statements":[{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2044:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":227,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2052:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":229,"nodeType":"ExpressionStatement","src":"2044:13:2"},{"expression":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":230,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2067:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":231,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2077:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":233,"nodeType":"ExpressionStatement","src":"2067:17:2"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1675:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":235,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"name_","nameLocation":"2004:5:2","nodeType":"VariableDeclaration","scope":235,"src":"1990:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":220,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:2","nodeType":"VariableDeclaration","scope":235,"src":"2011:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":222,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:2"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"2034:0:2"},"scope":776,"src":"1978:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1875],"body":{"id":244,"nodeType":"Block","src":"2225:29:2","statements":[{"expression":{"id":242,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2242:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":241,"id":243,"nodeType":"Return","src":"2235:12:2"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"2097:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":245,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:2","nodeType":"FunctionDefinition","overrides":{"id":238,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:2"},"parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"2169:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"2210:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":239,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:2"},"scope":776,"src":"2156:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1881],"body":{"id":254,"nodeType":"Block","src":"2438:31:2","statements":[{"expression":{"id":252,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2455:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":251,"id":253,"nodeType":"Return","src":"2448:14:2"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"2260:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":255,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:2","nodeType":"FunctionDefinition","overrides":{"id":248,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:2"},"parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"2382:2:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"2423:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:2"},"scope":776,"src":"2367:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1887],"body":{"id":264,"nodeType":"Block","src":"3158:26:2","statements":[{"expression":{"hexValue":"3138","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":261,"id":263,"nodeType":"Return","src":"3168:9:2"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"2475:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":265,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:2","nodeType":"FunctionDefinition","overrides":{"id":258,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:2"},"parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"3110:2:2"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"3151:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":259,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:2"},"scope":776,"src":"3093:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[803],"body":{"id":274,"nodeType":"Block","src":"3314:36:2","statements":[{"expression":{"id":272,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3331:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":273,"nodeType":"Return","src":"3324:19:2"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"3190:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":275,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:2","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:2"},"parameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"3264:2:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"3305:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:2"},"scope":776,"src":"3244:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[811],"body":{"id":288,"nodeType":"Block","src":"3491:42:2","statements":[{"expression":{"baseExpression":{"id":284,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"3508:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":286,"indexExpression":{"id":285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3518:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":287,"nodeType":"Return","src":"3501:25:2"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"3356:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":289,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:2","nodeType":"FunctionDefinition","overrides":{"id":280,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:2"},"parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"account","nameLocation":"3435:7:2","nodeType":"VariableDeclaration","scope":289,"src":"3427:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:2"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"3482:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:2"},"scope":776,"src":"3408:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[821],"body":{"id":313,"nodeType":"Block","src":"3814:104:2","statements":[{"assignments":[301],"declarations":[{"constant":false,"id":301,"mutability":"mutable","name":"owner","nameLocation":"3832:5:2","nodeType":"VariableDeclaration","scope":313,"src":"3824:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":304,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3840:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3840:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:2"},{"expression":{"arguments":[{"id":306,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3872:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"3879:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3883:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":305,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3862:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"3862:28:2"},{"expression":{"hexValue":"74727565","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":299,"id":312,"nodeType":"Return","src":"3900:11:2"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"3539:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":314,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:2","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:2"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"to","nameLocation":"3755:2:2","nodeType":"VariableDeclaration","scope":314,"src":"3747:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"amount","nameLocation":"3767:6:2","nodeType":"VariableDeclaration","scope":314,"src":"3759:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:2"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"3808:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":297,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:2"},"scope":776,"src":"3729:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[831],"body":{"id":331,"nodeType":"Block","src":"4074:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":325,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4091:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":327,"indexExpression":{"id":326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4103:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":329,"indexExpression":{"id":328,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4110:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":324,"id":330,"nodeType":"Return","src":"4084:34:2"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"3924:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":332,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:2","nodeType":"FunctionDefinition","overrides":{"id":321,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:2"},"parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"owner","nameLocation":"4003:5:2","nodeType":"VariableDeclaration","scope":332,"src":"3995:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"spender","nameLocation":"4018:7:2","nodeType":"VariableDeclaration","scope":332,"src":"4010:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"4065:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:2"},"scope":776,"src":"3976:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[841],"body":{"id":356,"nodeType":"Block","src":"4522:108:2","statements":[{"assignments":[344],"declarations":[{"constant":false,"id":344,"mutability":"mutable","name":"owner","nameLocation":"4540:5:2","nodeType":"VariableDeclaration","scope":356,"src":"4532:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":347,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":345,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"4548:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:2"},{"expression":{"arguments":[{"id":349,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4579:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":350,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4595:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":348,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4570:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"4570:32:2"},{"expression":{"hexValue":"74727565","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":342,"id":355,"nodeType":"Return","src":"4612:11:2"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"4131:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":357,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:2","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:2"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"spender","nameLocation":"4458:7:2","nodeType":"VariableDeclaration","scope":357,"src":"4450:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"amount","nameLocation":"4475:6:2","nodeType":"VariableDeclaration","scope":357,"src":"4467:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:2"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"4516:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:2"},"scope":776,"src":"4433:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[853],"body":{"id":389,"nodeType":"Block","src":"5325:153:2","statements":[{"assignments":[371],"declarations":[{"constant":false,"id":371,"mutability":"mutable","name":"spender","nameLocation":"5343:7:2","nodeType":"VariableDeclaration","scope":389,"src":"5335:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":374,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":372,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5353:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5353:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:2"},{"expression":{"arguments":[{"id":376,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5391:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"5397:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5406:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":375,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5375:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5375:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"5375:38:2"},{"expression":{"arguments":[{"id":382,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5443:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":381,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"5423:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"5423:27:2"},{"expression":{"hexValue":"74727565","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":369,"id":388,"nodeType":"Return","src":"5460:11:2"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"4636:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":390,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:2","nodeType":"FunctionDefinition","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:2"},"parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"from","nameLocation":"5231:4:2","nodeType":"VariableDeclaration","scope":390,"src":"5223:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"to","nameLocation":"5253:2:2","nodeType":"VariableDeclaration","scope":390,"src":"5245:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"amount","nameLocation":"5273:6:2","nodeType":"VariableDeclaration","scope":390,"src":"5265:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:2"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"5319:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:2"},"scope":776,"src":"5192:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":418,"nodeType":"Block","src":"5967:140:2","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"owner","nameLocation":"5985:5:2","nodeType":"VariableDeclaration","scope":418,"src":"5977:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":404,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5993:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:2"},{"expression":{"arguments":[{"id":406,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6024:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6031:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"6050:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6057:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":408,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6040:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6040:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":412,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6068:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":405,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6015:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"6015:64:2"},{"expression":{"hexValue":"74727565","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":399,"id":417,"nodeType":"Return","src":"6089:11:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"5484:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":419,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:2","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"spender","nameLocation":"5908:7:2","nodeType":"VariableDeclaration","scope":419,"src":"5900:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:2","nodeType":"VariableDeclaration","scope":419,"src":"5917:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:2"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"5961:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:2"},"scope":776,"src":"5873:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":459,"nodeType":"Block","src":"6693:328:2","statements":[{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"owner","nameLocation":"6711:5:2","nodeType":"VariableDeclaration","scope":459,"src":"6703:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"6719:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:2"},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:2","nodeType":"VariableDeclaration","scope":459,"src":"6741:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[{"id":437,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6778:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6785:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6768:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6768:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6811:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":443,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6831:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"6803:85:2"},{"id":456,"nodeType":"UncheckedBlock","src":"6898:95:2","statements":[{"expression":{"arguments":[{"id":449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6931:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6938:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6947:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":452,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6922:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6922:60:2"}]},{"expression":{"hexValue":"74727565","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":428,"id":458,"nodeType":"Return","src":"7003:11:2"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"6113:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:2","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"spender","nameLocation":"6629:7:2","nodeType":"VariableDeclaration","scope":460,"src":"6621:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:2","nodeType":"VariableDeclaration","scope":460,"src":"6638:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:2"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"6687:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":426,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:2"},"scope":776,"src":"6594:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":536,"nodeType":"Block","src":"7583:543:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7601:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:2","typeDescriptions":{}}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7593:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"7593:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7679:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:2","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7671:64:2"},{"expression":{"arguments":[{"id":491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7767:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7773:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7777:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7746:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"7746:38:2"},{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:2","nodeType":"VariableDeclaration","scope":536,"src":"7795:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":501,"initialValue":{"baseExpression":{"id":498,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"7817:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":500,"indexExpression":{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7827:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7850:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7865:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7842:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"7842:72:2"},{"id":517,"nodeType":"UncheckedBlock","src":"7924:73:2","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"7948:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":511,"indexExpression":{"id":510,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7958:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7966:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"7980:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"7948:38:2"}]},{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":518,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"8006:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":520,"indexExpression":{"id":519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8016:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8023:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":523,"nodeType":"ExpressionStatement","src":"8006:23:2"},{"eventCall":{"arguments":[{"id":525,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8054:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8060:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8064:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8045:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8045:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"EmitStatement","src":"8040:31:2"},{"expression":{"arguments":[{"id":531,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8102:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8108:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"8112:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"8082:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"8082:37:2"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"7027:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:2","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"from","nameLocation":"7511:4:2","nodeType":"VariableDeclaration","scope":537,"src":"7503:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"to","nameLocation":"7533:2:2","nodeType":"VariableDeclaration","scope":537,"src":"7525:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"amount","nameLocation":"7553:6:2","nodeType":"VariableDeclaration","scope":537,"src":"7545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"7583:0:2"},"scope":776,"src":"7475:651:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":592,"nodeType":"Block","src":"8467:324:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8485:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:2","typeDescriptions":{}}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8477:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"8477:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:2","typeDescriptions":{}}},"id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8595:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":555,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8553:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8553:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"8553:49:2"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"8613:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8629:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"8613:22:2"},{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":568,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"8645:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":570,"indexExpression":{"id":569,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8655:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8667:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"8645:28:2"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:2","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8709:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8718:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":574,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8688:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8688:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"8683:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:2","typeDescriptions":{}}},"id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8756:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"8768:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"8777:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"8736:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8736:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"8736:48:2"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"8132:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:2","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"8425:7:2","nodeType":"VariableDeclaration","scope":593,"src":"8417:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"amount","nameLocation":"8442:6:2","nodeType":"VariableDeclaration","scope":593,"src":"8434:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:2"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"8467:0:2"},"scope":776,"src":"8402:389:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"9176:511:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9194:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:2","typeDescriptions":{}}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9205:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9186:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"9186:67:2"},{"expression":{"arguments":[{"id":612,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9285:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:2","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9294:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9264:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"9264:49:2"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:2","nodeType":"VariableDeclaration","scope":664,"src":"9324:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":625,"initialValue":{"baseExpression":{"id":622,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"9349:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":623,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9359:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":627,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9385:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9403:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9377:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"9377:71:2"},{"id":641,"nodeType":"UncheckedBlock","src":"9458:79:2","statements":[{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":633,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"9482:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":635,"indexExpression":{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9492:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9503:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":637,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9520:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"9482:44:2"}]},{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":642,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"9546:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9562:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ExpressionStatement","src":"9546:22:2"},{"eventCall":{"arguments":[{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9593:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9602:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9614:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"9584:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9584:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"EmitStatement","src":"9579:42:2"},{"expression":{"arguments":[{"id":656,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"9652:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:2","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9673:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":655,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9632:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"9632:48:2"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"8797:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:2","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"account","nameLocation":"9134:7:2","nodeType":"VariableDeclaration","scope":665,"src":"9126:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"amount","nameLocation":"9151:6:2","nodeType":"VariableDeclaration","scope":665,"src":"9143:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:2"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"9176:0:2"},"scope":776,"src":"9111:576:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"10223:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10241:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:2","typeDescriptions":{}}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10250:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10233:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"10233:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"10319:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:2","typeDescriptions":{}}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10311:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"10311:68:2"},{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":695,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"10390:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":698,"indexExpression":{"id":696,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10402:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":699,"indexExpression":{"id":697,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"10409:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10420:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"10390:36:2"},{"eventCall":{"arguments":[{"id":704,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10450:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"10457:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10466:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":703,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"10441:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"EmitStatement","src":"10436:37:2"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"9693:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:2","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"10145:5:2","nodeType":"VariableDeclaration","scope":710,"src":"10137:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"spender","nameLocation":"10168:7:2","nodeType":"VariableDeclaration","scope":710,"src":"10160:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"amount","nameLocation":"10193:6:2","nodeType":"VariableDeclaration","scope":710,"src":"10185:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"10223:0:2"},"scope":776,"src":"10110:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"10881:321:2","statements":[{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:2","nodeType":"VariableDeclaration","scope":752,"src":"10891:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":726,"initialValue":{"arguments":[{"id":723,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"10928:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"10935:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":722,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"10918:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10918:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"10957:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10977:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10977:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"10953:243:2","trueBody":{"id":750,"nodeType":"Block","src":"10996:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"11018:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"11038:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11010:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"11010:68:2"},{"id":749,"nodeType":"UncheckedBlock","src":"11092:94:2","statements":[{"expression":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"11129:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"11136:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"11145:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"11164:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"11120:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11120:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"11120:51:2"}]}]}}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"10486:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:2","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"owner","nameLocation":"10803:5:2","nodeType":"VariableDeclaration","scope":753,"src":"10795:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"spender","nameLocation":"10826:7:2","nodeType":"VariableDeclaration","scope":753,"src":"10818:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"amount","nameLocation":"10851:6:2","nodeType":"VariableDeclaration","scope":753,"src":"10843:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:2"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"10881:0:2"},"scope":776,"src":"10761:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"11905:2:2","statements":[]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"11208:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:2","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"from","nameLocation":"11833:4:2","nodeType":"VariableDeclaration","scope":764,"src":"11825:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"to","nameLocation":"11855:2:2","nodeType":"VariableDeclaration","scope":764,"src":"11847:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"amount","nameLocation":"11875:6:2","nodeType":"VariableDeclaration","scope":764,"src":"11867:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:2"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"11905:0:2"},"scope":776,"src":"11786:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"12613:2:2","statements":[]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"11913:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"12541:4:2","nodeType":"VariableDeclaration","scope":775,"src":"12533:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"12563:2:2","nodeType":"VariableDeclaration","scope":775,"src":"12555:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"12583:6:2","nodeType":"VariableDeclaration","scope":775,"src":"12575:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:2"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"12613:0:2"},"scope":776,"src":"12495:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":777,"src":"1403:11214:2"}],"src":"105:12513:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":778,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":854,"linearizedBaseContracts":[854],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":788,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":788,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":788,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":788,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":797,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":797,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":797,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":797,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":803,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":854,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":811,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":811,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":854,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":821,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":821,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":821,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":818,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":854,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":831,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":831,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":831,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":854,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":841,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":841,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":841,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":854,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":853,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":853,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":853,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":853,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":850,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":854,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":855,"src":"202:2564:3"}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2203],"ERC20":[776],"ERC20Burnable":[898],"IERC20":[854],"IERC20Metadata":[1888]},"id":899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":899,"sourceUnit":777,"src":"149:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":899,"sourceUnit":2204,"src":"172:36:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":860,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2203,"src":"454:7:4"},"id":861,"nodeType":"InheritanceSpecifier","src":"454:7:4"},{"baseName":{"id":862,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"463:5:4"},"id":863,"nodeType":"InheritanceSpecifier","src":"463:5:4"}],"contractDependencies":[776,854,1888,2203],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"210:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":898,"linearizedBaseContracts":[898,776,1888,854,2203],"name":"ERC20Burnable","nameLocation":"437:13:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":875,"nodeType":"Block","src":"623:44:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":870,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"639:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"653:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"633:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"633:27:4"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"475:98:4","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":876,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:4","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"amount","nameLocation":"600:6:4","nodeType":"VariableDeclaration","scope":876,"src":"592:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"623:0:4"},"scope":898,"src":"578:89:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":896,"nodeType":"Block","src":"1039:95:4","statements":[{"expression":{"arguments":[{"id":885,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"1065:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":886,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1074:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1088:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":884,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"1049:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"1049:46:4"},{"expression":{"arguments":[{"id":892,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"1111:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":891,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1105:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"1105:22:4"}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"673:295:4","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":897,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:4","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"account","nameLocation":"999:7:4","nodeType":"VariableDeclaration","scope":897,"src":"991:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"amount","nameLocation":"1016:6:4","nodeType":"VariableDeclaration","scope":897,"src":"1008:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:4"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"1039:0:4"},"scope":898,"src":"973:161:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":899,"src":"419:717:4"}],"src":"124:1013:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol","exportedSymbols":{"Arrays":[2181],"Context":[2203],"Counters":[2277],"ERC20":[776],"ERC20Snapshot":[1226],"IERC20":[854],"IERC20Metadata":[1888],"Math":[3549]},"id":1227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":900,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":777,"src":"149:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../../utils/Arrays.sol","id":902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":2182,"src":"172:35:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":2278,"src":"208:37:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":905,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"2437:5:5"},"id":906,"nodeType":"InheritanceSpecifier","src":"2437:5:5"}],"contractDependencies":[776,854,1888,2203],"contractKind":"contract","documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"247:2153:5","text":" @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n total supply at the time are recorded for later access.\n This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n used to create an efficient ERC20 forking mechanism.\n Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n and the account address.\n NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n alternative consider {ERC20Votes}.\n ==== Gas Costs\n Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n smaller since identical balances in subsequent snapshots are stored as a single entry.\n There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n transfers will have normal cost until the next snapshot, and so on."},"fullyImplemented":false,"id":1226,"linearizedBaseContracts":[1226,776,1888,854,2203],"name":"ERC20Snapshot","nameLocation":"2420:13:5","nodeType":"ContractDefinition","nodes":[{"id":910,"libraryName":{"id":907,"name":"Arrays","nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"2646:6:5"},"nodeType":"UsingForDirective","src":"2640:27:5","typeName":{"baseType":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ArrayTypeName","src":"2657:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"id":914,"libraryName":{"id":911,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":2277,"src":"2678:8:5"},"nodeType":"UsingForDirective","src":"2672:36:5","typeName":{"id":913,"nodeType":"UserDefinedTypeName","pathNode":{"id":912,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"2691:16:5"},"referencedDeclaration":2209,"src":"2691:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}}},{"canonicalName":"ERC20Snapshot.Snapshots","id":921,"members":[{"constant":false,"id":917,"mutability":"mutable","name":"ids","nameLocation":"2953:3:5","nodeType":"VariableDeclaration","scope":921,"src":"2943:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2943:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":916,"nodeType":"ArrayTypeName","src":"2943:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"values","nameLocation":"2976:6:5","nodeType":"VariableDeclaration","scope":921,"src":"2966:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":919,"nodeType":"ArrayTypeName","src":"2966:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Snapshots","nameLocation":"2923:9:5","nodeType":"StructDefinition","scope":1226,"src":"2916:73:5","visibility":"public"},{"constant":false,"id":926,"mutability":"mutable","name":"_accountBalanceSnapshots","nameLocation":"3033:24:5","nodeType":"VariableDeclaration","scope":1226,"src":"2995:62:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$921_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots)"},"typeName":{"id":925,"keyType":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2995:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$921_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots)"},"valueType":{"id":924,"nodeType":"UserDefinedTypeName","pathNode":{"id":923,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":921,"src":"3014:9:5"},"referencedDeclaration":921,"src":"3014:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}}},"visibility":"private"},{"constant":false,"id":929,"mutability":"mutable","name":"_totalSupplySnapshots","nameLocation":"3081:21:5","nodeType":"VariableDeclaration","scope":1226,"src":"3063:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":928,"nodeType":"UserDefinedTypeName","pathNode":{"id":927,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":921,"src":"3063:9:5"},"referencedDeclaration":921,"src":"3063:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"private"},{"constant":false,"id":932,"mutability":"mutable","name":"_currentSnapshotId","nameLocation":"3231:18:5","nodeType":"VariableDeclaration","scope":1226,"src":"3206:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage","typeString":"struct Counters.Counter"},"typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"3206:16:5"},"referencedDeclaration":2209,"src":"3206:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"3256:93:5","text":" @dev Emitted by {_snapshot} when a snapshot identified by `id` is created."},"id":937,"name":"Snapshot","nameLocation":"3360:8:5","nodeType":"EventDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"3377:2:5","nodeType":"VariableDeclaration","scope":937,"src":"3369:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3368:12:5"},"src":"3354:27:5"},{"body":{"id":959,"nodeType":"Block","src":"4544:161:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":943,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4554:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage","typeString":"struct Counters.Counter storage ref"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"4554:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2209_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2209_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4554:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"4554:30:5"},{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"currentId","nameLocation":"4603:9:5","nodeType":"VariableDeclaration","scope":959,"src":"4595:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4595:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":952,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4615:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4615:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4595:43:5"},{"eventCall":{"arguments":[{"id":954,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4662:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":953,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"4653:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4653:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"EmitStatement","src":"4648:24:5"},{"expression":{"id":957,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4689:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":958,"nodeType":"Return","src":"4682:16:5"}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"3387:1096:5","text":" @dev Creates a new snapshot and returns its snapshot id.\n Emits a {Snapshot} event that contains the same id.\n {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n set of accounts, for example using {AccessControl}, or it may be open to the public.\n [WARNING]\n ====\n While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n you must consider that it can potentially be used by attackers in two ways.\n First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n section above.\n We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n ===="},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_snapshot","nameLocation":"4497:9:5","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"4506:2:5"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"4535:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"4535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4534:9:5"},"scope":1226,"src":"4488:217:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"4839:52:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":966,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4856:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage","typeString":"struct Counters.Counter storage ref"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"4856:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2209_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2209_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":965,"id":969,"nodeType":"Return","src":"4849:35:5"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"4711:50:5","text":" @dev Get the current snapshotId"},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentSnapshotId","nameLocation":"4775:21:5","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"4796:2:5"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":971,"src":"4830:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4829:9:5"},"scope":1226,"src":"4766:125:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":999,"nodeType":"Block","src":"5094:166:5","statements":[{"assignments":[982,984],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"snapshotted","nameLocation":"5110:11:5","nodeType":"VariableDeclaration","scope":999,"src":"5105:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":981,"name":"bool","nodeType":"ElementaryTypeName","src":"5105:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"value","nameLocation":"5131:5:5","nodeType":"VariableDeclaration","scope":999,"src":"5123:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"5123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"arguments":[{"id":986,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5149:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":987,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"5161:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$921_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots storage ref)"}},"id":989,"indexExpression":{"id":988,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5186:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5161:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}],"id":985,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5140:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$921_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20Snapshot.Snapshots storage pointer) view returns (bool,uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5104:91:5"},{"expression":{"condition":{"id":992,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5213:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":995,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5245:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":994,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5235:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5235:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5213:40:5","trueExpression":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5227:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":980,"id":998,"nodeType":"Return","src":"5206:47:5"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"4897:96:5","text":" @dev Retrieves the balance of `account` at the time `snapshotId` was created."},"functionSelector":"4ee2cd7e","id":1000,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfAt","nameLocation":"5007:11:5","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"account","nameLocation":"5027:7:5","nodeType":"VariableDeclaration","scope":1000,"src":"5019:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"5019:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"snapshotId","nameLocation":"5044:10:5","nodeType":"VariableDeclaration","scope":1000,"src":"5036:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5018:37:5"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1000,"src":"5085:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"5085:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5084:9:5"},"scope":1226,"src":"4998:262:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1023,"nodeType":"Block","src":"5440:149:5","statements":[{"assignments":[1009,1011],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"snapshotted","nameLocation":"5456:11:5","nodeType":"VariableDeclaration","scope":1023,"src":"5451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1008,"name":"bool","nodeType":"ElementaryTypeName","src":"5451:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"value","nameLocation":"5477:5:5","nodeType":"VariableDeclaration","scope":1023,"src":"5469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"arguments":[{"id":1013,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"5495:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1014,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5507:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}],"id":1012,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5486:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$921_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20Snapshot.Snapshots storage pointer) view returns (bool,uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5486:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5450:79:5"},{"expression":{"condition":{"id":1017,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5547:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1019,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5569:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5569:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5547:35:5","trueExpression":{"id":1018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5561:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1007,"id":1022,"nodeType":"Return","src":"5540:42:5"}]},"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"5266:88:5","text":" @dev Retrieves the total supply at the time `snapshotId` was created."},"functionSelector":"981b24d0","id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAt","nameLocation":"5368:13:5","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"snapshotId","nameLocation":"5390:10:5","nodeType":"VariableDeclaration","scope":1024,"src":"5382:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5381:20:5"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"5431:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5431:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5430:9:5"},"scope":1226,"src":"5359:230:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":1081,"nodeType":"Block","src":"5930:474:5","statements":[{"expression":{"arguments":[{"id":1037,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5967:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5973:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5977:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1034,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5940:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Snapshot_$1226_$","typeString":"type(contract super ERC20Snapshot)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":764,"src":"5940:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5940:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"5940:44:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5999:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6015:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6007:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"6007:7:5","typeDescriptions":{}}},"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5999:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6142:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6148:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"6148:7:5","typeDescriptions":{}}},"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6148:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6142:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1078,"nodeType":"Block","src":"6281:117:5","statements":[{"expression":{"arguments":[{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6342:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1070,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6319:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6319:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"6319:28:5"},{"expression":{"arguments":[{"id":1075,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6384:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1074,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6361:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6361:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"6361:26:5"}]},"id":1079,"nodeType":"IfStatement","src":"6138:260:5","trueBody":{"id":1069,"nodeType":"Block","src":"6160:115:5","statements":[{"expression":{"arguments":[{"id":1063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6217:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6194:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6194:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"6194:28:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1066,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"6236:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6236:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1068,"nodeType":"ExpressionStatement","src":"6236:28:5"}]}},"id":1080,"nodeType":"IfStatement","src":"5995:403:5","trueBody":{"id":1055,"nodeType":"Block","src":"6019:113:5","statements":[{"expression":{"arguments":[{"id":1049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6076:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1048,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6053:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"ExpressionStatement","src":"6053:26:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1052,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"6093:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"6093:28:5"}]}}]},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"5811:20:5","nodeType":"FunctionDefinition","overrides":{"id":1032,"nodeType":"OverrideSpecifier","overrides":[],"src":"5921:8:5"},"parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"from","nameLocation":"5849:4:5","nodeType":"VariableDeclaration","scope":1082,"src":"5841:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"5841:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"to","nameLocation":"5871:2:5","nodeType":"VariableDeclaration","scope":1082,"src":"5863:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"amount","nameLocation":"5891:6:5","nodeType":"VariableDeclaration","scope":1082,"src":"5883:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:72:5"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"5930:0:5"},"scope":1226,"src":"5802:602:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"6514:1490:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6532:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6545:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6532:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a2069642069732030","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6548:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""},"value":"ERC20Snapshot: id is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""}],"id":1094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6524:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6524:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"ExpressionStatement","src":"6524:49:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6591:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1103,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6605:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6605:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6591:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a206e6f6e6578697374656e74206964","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6630:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""},"value":"ERC20Snapshot: nonexistent id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6583:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"6583:79:5"},{"assignments":[1110],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"index","nameLocation":"7793:5:5","nodeType":"VariableDeclaration","scope":1136,"src":"7785:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"7785:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1116,"initialValue":{"arguments":[{"id":1114,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7830:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1111,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7801:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":917,"src":"7801:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"findUpperBound","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"7801:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) view returns (uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7801:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7785:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"7856:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1118,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7865:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":917,"src":"7865:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7865:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7856:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1134,"nodeType":"Block","src":"7935:63:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7957:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"expression":{"id":1128,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7963:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":920,"src":"7963:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1131,"indexExpression":{"id":1130,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"7980:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7963:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7956:31:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1093,"id":1133,"nodeType":"Return","src":"7949:38:5"}]},"id":1135,"nodeType":"IfStatement","src":"7852:146:5","trueBody":{"id":1126,"nodeType":"Block","src":"7887:42:5","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7909:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7916:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7908:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1093,"id":1125,"nodeType":"Return","src":"7901:17:5"}]}}]},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"_valueAt","nameLocation":"6419:8:5","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"snapshotId","nameLocation":"6436:10:5","nodeType":"VariableDeclaration","scope":1137,"src":"6428:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"snapshots","nameLocation":"6466:9:5","nodeType":"VariableDeclaration","scope":1137,"src":"6448:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":1086,"nodeType":"UserDefinedTypeName","pathNode":{"id":1085,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":921,"src":"6448:9:5"},"referencedDeclaration":921,"src":"6448:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"internal"}],"src":"6427:49:5"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"6499:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1089,"name":"bool","nodeType":"ElementaryTypeName","src":"6499:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"6505:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"6505:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6498:15:5"},"scope":1226,"src":"6410:1594:5","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1151,"nodeType":"Block","src":"8067:87:5","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1143,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"8093:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$921_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots storage ref)"}},"id":1145,"indexExpression":{"id":1144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8118:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8093:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}},{"arguments":[{"id":1147,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8138:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1146,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"8128:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8128:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8077:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$921_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20Snapshot.Snapshots storage pointer,uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8077:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"ExpressionStatement","src":"8077:70:5"}]},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAccountSnapshot","nameLocation":"8019:22:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"account","nameLocation":"8050:7:5","nodeType":"VariableDeclaration","scope":1152,"src":"8042:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"8042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8041:17:5"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"8067:0:5"},"scope":1226,"src":"8010:144:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1161,"nodeType":"Block","src":"8206:70:5","statements":[{"expression":{"arguments":[{"id":1156,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8232:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1157,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8255:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8255:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$921_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8216:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$921_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20Snapshot.Snapshots storage pointer,uint256)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8216:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"8216:53:5"}]},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"_updateTotalSupplySnapshot","nameLocation":"8169:26:5","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"8195:2:5"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[],"src":"8206:0:5"},"scope":1226,"src":"8160:116:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1199,"nodeType":"Block","src":"8366:220:5","statements":[{"assignments":[1171],"declarations":[{"constant":false,"id":1171,"mutability":"mutable","name":"currentId","nameLocation":"8384:9:5","nodeType":"VariableDeclaration","scope":1199,"src":"8376:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"8376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1172,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"8396:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8396:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8376:43:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1176,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8449:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8449:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":1175,"name":"_lastSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8433:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] storage pointer) view returns (uint256)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1179,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"8466:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8433:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"8429:151:5","trueBody":{"id":1197,"nodeType":"Block","src":"8477:103:5","statements":[{"expression":{"arguments":[{"id":1186,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"8510:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1181,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8491:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":917,"src":"8491:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8491:18:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8491:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"8491:29:5"},{"expression":{"arguments":[{"id":1194,"name":"currentValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"8556:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1189,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"8534:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":1192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":920,"src":"8534:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8534:21:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8534:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"8534:35:5"}]}}]},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_updateSnapshot","nameLocation":"8291:15:5","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"snapshots","nameLocation":"8325:9:5","nodeType":"VariableDeclaration","scope":1200,"src":"8307:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":1164,"nodeType":"UserDefinedTypeName","pathNode":{"id":1163,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":921,"src":"8307:9:5"},"referencedDeclaration":921,"src":"8307:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$921_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"currentValue","nameLocation":"8344:12:5","nodeType":"VariableDeclaration","scope":1200,"src":"8336:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"8336:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8306:51:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"8366:0:5"},"scope":1226,"src":"8282:304:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1224,"nodeType":"Block","src":"8671:127:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1208,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8685:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8685:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8699:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8685:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1222,"nodeType":"Block","src":"8741:51:5","statements":[{"expression":{"baseExpression":{"id":1215,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8762:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1220,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1216,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8766:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8766:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8766:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8762:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1207,"id":1221,"nodeType":"Return","src":"8755:26:5"}]},"id":1223,"nodeType":"IfStatement","src":"8681:111:5","trueBody":{"id":1214,"nodeType":"Block","src":"8702:33:5","statements":[{"expression":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1207,"id":1213,"nodeType":"Return","src":"8716:8:5"}]}}]},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_lastSnapshotId","nameLocation":"8601:15:5","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"ids","nameLocation":"8635:3:5","nodeType":"VariableDeclaration","scope":1225,"src":"8617:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"8617:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ArrayTypeName","src":"8617:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8616:23:5"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"8662:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8661:9:5"},"scope":1226,"src":"8592:206:5","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":1227,"src":"2402:6398:5"}],"src":"124:8677:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2203],"Counters":[2277],"ECDSA":[2891],"EIP712":[3045],"ERC20":[776],"ERC20Permit":[2060],"ERC20Votes":[1863],"IERC20":[854],"IERC20Metadata":[1888],"IERC20Permit":[2096],"IVotes":[190],"Math":[3549],"SafeCast":[5400],"Strings":[2503]},"id":1864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"./draft-ERC20Permit.sol","id":1229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":2061,"src":"146:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":3550,"src":"180:38:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../../../governance/utils/IVotes.sol","id":1231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":191,"src":"219:46:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":5401,"src":"266:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1864,"sourceUnit":2892,"src":"309:47:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1235,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1285:6:6"},"id":1236,"nodeType":"InheritanceSpecifier","src":"1285:6:6"},{"baseName":{"id":1237,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"1293:11:6"},"id":1238,"nodeType":"InheritanceSpecifier","src":"1293:11:6"}],"contractDependencies":[190,776,854,1888,2060,2096,2203,3045],"contractKind":"contract","documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"358:894:6","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1863,"linearizedBaseContracts":[1863,2060,3045,2096,776,1888,854,2203,190],"name":"ERC20Votes","nameLocation":"1271:10:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1243,"members":[{"constant":false,"id":1240,"mutability":"mutable","name":"fromBlock","nameLocation":"1346:9:6","nodeType":"VariableDeclaration","scope":1243,"src":"1339:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1239,"name":"uint32","nodeType":"ElementaryTypeName","src":"1339:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"votes","nameLocation":"1373:5:6","nodeType":"VariableDeclaration","scope":1243,"src":"1365:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1241,"name":"uint224","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1318:10:6","nodeType":"StructDefinition","scope":1863,"src":"1311:74:6","visibility":"public"},{"constant":true,"id":1248,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1416:20:6","nodeType":"VariableDeclaration","scope":1863,"src":"1391:127:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1391:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1457:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1245,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1447:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1252,"mutability":"mutable","name":"_delegates","nameLocation":"1561:10:6","nodeType":"VariableDeclaration","scope":1863,"src":"1525:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1251,"keyType":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1525:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1258,"mutability":"mutable","name":"_checkpoints","nameLocation":"1618:12:6","nodeType":"VariableDeclaration","scope":1863,"src":"1577:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1257,"keyType":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1577:32:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueType":{"baseType":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"1596:10:6"},"referencedDeclaration":1243,"src":"1596:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1256,"nodeType":"ArrayTypeName","src":"1596:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1262,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1657:23:6","nodeType":"VariableDeclaration","scope":1863,"src":"1636:44:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1260,"nodeType":"UserDefinedTypeName","pathNode":{"id":1259,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"1636:10:6"},"referencedDeclaration":1243,"src":"1636:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1261,"nodeType":"ArrayTypeName","src":"1636:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"body":{"id":1279,"nodeType":"Block","src":"1856:50:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1273,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"1873:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1275,"indexExpression":{"id":1274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1886:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1277,"indexExpression":{"id":1276,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"1895:3:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:26:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1272,"id":1278,"nodeType":"Return","src":"1866:33:6"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1687:66:6","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1280,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"1767:11:6","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"account","nameLocation":"1787:7:6","nodeType":"VariableDeclaration","scope":1280,"src":"1779:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"pos","nameLocation":"1803:3:6","nodeType":"VariableDeclaration","scope":1280,"src":"1796:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1266,"name":"uint32","nodeType":"ElementaryTypeName","src":"1796:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1778:29:6"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1280,"src":"1837:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1270,"nodeType":"UserDefinedTypeName","pathNode":{"id":1269,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"1837:10:6"},"referencedDeclaration":1243,"src":"1837:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"1836:19:6"},"scope":1863,"src":"1758:148:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1296,"nodeType":"Block","src":"2059:71:6","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1290,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2094:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1292,"indexExpression":{"id":1291,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2094:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2094:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"2076:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5400_$","typeString":"type(library SafeCast)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4252,"src":"2076:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2076:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1287,"id":1295,"nodeType":"Return","src":"2069:54:6"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"1912:64:6","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"1990:14:6","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"account","nameLocation":"2013:7:6","nodeType":"VariableDeclaration","scope":1297,"src":"2005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2004:17:6"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"2051:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1285,"name":"uint32","nodeType":"ElementaryTypeName","src":"2051:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:8:6"},"scope":1863,"src":"1981:149:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":1310,"nodeType":"Block","src":"2301:43:6","statements":[{"expression":{"baseExpression":{"id":1306,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2318:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1308,"indexExpression":{"id":1307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"2329:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1305,"id":1309,"nodeType":"Return","src":"2311:26:6"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"2136:77:6","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2227:9:6","nodeType":"FunctionDefinition","overrides":{"id":1302,"nodeType":"OverrideSpecifier","overrides":[],"src":"2274:8:6"},"parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"account","nameLocation":"2245:7:6","nodeType":"VariableDeclaration","scope":1311,"src":"2237:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2236:17:6"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1311,"src":"2292:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2291:9:6"},"scope":1863,"src":"2218:126:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1341,"nodeType":"Block","src":"2505:127:6","statements":[{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"pos","nameLocation":"2523:3:6","nodeType":"VariableDeclaration","scope":1341,"src":"2515:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1326,"initialValue":{"expression":{"baseExpression":{"id":1322,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2529:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1324,"indexExpression":{"id":1323,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2542:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2529:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2529:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:42:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2574:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2574:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1331,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2589:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1333,"indexExpression":{"id":1332,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2602:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1337,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2611:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:30:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"2589:36:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2574:51:6","trueExpression":{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1319,"id":1340,"nodeType":"Return","src":"2567:58:6"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"2350:68:6","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2432:8:6","nodeType":"FunctionDefinition","overrides":{"id":1316,"nodeType":"OverrideSpecifier","overrides":[],"src":"2478:8:6"},"parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"account","nameLocation":"2449:7:6","nodeType":"VariableDeclaration","scope":1342,"src":"2441:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2440:17:6"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"2496:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:9:6"},"scope":1863,"src":"2423:209:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1368,"nodeType":"Block","src":"2932:158:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2950:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1355,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2964:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2964:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2978:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"2942:70:6"},{"expression":{"arguments":[{"baseExpression":{"id":1362,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"3048:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1364,"indexExpression":{"id":1363,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3061:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1365,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"3071:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1361,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3029:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3029:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1352,"id":1367,"nodeType":"Return","src":"3022:61:6"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"2638:182:6","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2834:12:6","nodeType":"FunctionDefinition","overrides":{"id":1349,"nodeType":"OverrideSpecifier","overrides":[],"src":"2905:8:6"},"parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"account","nameLocation":"2855:7:6","nodeType":"VariableDeclaration","scope":1369,"src":"2847:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"blockNumber","nameLocation":"2872:11:6","nodeType":"VariableDeclaration","scope":1369,"src":"2864:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2846:38:6"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"2923:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:6"},"scope":1863,"src":"2825:265:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1391,"nodeType":"Block","src":"3465:160:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3483:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1380,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3497:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3497:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3511:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3475:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"3475:70:6"},{"expression":{"arguments":[{"id":1387,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"3581:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1388,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3606:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1386,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3562:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3562:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1377,"id":1390,"nodeType":"Return","src":"3555:63:6"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3096:268:6","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3378:18:6","nodeType":"FunctionDefinition","overrides":{"id":1374,"nodeType":"OverrideSpecifier","overrides":[],"src":"3438:8:6"},"parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"blockNumber","nameLocation":"3405:11:6","nodeType":"VariableDeclaration","scope":1392,"src":"3397:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:21:6"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"3456:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3455:9:6"},"scope":1863,"src":"3369:256:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1457,"nodeType":"Block","src":"3817:1350:6","statements":[{"assignments":[1405],"declarations":[{"constant":false,"id":1405,"mutability":"mutable","name":"high","nameLocation":"4823:4:6","nodeType":"VariableDeclaration","scope":1457,"src":"4815:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1408,"initialValue":{"expression":{"id":1406,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"4830:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4830:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4815:27:6"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"low","nameLocation":"4860:3:6","nodeType":"VariableDeclaration","scope":1457,"src":"4852:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1412,"initialValue":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4852:15:6"},{"body":{"id":1443,"nodeType":"Block","src":"4896:210:6","statements":[{"assignments":[1417],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"mid","nameLocation":"4918:3:6","nodeType":"VariableDeclaration","scope":1443,"src":"4910:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"4910:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[{"id":1420,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"4937:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1421,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4942:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1418,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"4924:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3549_$","typeString":"type(library Math)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"4924:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4924:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4910:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1424,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"4965:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1426,"indexExpression":{"id":1425,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4971:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4965:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1240,"src":"4965:20:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1428,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"4988:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4965:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1441,"nodeType":"Block","src":"5050:46:6","statements":[{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"5068:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"5074:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5080:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5074:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5068:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ExpressionStatement","src":"5068:13:6"}]},"id":1442,"nodeType":"IfStatement","src":"4961:135:6","trueBody":{"id":1434,"nodeType":"Block","src":"5001:43:6","statements":[{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1430,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5019:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1431,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"5026:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5019:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"5019:10:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"4884:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1414,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4890:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1444,"nodeType":"WhileStatement","src":"4877:229:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5123:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5131:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5123:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":1449,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5139:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1453,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"5145:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5145:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5139:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"5139:21:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5123:37:6","trueExpression":{"hexValue":"30","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1403,"id":1456,"nodeType":"Return","src":"5116:44:6"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"3631:73:6","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"3718:18:6","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"ckpts","nameLocation":"3758:5:6","nodeType":"VariableDeclaration","scope":1458,"src":"3737:26:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1395,"nodeType":"UserDefinedTypeName","pathNode":{"id":1394,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"3737:10:6"},"referencedDeclaration":1243,"src":"3737:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1396,"nodeType":"ArrayTypeName","src":"3737:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"blockNumber","nameLocation":"3773:11:6","nodeType":"VariableDeclaration","scope":1458,"src":"3765:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3765:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:49:6"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"3808:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"3808:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3807:9:6"},"scope":1863,"src":"3709:1458:6","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1471,"nodeType":"Block","src":"5309:51:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1466,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5329:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5329:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5343:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1465,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5319:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"5319:34:6"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"5173:70:6","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5257:8:6","nodeType":"FunctionDefinition","overrides":{"id":1463,"nodeType":"OverrideSpecifier","overrides":[],"src":"5300:8:6"},"parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"delegatee","nameLocation":"5274:9:6","nodeType":"VariableDeclaration","scope":1472,"src":"5266:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5265:19:6"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"5309:0:6"},"scope":1863,"src":"5248:112:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1531,"nodeType":"Block","src":"5619:392:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1490,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5637:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5637:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1492,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5656:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5637:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5664:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5629:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5629:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1496,"nodeType":"ExpressionStatement","src":"5629:67:6"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"signer","nameLocation":"5714:6:6","nodeType":"VariableDeclaration","scope":1531,"src":"5706:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1516,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1505,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5788:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1506,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5810:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"5821:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1508,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5828:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1503,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5777:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5777:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5777:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1502,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5767:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5767:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1501,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"5750:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1512,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5851:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1513,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"5866:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1514,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5881:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1499,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"5723:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2831,"src":"5723:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5723:169:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5706:186:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"5910:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1520,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"5929:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1519,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"5919:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5919:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5910:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5902:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5902:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"5902:64:6"},{"expression":{"arguments":[{"id":1527,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"5986:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1528,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5994:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1526,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5976:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5976:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"5976:28:6"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"5366:66:6","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1532,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5446:13:6","nodeType":"FunctionDefinition","overrides":{"id":1487,"nodeType":"OverrideSpecifier","overrides":[],"src":"5610:8:6"},"parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"delegatee","nameLocation":"5477:9:6","nodeType":"VariableDeclaration","scope":1532,"src":"5469:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"nonce","nameLocation":"5504:5:6","nodeType":"VariableDeclaration","scope":1532,"src":"5496:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"expiry","nameLocation":"5527:6:6","nodeType":"VariableDeclaration","scope":1532,"src":"5519:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"v","nameLocation":"5549:1:6","nodeType":"VariableDeclaration","scope":1532,"src":"5543:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1480,"name":"uint8","nodeType":"ElementaryTypeName","src":"5543:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"r","nameLocation":"5568:1:6","nodeType":"VariableDeclaration","scope":1532,"src":"5560:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5560:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"s","nameLocation":"5587:1:6","nodeType":"VariableDeclaration","scope":1532,"src":"5579:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5579:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5459:135:6"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[],"src":"5619:0:6"},"scope":1863,"src":"5437:574:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1544,"nodeType":"Block","src":"6175:41:6","statements":[{"expression":{"expression":{"arguments":[{"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6197:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1539,"name":"uint224","nodeType":"ElementaryTypeName","src":"6197:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6192:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6192:17:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1537,"id":1543,"nodeType":"Return","src":"6185:24:6"}]},"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"6017:91:6","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6122:10:6","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"6132:2:6"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"6166:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1535,"name":"uint224","nodeType":"ElementaryTypeName","src":"6166:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6165:9:6"},"scope":1863,"src":"6113:103:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[593],"body":{"id":1576,"nodeType":"Block","src":"6379:211:6","statements":[{"expression":{"arguments":[{"id":1557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"6401:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"6410:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1554,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6389:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1863_$","typeString":"type(contract super ERC20Votes)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":593,"src":"6389:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6389:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"6389:28:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1562,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"6435:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6435:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1564,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6452:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6452:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"6435:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6466:50:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6427:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6427:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"ExpressionStatement","src":"6427:90:6"},{"expression":{"arguments":[{"id":1571,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"6545:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1572,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6570:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"6576:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1570,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6528:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6528:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1575,"nodeType":"ExpressionStatement","src":"6528:55:6"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"6222:78:6","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6314:5:6","nodeType":"FunctionDefinition","overrides":{"id":1552,"nodeType":"OverrideSpecifier","overrides":[],"src":"6370:8:6"},"parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"account","nameLocation":"6328:7:6","nodeType":"VariableDeclaration","scope":1577,"src":"6320:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"6320:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"amount","nameLocation":"6345:6:6","nodeType":"VariableDeclaration","scope":1577,"src":"6337:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"6337:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6319:33:6"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"6379:0:6"},"scope":1863,"src":"6305:285:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[665],"body":{"id":1599,"nodeType":"Block","src":"6753:116:6","statements":[{"expression":{"arguments":[{"id":1589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6775:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"6784:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1586,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6763:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1863_$","typeString":"type(contract super ERC20Votes)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":665,"src":"6763:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6763:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"6763:28:6"},{"expression":{"arguments":[{"id":1594,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"6819:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1595,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"6844:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"6855:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6802:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6802:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1598,"nodeType":"ExpressionStatement","src":"6802:60:6"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"6596:78:6","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6688:5:6","nodeType":"FunctionDefinition","overrides":{"id":1584,"nodeType":"OverrideSpecifier","overrides":[],"src":"6744:8:6"},"parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"account","nameLocation":"6702:7:6","nodeType":"VariableDeclaration","scope":1600,"src":"6694:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"6694:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"amount","nameLocation":"6719:6:6","nodeType":"VariableDeclaration","scope":1600,"src":"6711:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"6711:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:33:6"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"6753:0:6"},"scope":1863,"src":"6679:190:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[775],"body":{"id":1629,"nodeType":"Block","src":"7129:127:6","statements":[{"expression":{"arguments":[{"id":1614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"7165:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7171:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"7175:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1611,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7139:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1863_$","typeString":"type(contract super ERC20Votes)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":775,"src":"7139:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7139:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"7139:43:6"},{"expression":{"arguments":[{"arguments":[{"id":1621,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"7220:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7210:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7210:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1624,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7237:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1623,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7227:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7227:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"7242:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7193:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7193:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"7193:56:6"}]},"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"6875:122:6","text":" @dev Move voting power when tokens are transferred.\n Emits a {DelegateVotesChanged} event."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7011:19:6","nodeType":"FunctionDefinition","overrides":{"id":1609,"nodeType":"OverrideSpecifier","overrides":[],"src":"7120:8:6"},"parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"from","nameLocation":"7048:4:6","nodeType":"VariableDeclaration","scope":1630,"src":"7040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"to","nameLocation":"7070:2:6","nodeType":"VariableDeclaration","scope":1630,"src":"7062:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"7062:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"amount","nameLocation":"7090:6:6","nodeType":"VariableDeclaration","scope":1630,"src":"7082:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"7082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7030:72:6"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"7129:0:6"},"scope":1863,"src":"7002:254:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"7487:306:6","statements":[{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"currentDelegate","nameLocation":"7505:15:6","nodeType":"VariableDeclaration","scope":1668,"src":"7497:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1643,"initialValue":{"arguments":[{"id":1641,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7533:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1640,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7523:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7523:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7497:46:6"},{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"delegatorBalance","nameLocation":"7561:16:6","nodeType":"VariableDeclaration","scope":1668,"src":"7553:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7553:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1649,"initialValue":{"arguments":[{"id":1647,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7590:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1646,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"7580:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7580:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7553:47:6"},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1650,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"7610:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1652,"indexExpression":{"id":1651,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7621:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7610:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1653,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"7634:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7610:33:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1655,"nodeType":"ExpressionStatement","src":"7610:33:6"},{"eventCall":{"arguments":[{"id":1657,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7675:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7686:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1659,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"7703:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1656,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"7659:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7659:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"EmitStatement","src":"7654:59:6"},{"expression":{"arguments":[{"id":1663,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7741:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1664,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"7758:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"7769:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7724:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7724:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"7724:62:6"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"7262:146:6","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {DelegateChanged} and {DelegateVotesChanged}."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7422:9:6","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"delegator","nameLocation":"7440:9:6","nodeType":"VariableDeclaration","scope":1669,"src":"7432:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"delegatee","nameLocation":"7459:9:6","nodeType":"VariableDeclaration","scope":1669,"src":"7451:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"7451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7431:38:6"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"7487:0:6"},"scope":1863,"src":"7413:380:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"7905:521:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"7919:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1679,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"7926:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7919:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7933:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7942:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7933:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7919:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1738,"nodeType":"IfStatement","src":"7915:505:6","trueBody":{"id":1737,"nodeType":"Block","src":"7945:475:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1685,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"7963:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7970:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"7970:7:6","typeDescriptions":{}}},"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7970:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7963:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"7959:221:6","trueBody":{"id":1709,"nodeType":"Block","src":"7982:198:6","statements":[{"assignments":[1692,1694],"declarations":[{"constant":false,"id":1692,"mutability":"mutable","name":"oldWeight","nameLocation":"8009:9:6","nodeType":"VariableDeclaration","scope":1709,"src":"8001:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"newWeight","nameLocation":"8028:9:6","nodeType":"VariableDeclaration","scope":1709,"src":"8020:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"baseExpression":{"id":1696,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8058:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1698,"indexExpression":{"id":1697,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"8071:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8058:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1699,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"8077:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8088:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1695,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8041:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8041:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8000:95:6"},{"eventCall":{"arguments":[{"id":1704,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"8139:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"8144:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1706,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"8155:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8118:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8118:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"EmitStatement","src":"8113:52:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"8198:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8213:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"8205:7:6","typeDescriptions":{}}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8205:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8198:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1736,"nodeType":"IfStatement","src":"8194:216:6","trueBody":{"id":1735,"nodeType":"Block","src":"8217:193:6","statements":[{"assignments":[1718,1720],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"oldWeight","nameLocation":"8244:9:6","nodeType":"VariableDeclaration","scope":1735,"src":"8236:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"newWeight","nameLocation":"8263:9:6","nodeType":"VariableDeclaration","scope":1735,"src":"8255:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"8255:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"arguments":[{"baseExpression":{"id":1722,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8293:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1724,"indexExpression":{"id":1723,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"8306:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8293:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1725,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"8312:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8318:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8276:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8276:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8235:90:6"},{"eventCall":{"arguments":[{"id":1730,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"8369:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"8374:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1732,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"8385:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8348:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8348:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"EmitStatement","src":"8343:52:6"}]}}]}}]},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"7808:16:6","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"src","nameLocation":"7842:3:6","nodeType":"VariableDeclaration","scope":1740,"src":"7834:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"7834:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"dst","nameLocation":"7863:3:6","nodeType":"VariableDeclaration","scope":1740,"src":"7855:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"amount","nameLocation":"7884:6:6","nodeType":"VariableDeclaration","scope":1740,"src":"7876:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7824:72:6"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"7905:0:6"},"scope":1863,"src":"7799:627:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1833,"nodeType":"Block","src":"8640:423:6","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"pos","nameLocation":"8658:3:6","nodeType":"VariableDeclaration","scope":1833,"src":"8650:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"expression":{"id":1765,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8664:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8664:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8650:26:6"},{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"8686:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8698:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8698:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"id":1773,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8713:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1777,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8719:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8725:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8713:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"8713:20:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8698:35:6","trueExpression":{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8709:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8686:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"nodeType":"ExpressionStatement","src":"8686:47:6"},{"expression":{"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1782,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8743:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1784,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"8758:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1785,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"8769:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1783,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8755:2:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8743:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1788,"nodeType":"ExpressionStatement","src":"8743:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8790:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8796:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8790:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1792,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8801:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1796,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8807:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8813:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8807:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1240,"src":"8801:24:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8829:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8829:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8801:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8790:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1831,"nodeType":"Block","src":"8926:131:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8992:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8992:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1819,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8974:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5400_$","typeString":"type(library SafeCast)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4252,"src":"8974:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8974:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1826,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"9033:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1824,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"9014:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5400_$","typeString":"type(library SafeCast)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"9014:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9014:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1818,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"8951:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1243_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"8951:94:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1243_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1815,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8940:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8940:10:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1243_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8940:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"8940:106:6"}]},"id":1832,"nodeType":"IfStatement","src":"8786:271:6","trueBody":{"id":1814,"nodeType":"Block","src":"8843:77:6","statements":[{"expression":{"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1802,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8857:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1806,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8863:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8869:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8863:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8857:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1242,"src":"8857:20:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1810,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8899:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1808,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8880:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5400_$","typeString":"type(library SafeCast)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"8880:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8880:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8857:52:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1813,"nodeType":"ExpressionStatement","src":"8857:52:6"}]}}]},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"8441:16:6","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"ckpts","nameLocation":"8488:5:6","nodeType":"VariableDeclaration","scope":1834,"src":"8467:26:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1742,"nodeType":"UserDefinedTypeName","pathNode":{"id":1741,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"8467:10:6"},"referencedDeclaration":1243,"src":"8467:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1243_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1743,"nodeType":"ArrayTypeName","src":"8467:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1243_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"op","nameLocation":"8553:2:6","nodeType":"VariableDeclaration","scope":1834,"src":"8503:52:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1753,"nodeType":"FunctionTypeName","parameterTypes":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"8512:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"8521:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"8521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8511:18:6"},"returnParameterTypes":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"8544:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"8544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8543:9:6"},"src":"8503:52:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"delta","nameLocation":"8573:5:6","nodeType":"VariableDeclaration","scope":1834,"src":"8565:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"8565:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8457:127:6"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"oldWeight","nameLocation":"8610:9:6","nodeType":"VariableDeclaration","scope":1834,"src":"8602:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"newWeight","nameLocation":"8629:9:6","nodeType":"VariableDeclaration","scope":1834,"src":"8621:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"8621:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8601:38:6"},"scope":1863,"src":"8432:631:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1847,"nodeType":"Block","src":"9136:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"9153:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9157:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9153:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1846,"nodeType":"Return","src":"9146:12:6"}]},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9078:4:6","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"a","nameLocation":"9091:1:6","nodeType":"VariableDeclaration","scope":1848,"src":"9083:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"b","nameLocation":"9102:1:6","nodeType":"VariableDeclaration","scope":1848,"src":"9094:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"9094:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:22:6"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1848,"src":"9127:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"9127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9126:9:6"},"scope":1863,"src":"9069:96:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1861,"nodeType":"Block","src":"9243:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"9260:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"9264:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9260:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1856,"id":1860,"nodeType":"Return","src":"9253:12:6"}]},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9180:9:6","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"a","nameLocation":"9198:1:6","nodeType":"VariableDeclaration","scope":1862,"src":"9190:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"9190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"b","nameLocation":"9209:1:6","nodeType":"VariableDeclaration","scope":1862,"src":"9201:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"9201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9189:22:6"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"9234:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9233:9:6"},"scope":1863,"src":"9171:101:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1864,"src":"1253:8021:6"}],"src":"121:9154:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[854],"IERC20Metadata":[1888]},"id":1889,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1865,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1889,"sourceUnit":855,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1868,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":854,"src":"305:6:7"},"id":1869,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"contractDependencies":[854],"contractKind":"interface","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1888,"linearizedBaseContracts":[1888,854],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1875,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1872,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1888,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1881,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1881,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1888,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1887,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1884,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1888,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1889,"src":"277:405:7"}],"src":"110:573:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[2203],"Counters":[2277],"ECDSA":[2891],"EIP712":[3045],"ERC20":[776],"ERC20Permit":[2060],"IERC20":[854],"IERC20Metadata":[1888],"IERC20Permit":[2096],"Strings":[2503]},"id":2061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1890,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":1891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":2097,"src":"153:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":777,"src":"188:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"../../../utils/cryptography/draft-EIP712.sol","id":1893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":3046,"src":"211:54:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":2892,"src":"266:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":2278,"src":"314:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1897,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"904:5:8"},"id":1898,"nodeType":"InheritanceSpecifier","src":"904:5:8"},{"baseName":{"id":1899,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"911:12:8"},"id":1900,"nodeType":"InheritanceSpecifier","src":"911:12:8"},{"baseName":{"id":1901,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":3045,"src":"925:6:8"},"id":1902,"nodeType":"InheritanceSpecifier","src":"925:6:8"}],"contractDependencies":[776,854,1888,2096,2203,3045],"contractKind":"contract","documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"353:517:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":2060,"linearizedBaseContracts":[2060,3045,2096,776,1888,854,2203],"name":"ERC20Permit","nameLocation":"889:11:8","nodeType":"ContractDefinition","nodes":[{"id":1906,"libraryName":{"id":1903,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":2277,"src":"944:8:8"},"nodeType":"UsingForDirective","src":"938:36:8","typeName":{"id":1905,"nodeType":"UserDefinedTypeName","pathNode":{"id":1904,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"957:16:8"},"referencedDeclaration":2209,"src":"957:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1911,"mutability":"mutable","name":"_nonces","nameLocation":"1025:7:8","nodeType":"VariableDeclaration","scope":2060,"src":"980:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2209_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1910,"keyType":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"980:36:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2209_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1909,"nodeType":"UserDefinedTypeName","pathNode":{"id":1908,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"999:16:8"},"referencedDeclaration":2209,"src":"999:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1916,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1116:16:8","nodeType":"VariableDeclaration","scope":2060,"src":"1091:147:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1153:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1913,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1143:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1143:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"1244:254:8","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1919,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1571:32:8","nodeType":"VariableDeclaration","scope":2060,"src":"1555:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1929,"nodeType":"Block","src":"1885:2:8","statements":[]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"1610:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1930,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1925,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"1874:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1880:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1927,"modifierName":{"id":1924,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":3045,"src":"1867:6:8"},"nodeType":"ModifierInvocation","src":"1867:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"name","nameLocation":"1861:4:8","nodeType":"VariableDeclaration","scope":1930,"src":"1847:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1846:20:8"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[],"src":"1885:0:8"},"scope":2060,"src":"1835:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2081],"body":{"id":2002,"nodeType":"Block","src":"2146:428:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1950,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2164:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1952,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2183:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2164:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2156:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2156:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"2156:69:8"},{"assignments":[1958],"declarations":[{"constant":false,"id":1958,"mutability":"mutable","name":"structHash","nameLocation":"2244:10:8","nodeType":"VariableDeclaration","scope":2002,"src":"2236:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2236:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1972,"initialValue":{"arguments":[{"arguments":[{"id":1962,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2278:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1963,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2296:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1964,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2303:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2312:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1967,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2329:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1966,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2319:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1969,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2337:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2267:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2267:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2267:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2257:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2257:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2236:111:8"},{"assignments":[1974],"declarations":[{"constant":false,"id":1974,"mutability":"mutable","name":"hash","nameLocation":"2366:4:8","nodeType":"VariableDeclaration","scope":2002,"src":"2358:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"id":1976,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2390:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1975,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2373:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2358:43:8"},{"assignments":[1980],"declarations":[{"constant":false,"id":1980,"mutability":"mutable","name":"signer","nameLocation":"2420:6:8","nodeType":"VariableDeclaration","scope":2002,"src":"2412:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1988,"initialValue":{"arguments":[{"id":1983,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"2443:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1984,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1985,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2452:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1986,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2455:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1981,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2429:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2831,"src":"2429:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2429:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2412:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1990,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"2475:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1991,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2485:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2467:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2467:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"2467:58:8"},{"expression":{"arguments":[{"id":1997,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2545:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2552:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2561:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1996,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"2536:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"2536:31:8"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"1893:50:8","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1957:6:8","nodeType":"FunctionDefinition","overrides":{"id":1947,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:8"},"parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"owner","nameLocation":"1981:5:8","nodeType":"VariableDeclaration","scope":2003,"src":"1973:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"spender","nameLocation":"2004:7:8","nodeType":"VariableDeclaration","scope":2003,"src":"1996:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"value","nameLocation":"2029:5:8","nodeType":"VariableDeclaration","scope":2003,"src":"2021:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"deadline","nameLocation":"2052:8:8","nodeType":"VariableDeclaration","scope":2003,"src":"2044:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"v","nameLocation":"2076:1:8","nodeType":"VariableDeclaration","scope":2003,"src":"2070:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1940,"name":"uint8","nodeType":"ElementaryTypeName","src":"2070:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"r","nameLocation":"2095:1:8","nodeType":"VariableDeclaration","scope":2003,"src":"2087:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2087:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"s","nameLocation":"2114:1:8","nodeType":"VariableDeclaration","scope":2003,"src":"2106:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2106:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1963:158:8"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"2146:0:8"},"scope":2060,"src":"1948:626:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2089],"body":{"id":2018,"nodeType":"Block","src":"2713:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2012,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"2730:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2209_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":2014,"indexExpression":{"id":2013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2738:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2730:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage","typeString":"struct Counters.Counter storage ref"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"2730:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2209_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2209_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2011,"id":2017,"nodeType":"Return","src":"2723:31:8"}]},"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"2580:50:8","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2644:6:8","nodeType":"FunctionDefinition","overrides":{"id":2008,"nodeType":"OverrideSpecifier","overrides":[],"src":"2686:8:8"},"parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"owner","nameLocation":"2659:5:8","nodeType":"VariableDeclaration","scope":2019,"src":"2651:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:15:8"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2019,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2703:9:8"},"scope":2060,"src":"2635:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2095],"body":{"id":2029,"nodeType":"Block","src":"2954:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2026,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"2971:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2971:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2025,"id":2028,"nodeType":"Return","src":"2964:27:8"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"2767:60:8","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2894:16:8","nodeType":"FunctionDefinition","overrides":{"id":2022,"nodeType":"OverrideSpecifier","overrides":[],"src":"2927:8:8"},"parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"2910:2:8"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"2945:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2945:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2944:9:8"},"scope":2060,"src":"2885:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2058,"nodeType":"Block","src":"3206:126:8","statements":[{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"nonce","nameLocation":"3241:5:8","nodeType":"VariableDeclaration","scope":2058,"src":"3216:30:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2041,"nodeType":"UserDefinedTypeName","pathNode":{"id":2040,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"3216:16:8"},"referencedDeclaration":2209,"src":"3216:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":2046,"initialValue":{"baseExpression":{"id":2043,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"3249:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2209_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":2045,"indexExpression":{"id":2044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3257:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3249:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3216:47:8"},{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2047,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2048,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"3283:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"3283:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2209_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2209_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3283:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3273:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"3273:25:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2053,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"3308:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"3308:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2209_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2209_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2057,"nodeType":"ExpressionStatement","src":"3308:17:8"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"3004:120:8","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3138:9:8","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"owner","nameLocation":"3156:5:8","nodeType":"VariableDeclaration","scope":2059,"src":"3148:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3147:15:8"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"current","nameLocation":"3197:7:8","nodeType":"VariableDeclaration","scope":2059,"src":"3189:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3188:17:8"},"scope":2060,"src":"3129:203:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2061,"src":"871:2463:8"}],"src":"128:3207:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2096]},"id":2097,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2062,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"139:480:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2096,"linearizedBaseContracts":[2096],"name":"IERC20Permit","nameLocation":"630:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"649:792:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2081,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:9","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"owner","nameLocation":"1479:5:9","nodeType":"VariableDeclaration","scope":2081,"src":"1471:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"spender","nameLocation":"1502:7:9","nodeType":"VariableDeclaration","scope":2081,"src":"1494:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"value","nameLocation":"1527:5:9","nodeType":"VariableDeclaration","scope":2081,"src":"1519:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:9","nodeType":"VariableDeclaration","scope":2081,"src":"1542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"v","nameLocation":"1574:1:9","nodeType":"VariableDeclaration","scope":2081,"src":"1568:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2073,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"r","nameLocation":"1593:1:9","nodeType":"VariableDeclaration","scope":2081,"src":"1585:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"s","nameLocation":"1612:1:9","nodeType":"VariableDeclaration","scope":2081,"src":"1604:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:9"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"1628:0:9"},"scope":2096,"src":"1446:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"1635:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2089,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:9","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"owner","nameLocation":"1958:5:9","nodeType":"VariableDeclaration","scope":2089,"src":"1950:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:9"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2089,"src":"1988:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:9"},"scope":2096,"src":"1934:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"2003:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2095,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:9","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[],"src":"2214:2:9"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"2240:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:9"},"scope":2096,"src":"2189:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2097,"src":"620:1631:9"}],"src":"114:2138:9"},"id":9},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2181],"Math":[3549]},"id":2182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2098,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"85:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":3550,"src":"110:25:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"137:63:10","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2181,"linearizedBaseContracts":[2181],"name":"Arrays","nameLocation":"209:6:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2179,"nodeType":"Block","src":"732:794:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2111,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"746:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"746:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"762:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"746:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"IfStatement","src":"742:56:10","trueBody":{"id":2117,"nodeType":"Block","src":"765:33:10","statements":[{"expression":{"hexValue":"30","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2110,"id":2116,"nodeType":"Return","src":"779:8:10"}]}},{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"low","nameLocation":"816:3:10","nodeType":"VariableDeclaration","scope":2179,"src":"808:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2122,"initialValue":{"hexValue":"30","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"822:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"808:15:10"},{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"high","nameLocation":"841:4:10","nodeType":"VariableDeclaration","scope":2179,"src":"833:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2127,"initialValue":{"expression":{"id":2125,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"848:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"848:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"833:27:10"},{"body":{"id":2157,"nodeType":"Block","src":"890:395:10","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"mid","nameLocation":"912:3:10","nodeType":"VariableDeclaration","scope":2157,"src":"904:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"arguments":[{"id":2135,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"931:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"936:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2133,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"918:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3549_$","typeString":"type(library Math)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3111,"src":"918:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"918:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"904:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2139,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"1158:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2141,"indexExpression":{"id":2140,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"1164:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1158:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2142,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1158:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2155,"nodeType":"Block","src":"1229:46:10","statements":[{"expression":{"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1247:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"1253:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2154,"nodeType":"ExpressionStatement","src":"1247:13:10"}]},"id":2156,"nodeType":"IfStatement","src":"1154:121:10","trueBody":{"id":2148,"nodeType":"Block","src":"1180:43:10","statements":[{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"1198:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2145,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"1205:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1198:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"1198:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"878:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2129,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"884:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"878:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"WhileStatement","src":"871:414:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1402:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1402:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2162,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"1413:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2166,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1419:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1419:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1413:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2167,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1431:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1413:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1402:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2177,"nodeType":"Block","src":"1485:35:10","statements":[{"expression":{"id":2175,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1506:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2110,"id":2176,"nodeType":"Return","src":"1499:10:10"}]},"id":2178,"nodeType":"IfStatement","src":"1398:122:10","trueBody":{"id":2174,"nodeType":"Block","src":"1440:39:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1461:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1461:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2110,"id":2173,"nodeType":"Return","src":"1454:14:10"}]}}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"222:407:10","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"643:14:10","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"array","nameLocation":"676:5:10","nodeType":"VariableDeclaration","scope":2180,"src":"658:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ArrayTypeName","src":"658:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"element","nameLocation":"691:7:10","nodeType":"VariableDeclaration","scope":2180,"src":"683:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"657:42:10"},"returnParameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"723:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:9:10"},"scope":2181,"src":"634:892:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2182,"src":"201:1327:10"}],"src":"85:1444:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2203]},"id":2204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2183,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2203,"linearizedBaseContracts":[2203],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2192,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":2189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2188,"id":2191,"nodeType":"Return","src":"712:17:11"}]},"id":2193,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2193,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":2203,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2201,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":2198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2197,"id":2200,"nodeType":"Return","src":"819:15:11"}]},"id":2202,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2202,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2195,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":2203,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2204,"src":"608:235:11"}],"src":"86:758:11"},"id":11},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2277]},"id":2278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2205,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"112:311:12","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2277,"linearizedBaseContracts":[2277],"name":"Counters","nameLocation":"432:8:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2209,"members":[{"constant":false,"id":2208,"mutability":"mutable","name":"_value","nameLocation":"794:6:12","nodeType":"VariableDeclaration","scope":2209,"src":"786:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:12","nodeType":"StructDefinition","scope":2277,"src":"447:374:12","visibility":"public"},{"body":{"id":2220,"nodeType":"Block","src":"901:38:12","statements":[{"expression":{"expression":{"id":2217,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"918:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2216,"id":2219,"nodeType":"Return","src":"911:21:12"}]},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:12","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"counter","nameLocation":"860:7:12","nodeType":"VariableDeclaration","scope":2221,"src":"844:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"844:7:12"},"referencedDeclaration":2209,"src":"844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:12"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:12"},"scope":2277,"src":"827:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"998:70:12","statements":[{"id":2233,"nodeType":"UncheckedBlock","src":"1008:54:12","statements":[{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2227,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1032:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"1032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"1032:19:12"}]}]},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:12","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"counter","nameLocation":"980:7:12","nodeType":"VariableDeclaration","scope":2235,"src":"964:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2223,"nodeType":"UserDefinedTypeName","pathNode":{"id":2222,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"964:7:12"},"referencedDeclaration":2209,"src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:12"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[],"src":"998:0:12"},"scope":2277,"src":"945:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"1127:176:12","statements":[{"assignments":[2242],"declarations":[{"constant":false,"id":2242,"mutability":"mutable","name":"value","nameLocation":"1145:5:12","nodeType":"VariableDeclaration","scope":2262,"src":"1137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2245,"initialValue":{"expression":{"id":2243,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"1153:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1185:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2252,"nodeType":"ExpressionStatement","src":"1177:49:12"},{"id":2261,"nodeType":"UncheckedBlock","src":"1236:61:12","statements":[{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2253,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"1260:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"1260:26:12"}]}]},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:12","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"counter","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":2263,"src":"1093:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2237,"nodeType":"UserDefinedTypeName","pathNode":{"id":2236,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"1093:7:12"},"referencedDeclaration":2209,"src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:12"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[],"src":"1127:0:12"},"scope":2277,"src":"1074:229:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"1358:35:12","statements":[{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2269,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"1368:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"1368:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"1368:18:12"}]},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:12","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"counter","nameLocation":"1340:7:12","nodeType":"VariableDeclaration","scope":2276,"src":"1324:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2265,"nodeType":"UserDefinedTypeName","pathNode":{"id":2264,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2209,"src":"1324:7:12"},"referencedDeclaration":2209,"src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2209_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:12"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"1358:0:12"},"scope":2277,"src":"1309:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2278,"src":"424:971:12"}],"src":"87:1309:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2503]},"id":2504,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2279,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"126:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2503,"linearizedBaseContracts":[2503],"name":"Strings","nameLocation":"169:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2283,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:13","nodeType":"VariableDeclaration","scope":2503,"src":"183:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2281,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2286,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:13","nodeType":"VariableDeclaration","scope":2503,"src":"247:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2284,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2364,"nodeType":"Block","src":"463:632:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"665:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"661:51:13","trueBody":{"id":2299,"nodeType":"Block","src":"677:35:13","statements":[{"expression":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2293,"id":2298,"nodeType":"Return","src":"691:10:13"}]}},{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"temp","nameLocation":"729:4:13","nodeType":"VariableDeclaration","scope":2364,"src":"721:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2304,"initialValue":{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"736:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:13"},{"assignments":[2306],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"digits","nameLocation":"759:6:13","nodeType":"VariableDeclaration","scope":2364,"src":"751:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2307,"nodeType":"VariableDeclarationStatement","src":"751:14:13"},{"body":{"id":2318,"nodeType":"Block","src":"793:57:13","statements":[{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:13","subExpression":{"id":2311,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"807:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ExpressionStatement","src":"807:8:13"},{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"829:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"829:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"782:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2319,"nodeType":"WhileStatement","src":"775:75:13"},{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"buffer","nameLocation":"872:6:13","nodeType":"VariableDeclaration","scope":2364,"src":"859:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"id":2324,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"891:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2322,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:13"},{"body":{"id":2357,"nodeType":"Block","src":"927:131:13","statements":[{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2330,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"941:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"941:11:13"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2334,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"966:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2336,"indexExpression":{"id":2335,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"973:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1009:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:13","typeDescriptions":{}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2339,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:13","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2337,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:13","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2352,"nodeType":"ExpressionStatement","src":"966:56:13"},{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"1036:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"915:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"WhileStatement","src":"908:150:13"},{"expression":{"arguments":[{"id":2361,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"1081:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2359,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:13","typeDescriptions":{}}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2293,"id":2363,"nodeType":"Return","src":"1067:21:13"}]},"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"297:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:13","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"value","nameLocation":"418:5:13","nodeType":"VariableDeclaration","scope":2365,"src":"410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:13"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"448:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:13"},"scope":2503,"src":"392:703:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"1274:255:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1288:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"1284:54:13","trueBody":{"id":2378,"nodeType":"Block","src":"1300:38:13","statements":[{"expression":{"hexValue":"30783030","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2372,"id":2377,"nodeType":"Return","src":"1314:13:13"}]}},{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"temp","nameLocation":"1355:4:13","nodeType":"VariableDeclaration","scope":2405,"src":"1347:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2383,"initialValue":{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:13"},{"assignments":[2385],"declarations":[{"constant":false,"id":2385,"mutability":"mutable","name":"length","nameLocation":"1385:6:13","nodeType":"VariableDeclaration","scope":2405,"src":"1377:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"hexValue":"30","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:13"},{"body":{"id":2398,"nodeType":"Block","src":"1423:57:13","statements":[{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:13","subExpression":{"id":2391,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1437:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"1437:8:13"},{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1459:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"1459:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"1412:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2399,"nodeType":"WhileStatement","src":"1405:75:13"},{"expression":{"arguments":[{"id":2401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"1508:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2402,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1515:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2400,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2406,2482,2502],"referencedDeclaration":2482,"src":"1496:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2372,"id":2404,"nodeType":"Return","src":"1489:33:13"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"1101:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:13","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"value","nameLocation":"1229:5:13","nodeType":"VariableDeclaration","scope":2406,"src":"1221:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:13"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"1259:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2370,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:13"},"scope":2503,"src":"1200:329:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2481,"nodeType":"Block","src":"1742:351:13","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:13","nodeType":"VariableDeclaration","scope":2481,"src":"1752:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2416,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2421,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"1788:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:13"},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2427,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"1809:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2429,"indexExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2432,"nodeType":"ExpressionStatement","src":"1809:15:13"},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2433,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"1834:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2435,"indexExpression":{"hexValue":"31","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2438,"nodeType":"ExpressionStatement","src":"1834:15:13"},{"body":{"id":2467,"nodeType":"Block","src":"1904:87:13","statements":[{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2453,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"1918:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2455,"indexExpression":{"id":2454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2456,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"1930:12:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2460,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1943:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2462,"nodeType":"ExpressionStatement","src":"1918:37:13"},{"expression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2466,"nodeType":"ExpressionStatement","src":"1969:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1892:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"initializationExpression":{"assignments":[2440],"declarations":[{"constant":false,"id":2440,"mutability":"mutable","name":"i","nameLocation":"1872:1:13","nodeType":"VariableDeclaration","scope":2468,"src":"1864:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2442,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"1880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:13"},"loopExpression":{"expression":{"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:13","subExpression":{"id":2450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1901:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2452,"nodeType":"ExpressionStatement","src":"1899:3:13"},"nodeType":"ForStatement","src":"1859:132:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2008:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"ExpressionStatement","src":"2000:55:13"},{"expression":{"arguments":[{"id":2478,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2079:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2476,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:13","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2415,"id":2480,"nodeType":"Return","src":"2065:21:13"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1535:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:13","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"1681:5:13","nodeType":"VariableDeclaration","scope":2482,"src":"1673:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"length","nameLocation":"1696:6:13","nodeType":"VariableDeclaration","scope":2482,"src":"1688:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:13"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"1727:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2413,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:13"},"scope":2503,"src":"1652:441:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"2318:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2495,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2363:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2493,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:13","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:13","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2498,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"2371:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2490,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2406,2482,2502],"referencedDeclaration":2482,"src":"2335:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2489,"id":2500,"nodeType":"Return","src":"2328:59:13"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"2099:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:13","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"addr","nameLocation":"2274:4:13","nodeType":"VariableDeclaration","scope":2502,"src":"2266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:13"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2502,"src":"2303:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2487,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:13"},"scope":2503,"src":"2245:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2504,"src":"161:2235:13"}],"src":"101:2296:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2891],"Strings":[2503]},"id":2892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2505,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2892,"sourceUnit":2504,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"163:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2891,"linearizedBaseContracts":[2891],"name":"ECDSA","nameLocation":"377:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2513,"members":[{"id":2508,"name":"NoError","nameLocation":"417:7:14","nodeType":"EnumValue","src":"417:7:14"},{"id":2509,"name":"InvalidSignature","nameLocation":"434:16:14","nodeType":"EnumValue","src":"434:16:14"},{"id":2510,"name":"InvalidSignatureLength","nameLocation":"460:22:14","nodeType":"EnumValue","src":"460:22:14"},{"id":2511,"name":"InvalidSignatureS","nameLocation":"492:17:14","nodeType":"EnumValue","src":"492:17:14"},{"id":2512,"name":"InvalidSignatureV","nameLocation":"519:17:14","nodeType":"EnumValue","src":"519:17:14"}],"name":"RecoverError","nameLocation":"394:12:14","nodeType":"EnumDefinition","src":"389:153:14"},{"body":{"id":2566,"nodeType":"Block","src":"602:577:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"616:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2520,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"625:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"625:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"src":"616:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"712:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2526,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"721:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"721:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"src":"712:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"821:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2535,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"830:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2510,"src":"830:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"src":"821:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"943:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2544,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"952:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2511,"src":"952:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"src":"943:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"1063:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2553,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"1072:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2512,"src":"1072:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"src":"1063:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2561,"nodeType":"IfStatement","src":"1059:114:14","trueBody":{"id":2560,"nodeType":"Block","src":"1104:69:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":2556,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1118:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2559,"nodeType":"ExpressionStatement","src":"1118:44:14"}]}},"id":2562,"nodeType":"IfStatement","src":"939:234:14","trueBody":{"id":2551,"nodeType":"Block","src":"984:69:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1005:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2547,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"998:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2550,"nodeType":"ExpressionStatement","src":"998:44:14"}]}},"id":2563,"nodeType":"IfStatement","src":"817:356:14","trueBody":{"id":2542,"nodeType":"Block","src":"867:66:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2538,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"881:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2541,"nodeType":"ExpressionStatement","src":"881:41:14"}]}},"id":2564,"nodeType":"IfStatement","src":"708:465:14","trueBody":{"id":2533,"nodeType":"Block","src":"752:59:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"773:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2529,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"766:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"766:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2532,"nodeType":"ExpressionStatement","src":"766:34:14"}]}},"id":2565,"nodeType":"IfStatement","src":"612:561:14","trueBody":{"id":2524,"nodeType":"Block","src":"647:55:14","statements":[{"functionReturnParameters":2518,"id":2523,"nodeType":"Return","src":"661:7:14"}]}}]},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"557:11:14","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"error","nameLocation":"582:5:14","nodeType":"VariableDeclaration","scope":2567,"src":"569:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"569:12:14"},"referencedDeclaration":2513,"src":"569:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"568:20:14"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[],"src":"602:0:14"},"scope":2891,"src":"548:631:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2612,"nodeType":"Block","src":"2347:626:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2580,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2361:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2361:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2361:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2610,"nodeType":"Block","src":"2886:81:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"2908:7:14","typeDescriptions":{}}},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2908:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2606,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"2920:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2510,"src":"2920:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"id":2608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2579,"id":2609,"nodeType":"Return","src":"2900:56:14"}]},"id":2611,"nodeType":"IfStatement","src":"2357:610:14","trueBody":{"id":2601,"nodeType":"Block","src":"2385:495:14","statements":[{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"r","nameLocation":"2407:1:14","nodeType":"VariableDeclaration","scope":2601,"src":"2399:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2586,"nodeType":"VariableDeclarationStatement","src":"2399:9:14"},{"assignments":[2588],"declarations":[{"constant":false,"id":2588,"mutability":"mutable","name":"s","nameLocation":"2430:1:14","nodeType":"VariableDeclaration","scope":2601,"src":"2422:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2422:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2589,"nodeType":"VariableDeclarationStatement","src":"2422:9:14"},{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"v","nameLocation":"2451:1:14","nodeType":"VariableDeclaration","scope":2601,"src":"2445:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2590,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2592,"nodeType":"VariableDeclarationStatement","src":"2445:7:14"},{"AST":{"nodeType":"YulBlock","src":"2653:171:14","statements":[{"nodeType":"YulAssignment","src":"2671:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2686:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:14"},"nodeType":"YulFunctionCall","src":"2682:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2676:5:14"},"nodeType":"YulFunctionCall","src":"2676:27:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2671:1:14"}]},{"nodeType":"YulAssignment","src":"2720:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2735:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:14"},"nodeType":"YulFunctionCall","src":"2731:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2725:5:14"},"nodeType":"YulFunctionCall","src":"2725:27:14"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2720:1:14"}]},{"nodeType":"YulAssignment","src":"2769:41:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2792:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:14"},"nodeType":"YulFunctionCall","src":"2788:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2782:5:14"},"nodeType":"YulFunctionCall","src":"2782:27:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2774:4:14"},"nodeType":"YulFunctionCall","src":"2774:36:14"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2769:1:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2585,"isOffset":false,"isSlot":false,"src":"2671:1:14","valueSize":1},{"declaration":2588,"isOffset":false,"isSlot":false,"src":"2720:1:14","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"2686:9:14","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"2735:9:14","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"2792:9:14","valueSize":1},{"declaration":2591,"isOffset":false,"isSlot":false,"src":"2769:1:14","valueSize":1}],"id":2593,"nodeType":"InlineAssembly","src":"2644:180:14"},{"expression":{"arguments":[{"id":2595,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"2855:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2596,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2861:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2597,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2864:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2598,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"2867:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2594,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2613,2687,2798],"referencedDeclaration":2798,"src":"2844:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2579,"id":2600,"nodeType":"Return","src":"2837:32:14"}]}}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"1185:1053:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2252:10:14","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"hash","nameLocation":"2271:4:14","nodeType":"VariableDeclaration","scope":2613,"src":"2263:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2263:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"signature","nameLocation":"2290:9:14","nodeType":"VariableDeclaration","scope":2613,"src":"2277:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:38:14"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"2324:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"2333:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"2333:12:14"},"referencedDeclaration":2513,"src":"2333:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2323:23:14"},"scope":2891,"src":"2243:730:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2639,"nodeType":"Block","src":"3846:140:14","statements":[{"assignments":[2624,2627],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"recovered","nameLocation":"3865:9:14","nodeType":"VariableDeclaration","scope":2639,"src":"3857:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"error","nameLocation":"3889:5:14","nodeType":"VariableDeclaration","scope":2639,"src":"3876:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2626,"nodeType":"UserDefinedTypeName","pathNode":{"id":2625,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"3876:12:14"},"referencedDeclaration":2513,"src":"3876:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2632,"initialValue":{"arguments":[{"id":2629,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3909:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2630,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"3915:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2628,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2613,2687,2798],"referencedDeclaration":2613,"src":"3898:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3856:69:14"},{"expression":{"arguments":[{"id":2634,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3947:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}],"id":2633,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"3935:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2513_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3935:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2636,"nodeType":"ExpressionStatement","src":"3935:18:14"},{"expression":{"id":2637,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3970:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2622,"id":2638,"nodeType":"Return","src":"3963:16:14"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"2979:775:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2640,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3768:7:14","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"hash","nameLocation":"3784:4:14","nodeType":"VariableDeclaration","scope":2640,"src":"3776:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"signature","nameLocation":"3803:9:14","nodeType":"VariableDeclaration","scope":2640,"src":"3790:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:38:14"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"3837:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3836:9:14"},"scope":2891,"src":"3759:227:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"4373:203:14","statements":[{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"s","nameLocation":"4391:1:14","nodeType":"VariableDeclaration","scope":2686,"src":"4383:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4383:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2663,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"4395:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4400:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:14","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4400:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4395:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4383:92:14"},{"assignments":[2665],"declarations":[{"constant":false,"id":2665,"mutability":"mutable","name":"v","nameLocation":"4491:1:14","nodeType":"VariableDeclaration","scope":2686,"src":"4485:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2664,"name":"uint8","nodeType":"ElementaryTypeName","src":"4485:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2678,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2670,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"4510:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:14","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4502:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4501:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4501:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2666,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:14","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4495:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4485:42:14"},{"expression":{"arguments":[{"id":2680,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"4555:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2681,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"4561:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2682,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"4564:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2683,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4567:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2679,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2613,2687,2798],"referencedDeclaration":2798,"src":"4544:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2654,"id":2685,"nodeType":"Return","src":"4537:32:14"}]},"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"3992:243:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4249:10:14","nodeType":"FunctionDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"hash","nameLocation":"4277:4:14","nodeType":"VariableDeclaration","scope":2687,"src":"4269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4269:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"r","nameLocation":"4299:1:14","nodeType":"VariableDeclaration","scope":2687,"src":"4291:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"vs","nameLocation":"4318:2:14","nodeType":"VariableDeclaration","scope":2687,"src":"4310:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4310:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4259:67:14"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"4350:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"4359:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2652,"nodeType":"UserDefinedTypeName","pathNode":{"id":2651,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"4359:12:14"},"referencedDeclaration":2513,"src":"4359:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4349:23:14"},"scope":2891,"src":"4240:336:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"4857:136:14","statements":[{"assignments":[2700,2703],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"recovered","nameLocation":"4876:9:14","nodeType":"VariableDeclaration","scope":2716,"src":"4868:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"error","nameLocation":"4900:5:14","nodeType":"VariableDeclaration","scope":2716,"src":"4887:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2702,"nodeType":"UserDefinedTypeName","pathNode":{"id":2701,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"4887:12:14"},"referencedDeclaration":2513,"src":"4887:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2705,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4920:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2706,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4926:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2707,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4929:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2704,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2613,2687,2798],"referencedDeclaration":2687,"src":"4909:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4909:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4867:65:14"},{"expression":{"arguments":[{"id":2711,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4954:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}],"id":2710,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4942:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2513_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2713,"nodeType":"ExpressionStatement","src":"4942:18:14"},{"expression":{"id":2714,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4977:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2698,"id":2715,"nodeType":"Return","src":"4970:16:14"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"4582:154:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4750:7:14","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"hash","nameLocation":"4775:4:14","nodeType":"VariableDeclaration","scope":2717,"src":"4767:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"r","nameLocation":"4797:1:14","nodeType":"VariableDeclaration","scope":2717,"src":"4789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"vs","nameLocation":"4816:2:14","nodeType":"VariableDeclaration","scope":2717,"src":"4808:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4808:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4757:67:14"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"4848:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4847:9:14"},"scope":2891,"src":"4741:252:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"5316:1454:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2736,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"6212:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6204:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:14","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6204:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6204:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2749,"nodeType":"IfStatement","src":"6200:161:14","trueBody":{"id":2748,"nodeType":"Block","src":"6285:76:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6307:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:14","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6307:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2744,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6319:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2511,"src":"6319:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6306:44:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2733,"id":2747,"nodeType":"Return","src":"6299:51:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6374:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6374:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6385:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6390:2:14","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6385:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6374:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2766,"nodeType":"IfStatement","src":"6370:100:14","trueBody":{"id":2765,"nodeType":"Block","src":"6394:76:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"6416:7:14","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6416:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2761,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6428:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2512,"src":"6428:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"id":2763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6415:44:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2733,"id":2764,"nodeType":"Return","src":"6408:51:14"}]}},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"signer","nameLocation":"6572:6:14","nodeType":"VariableDeclaration","scope":2797,"src":"6564:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2775,"initialValue":{"arguments":[{"id":2770,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6591:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2771,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6597:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2772,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"6600:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2773,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"6603:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2769,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6581:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6581:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6564:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6619:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:14","typeDescriptions":{}}},"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6629:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6619:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2791,"nodeType":"IfStatement","src":"6615:101:14","trueBody":{"id":2790,"nodeType":"Block","src":"6641:75:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:14","typeDescriptions":{}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2786,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6675:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"6675:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"id":2788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:43:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2733,"id":2789,"nodeType":"Return","src":"6655:50:14"}]}},{"expression":{"components":[{"id":2792,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6734:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2793,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"6742:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2513_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2508,"src":"6742:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"id":2795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:30:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2733,"id":2796,"nodeType":"Return","src":"6726:37:14"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"4999:163:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5176:10:14","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"hash","nameLocation":"5204:4:14","nodeType":"VariableDeclaration","scope":2798,"src":"5196:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"v","nameLocation":"5224:1:14","nodeType":"VariableDeclaration","scope":2798,"src":"5218:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2721,"name":"uint8","nodeType":"ElementaryTypeName","src":"5218:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"r","nameLocation":"5243:1:14","nodeType":"VariableDeclaration","scope":2798,"src":"5235:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5235:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"s","nameLocation":"5262:1:14","nodeType":"VariableDeclaration","scope":2798,"src":"5254:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5254:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5186:83:14"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"5293:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"5302:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"5302:12:14"},"referencedDeclaration":2513,"src":"5302:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5292:23:14"},"scope":2891,"src":"5167:1603:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2830,"nodeType":"Block","src":"7035:138:14","statements":[{"assignments":[2813,2816],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"recovered","nameLocation":"7054:9:14","nodeType":"VariableDeclaration","scope":2830,"src":"7046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"error","nameLocation":"7078:5:14","nodeType":"VariableDeclaration","scope":2830,"src":"7065:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2815,"nodeType":"UserDefinedTypeName","pathNode":{"id":2814,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"7065:12:14"},"referencedDeclaration":2513,"src":"7065:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2823,"initialValue":{"arguments":[{"id":2818,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7098:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2819,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"7104:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2820,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"7107:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2821,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"7110:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2817,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2613,2687,2798],"referencedDeclaration":2798,"src":"7087:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2513_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7045:67:14"},{"expression":{"arguments":[{"id":2825,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"7134:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2513","typeString":"enum ECDSA.RecoverError"}],"id":2824,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"7122:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2513_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7122:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"ExpressionStatement","src":"7122:18:14"},{"expression":{"id":2828,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"7157:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2811,"id":2829,"nodeType":"Return","src":"7150:16:14"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"6776:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2831,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6912:7:14","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"hash","nameLocation":"6937:4:14","nodeType":"VariableDeclaration","scope":2831,"src":"6929:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6929:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"v","nameLocation":"6957:1:14","nodeType":"VariableDeclaration","scope":2831,"src":"6951:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2802,"name":"uint8","nodeType":"ElementaryTypeName","src":"6951:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"r","nameLocation":"6976:1:14","nodeType":"VariableDeclaration","scope":2831,"src":"6968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6968:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"s","nameLocation":"6995:1:14","nodeType":"VariableDeclaration","scope":2831,"src":"6987:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6919:83:14"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2831,"src":"7026:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:14"},"scope":2891,"src":"6903:270:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2847,"nodeType":"Block","src":"7541:187:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2843,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"7715:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2840,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7662:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7662:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7662:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2839,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7652:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2838,"id":2846,"nodeType":"Return","src":"7645:76:14"}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"7179:279:14","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2848,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7472:22:14","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"hash","nameLocation":"7503:4:14","nodeType":"VariableDeclaration","scope":2848,"src":"7495:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7495:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7494:14:14"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2848,"src":"7532:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7531:9:14"},"scope":2891,"src":"7463:265:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"8093:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8137:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2862,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8188:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8188:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2860,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"8171:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2503_$","typeString":"type(library Strings)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"8171:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8171:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2865,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8199:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2857,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8120:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8120:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8120:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2856,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8110:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8110:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2855,"id":2868,"nodeType":"Return","src":"8103:99:14"}]},"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"7734:274:14","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8022:22:14","nodeType":"FunctionDefinition","parameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"s","nameLocation":"8058:1:14","nodeType":"VariableDeclaration","scope":2870,"src":"8045:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2850,"name":"bytes","nodeType":"ElementaryTypeName","src":"8045:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8044:16:14"},"returnParameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"8084:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8083:9:14"},"scope":2891,"src":"8013:196:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"8650:92:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8694:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2884,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"8706:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2885,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8723:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2881,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8677:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8677:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8677:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2880,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8667:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8667:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2879,"id":2888,"nodeType":"Return","src":"8660:75:14"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"8215:328:14","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8557:15:14","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"domainSeparator","nameLocation":"8581:15:14","nodeType":"VariableDeclaration","scope":2890,"src":"8573:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8573:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"structHash","nameLocation":"8606:10:14","nodeType":"VariableDeclaration","scope":2890,"src":"8598:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8598:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8572:45:14"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"8641:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8641:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8640:9:14"},"scope":2891,"src":"8548:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2892,"src":"369:8375:14"}],"src":"112:8633:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","exportedSymbols":{"ECDSA":[2891],"EIP712":[3045],"Strings":[2503]},"id":3046,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2893,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3046,"sourceUnit":2892,"src":"129:21:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"152:1142:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":3045,"linearizedBaseContracts":[3045],"name":"EIP712","nameLocation":"1313:6:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2897,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1589:24:15","nodeType":"VariableDeclaration","scope":3045,"src":"1563:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2899,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1645:16:15","nodeType":"VariableDeclaration","scope":3045,"src":"1619:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2901,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1693:12:15","nodeType":"VariableDeclaration","scope":3045,"src":"1667:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2903,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1738:12:15","nodeType":"VariableDeclaration","scope":3045,"src":"1712:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2905,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1782:15:15","nodeType":"VariableDeclaration","scope":3045,"src":"1756:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2907,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1829:10:15","nodeType":"VariableDeclaration","scope":3045,"src":"1803:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2971,"nodeType":"Block","src":"2510:547:15","statements":[{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"hashedName","nameLocation":"2528:10:15","nodeType":"VariableDeclaration","scope":2971,"src":"2520:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2520:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2923,"initialValue":{"arguments":[{"arguments":[{"id":2920,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2557:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2918,"name":"bytes","nodeType":"ElementaryTypeName","src":"2551:5:15","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2917,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2541:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2541:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2520:43:15"},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"hashedVersion","nameLocation":"2581:13:15","nodeType":"VariableDeclaration","scope":2971,"src":"2573:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2573:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2932,"initialValue":{"arguments":[{"arguments":[{"id":2929,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2613:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2607:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2927,"name":"bytes","nodeType":"ElementaryTypeName","src":"2607:5:15","typeDescriptions":{}}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2926,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2597:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2597:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2573:49:15"},{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"typeHash","nameLocation":"2640:8:15","nodeType":"VariableDeclaration","scope":2971,"src":"2632:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2938,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2674:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2935,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2651:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2651:117:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2632:136:15"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2939,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"2778:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2940,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2793:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2778:25:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2942,"nodeType":"ExpressionStatement","src":"2778:25:15"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2813:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2944,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2831:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2813:31:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2946,"nodeType":"ExpressionStatement","src":"2813:31:15"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2947,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2854:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2948,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2873:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2873:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"2854:32:15"},{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"2896:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2954,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2945:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2955,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2955:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2956,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2967:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2953,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2923:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2896:85:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2959,"nodeType":"ExpressionStatement","src":"2896:85:15"},{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2991:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2963,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3014:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3006:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:15","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3006:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2991:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2966,"nodeType":"ExpressionStatement","src":"2991:28:15"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3029:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2968,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3042:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3029:21:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2970,"nodeType":"ExpressionStatement","src":"3029:21:15"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"1891:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2972,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"name","nameLocation":"2481:4:15","nodeType":"VariableDeclaration","scope":2972,"src":"2467:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"version","nameLocation":"2501:7:15","nodeType":"VariableDeclaration","scope":2972,"src":"2487:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2911,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2466:43:15"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"2510:0:15"},"scope":3045,"src":"2455:602:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"3205:246:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2980,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3227:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}],"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3219:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:15","typeDescriptions":{}}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3219:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2982,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"3236:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3219:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2984,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3252:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3252:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2986,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"3269:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3252:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2998,"nodeType":"Block","src":"3349:96:15","statements":[{"expression":{"arguments":[{"id":2993,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3392:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2994,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"3404:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2995,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3418:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2992,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"3370:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2977,"id":2997,"nodeType":"Return","src":"3363:71:15"}]},"id":2999,"nodeType":"IfStatement","src":"3215:230:15","trueBody":{"id":2991,"nodeType":"Block","src":"3287:56:15","statements":[{"expression":{"id":2989,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3308:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2977,"id":2990,"nodeType":"Return","src":"3301:31:15"}]}}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"3063:75:15","text":" @dev Returns the domain separator for the current chain."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3152:18:15","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"3170:2:15"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"3196:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3196:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3195:9:15"},"scope":3045,"src":"3143:308:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"3606:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3015,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3644:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3016,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3654:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3017,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"3664:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3018,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3677:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3677:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3022,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3700:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3045","typeString":"contract EIP712"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3692:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:15","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3692:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3013,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3633:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3633:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3623:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3623:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3011,"id":3026,"nodeType":"Return","src":"3616:91:15"}]},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3466:21:15","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"typeHash","nameLocation":"3505:8:15","nodeType":"VariableDeclaration","scope":3028,"src":"3497:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3497:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"nameHash","nameLocation":"3531:8:15","nodeType":"VariableDeclaration","scope":3028,"src":"3523:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3523:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"versionHash","nameLocation":"3557:11:15","nodeType":"VariableDeclaration","scope":3028,"src":"3549:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3549:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3487:87:15"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"3597:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3597:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3596:9:15"},"scope":3045,"src":"3457:257:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3043,"nodeType":"Block","src":"4425:79:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3038,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"4464:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4464:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3040,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"4486:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3036,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4442:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2890,"src":"4442:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4442:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3042,"nodeType":"Return","src":"4435:62:15"}]},"documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"3720:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3044,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4348:16:15","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"structHash","nameLocation":"4373:10:15","nodeType":"VariableDeclaration","scope":3044,"src":"4365:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4365:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4364:20:15"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3044,"src":"4416:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4416:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4415:9:15"},"scope":3045,"src":"4339:165:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3046,"src":"1295:3211:15"}],"src":"104:4403:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3549]},"id":3550,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3047,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"128:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3549,"linearizedBaseContracts":[3549],"name":"Math","nameLocation":"210:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3052,"members":[{"id":3049,"name":"Down","nameLocation":"245:4:16","nodeType":"EnumValue","src":"245:4:16"},{"id":3050,"name":"Up","nameLocation":"287:2:16","nodeType":"EnumValue","src":"287:2:16"},{"id":3051,"name":"Zero","nameLocation":"318:4:16","nodeType":"EnumValue","src":"318:4:16"}],"name":"Rounding","nameLocation":"226:8:16","nodeType":"EnumDefinition","src":"221:122:16"},{"body":{"id":3069,"nodeType":"Block","src":"480:38:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"497:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"502:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"510:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:14:16","trueExpression":{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"506:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3061,"id":3068,"nodeType":"Return","src":"490:21:16"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"349:59:16","text":" @dev Returns the largest of two numbers."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:16","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"a","nameLocation":"434:1:16","nodeType":"VariableDeclaration","scope":3070,"src":"426:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"b","nameLocation":"445:1:16","nodeType":"VariableDeclaration","scope":3070,"src":"437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:16"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"471:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:16"},"scope":3549,"src":"413:105:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"656:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"673:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"677:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"673:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"685:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"673:13:16","trueExpression":{"id":3083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"681:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3079,"id":3086,"nodeType":"Return","src":"666:20:16"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"524:60:16","text":" @dev Returns the smallest of two numbers."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"598:3:16","nodeType":"FunctionDefinition","parameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"a","nameLocation":"610:1:16","nodeType":"VariableDeclaration","scope":3088,"src":"602:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"b","nameLocation":"621:1:16","nodeType":"VariableDeclaration","scope":3088,"src":"613:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:16"},"returnParameters":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3088,"src":"647:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:9:16"},"scope":3549,"src":"589:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"877:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"932:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3099,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"942:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"946:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"941:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3097,"id":3109,"nodeType":"Return","src":"924:28:16"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"699:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"815:7:16","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"a","nameLocation":"831:1:16","nodeType":"VariableDeclaration","scope":3111,"src":"823:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"b","nameLocation":"842:1:16","nodeType":"VariableDeclaration","scope":3111,"src":"834:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:22:16"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"868:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:9:16"},"scope":3549,"src":"806:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3135,"nodeType":"Block","src":"1229:123:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1322:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1317:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"1331:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1331:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1330:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"1340:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1330:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1344:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1317:28:16","trueExpression":{"hexValue":"30","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3120,"id":3134,"nodeType":"Return","src":"1310:35:16"}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"965:188:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1167:7:16","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"a","nameLocation":"1183:1:16","nodeType":"VariableDeclaration","scope":3136,"src":"1175:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"b","nameLocation":"1194:1:16","nodeType":"VariableDeclaration","scope":3136,"src":"1186:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:22:16"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3136,"src":"1220:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:9:16"},"scope":3549,"src":"1158:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"1796:3797:16","statements":[{"id":3256,"nodeType":"UncheckedBlock","src":"1806:3781:16","statements":[{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"prod0","nameLocation":"2135:5:16","nodeType":"VariableDeclaration","scope":3256,"src":"2127:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3150,"nodeType":"VariableDeclarationStatement","src":"2127:13:16"},{"assignments":[3152],"declarations":[{"constant":false,"id":3152,"mutability":"mutable","name":"prod1","nameLocation":"2207:5:16","nodeType":"VariableDeclaration","scope":3256,"src":"2199:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3153,"nodeType":"VariableDeclarationStatement","src":"2199:13:16"},{"AST":{"nodeType":"YulBlock","src":"2279:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2297:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2314:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2317:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2324:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2320:3:16"},"nodeType":"YulFunctionCall","src":"2320:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2307:6:16"},"nodeType":"YulFunctionCall","src":"2307:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2301:2:16","type":""}]},{"nodeType":"YulAssignment","src":"2344:18:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2357:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2360:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2353:3:16"},"nodeType":"YulFunctionCall","src":"2353:9:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2344:5:16"}]},{"nodeType":"YulAssignment","src":"2379:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2396:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2400:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2392:3:16"},"nodeType":"YulFunctionCall","src":"2392:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2411:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2415:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2408:2:16"},"nodeType":"YulFunctionCall","src":"2408:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2388:3:16"},"nodeType":"YulFunctionCall","src":"2388:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2379:5:16"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3149,"isOffset":false,"isSlot":false,"src":"2344:5:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"2400:5:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"2415:5:16","valueSize":1},{"declaration":3152,"isOffset":false,"isSlot":false,"src":"2379:5:16","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"2314:1:16","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"2357:1:16","valueSize":1},{"declaration":3141,"isOffset":false,"isSlot":false,"src":"2317:1:16","valueSize":1},{"declaration":3141,"isOffset":false,"isSlot":false,"src":"2360:1:16","valueSize":1}],"id":3154,"nodeType":"InlineAssembly","src":"2270:166:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"2517:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2517:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3163,"nodeType":"IfStatement","src":"2513:75:16","trueBody":{"id":3162,"nodeType":"Block","src":"2529:59:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"2554:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3159,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"2562:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2554:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3147,"id":3161,"nodeType":"Return","src":"2547:26:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"2698:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3166,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"2712:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2698:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2690:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2690:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"ExpressionStatement","src":"2690:28:16"},{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"remainder","nameLocation":"2982:9:16","nodeType":"VariableDeclaration","scope":3256,"src":"2974:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3172,"nodeType":"VariableDeclarationStatement","src":"2974:17:16"},{"AST":{"nodeType":"YulBlock","src":"3014:291:16","statements":[{"nodeType":"YulAssignment","src":"3083:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3103:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3106:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"3109:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3096:6:16"},"nodeType":"YulFunctionCall","src":"3096:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3083:9:16"}]},{"nodeType":"YulAssignment","src":"3203:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3216:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3226:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"3237:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3223:2:16"},"nodeType":"YulFunctionCall","src":"3223:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3212:3:16"},"nodeType":"YulFunctionCall","src":"3212:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3203:5:16"}]},{"nodeType":"YulAssignment","src":"3261:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3274:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"3281:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3270:3:16"},"nodeType":"YulFunctionCall","src":"3270:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3261:5:16"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3143,"isOffset":false,"isSlot":false,"src":"3109:11:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"3237:5:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"3261:5:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"3274:5:16","valueSize":1},{"declaration":3152,"isOffset":false,"isSlot":false,"src":"3203:5:16","valueSize":1},{"declaration":3152,"isOffset":false,"isSlot":false,"src":"3216:5:16","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"3083:9:16","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"3226:9:16","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"3281:9:16","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"3103:1:16","valueSize":1},{"declaration":3141,"isOffset":false,"isSlot":false,"src":"3106:1:16","valueSize":1}],"id":3173,"nodeType":"InlineAssembly","src":"3005:300:16"},{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"twos","nameLocation":"3620:4:16","nodeType":"VariableDeclaration","scope":3256,"src":"3612:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3627:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3642:12:16","subExpression":{"id":3177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3643:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3657:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3642:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3641:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3612:47:16"},{"AST":{"nodeType":"YulBlock","src":"3682:362:16","statements":[{"nodeType":"YulAssignment","src":"3747:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3766:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"3779:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3762:3:16"},"nodeType":"YulFunctionCall","src":"3762:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3747:11:16"}]},{"nodeType":"YulAssignment","src":"3851:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3864:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"3871:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3860:3:16"},"nodeType":"YulFunctionCall","src":"3860:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3851:5:16"}]},{"nodeType":"YulAssignment","src":"3991:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4011:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4014:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4007:3:16"},"nodeType":"YulFunctionCall","src":"4007:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4021:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4003:3:16"},"nodeType":"YulFunctionCall","src":"4003:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4028:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:16"},"nodeType":"YulFunctionCall","src":"3999:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3991:4:16"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3143,"isOffset":false,"isSlot":false,"src":"3747:11:16","valueSize":1},{"declaration":3143,"isOffset":false,"isSlot":false,"src":"3766:11:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"3851:5:16","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"3864:5:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"3779:4:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"3871:4:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"3991:4:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"4014:4:16","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"4021:4:16","valueSize":1}],"id":3184,"nodeType":"InlineAssembly","src":"3673:371:16"},{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"4110:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"4119:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3187,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"4127:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4110:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"4110:21:16"},{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"inverse","nameLocation":"4457:7:16","nodeType":"VariableDeclaration","scope":3256,"src":"4449:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4468:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4472:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4467:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4487:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4467:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4449:39:16"},{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4720:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3203,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4720:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4705:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3207,"nodeType":"ExpressionStatement","src":"4705:36:16"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4789:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4774:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"4774:36:16"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4859:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4873:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4844:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3223,"nodeType":"ExpressionStatement","src":"4844:36:16"},{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4929:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3227,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4943:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4914:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"4914:36:16"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4999:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3235,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4999:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"4984:36:16"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3240,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"5070:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3243,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5084:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5066:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5055:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"5055:36:16"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5525:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"5534:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3250,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5534:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5525:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"5525:24:16"},{"expression":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5570:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3147,"id":3255,"nodeType":"Return","src":"5563:13:16"}]}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"1358:305:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1677:6:16","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"x","nameLocation":"1701:1:16","nodeType":"VariableDeclaration","scope":3258,"src":"1693:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"y","nameLocation":"1720:1:16","nodeType":"VariableDeclaration","scope":3258,"src":"1712:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"denominator","nameLocation":"1739:11:16","nodeType":"VariableDeclaration","scope":3258,"src":"1731:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:73:16"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"result","nameLocation":"1788:6:16","nodeType":"VariableDeclaration","scope":3258,"src":"1780:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1779:16:16"},"scope":3549,"src":"1668:3925:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3301,"nodeType":"Block","src":"5873:189:16","statements":[{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"result","nameLocation":"5891:6:16","nodeType":"VariableDeclaration","scope":3301,"src":"5883:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"arguments":[{"id":3276,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"5907:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3277,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"5910:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3278,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5913:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3275,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3258,3302],"referencedDeclaration":3258,"src":"5900:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5900:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5883:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5939:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3282,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5951:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3052_$","typeString":"type(enum Math.Rounding)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3050,"src":"5951:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"src":"5939:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3286,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"5973:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3287,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"5976:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5979:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5966:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5966:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5994:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5966:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5939:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3298,"nodeType":"IfStatement","src":"5935:98:16","trueBody":{"id":3297,"nodeType":"Block","src":"5997:36:16","statements":[{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"6011:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6011:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ExpressionStatement","src":"6011:11:16"}]}},{"expression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"6049:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3272,"id":3300,"nodeType":"Return","src":"6042:13:16"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"5599:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5734:6:16","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"x","nameLocation":"5758:1:16","nodeType":"VariableDeclaration","scope":3302,"src":"5750:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"y","nameLocation":"5777:1:16","nodeType":"VariableDeclaration","scope":3302,"src":"5769:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"denominator","nameLocation":"5796:11:16","nodeType":"VariableDeclaration","scope":3302,"src":"5788:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"rounding","nameLocation":"5826:8:16","nodeType":"VariableDeclaration","scope":3302,"src":"5817:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"},"typeName":{"id":3267,"nodeType":"UserDefinedTypeName","pathNode":{"id":3266,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3052,"src":"5817:8:16"},"referencedDeclaration":3052,"src":"5817:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5740:100:16"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"5864:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5863:9:16"},"scope":3549,"src":"5725:337:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3511,"nodeType":"Block","src":"6338:2149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"6352:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6352:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3316,"nodeType":"IfStatement","src":"6348:45:16","trueBody":{"id":3315,"nodeType":"Block","src":"6360:33:16","statements":[{"expression":{"hexValue":"30","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3309,"id":3314,"nodeType":"Return","src":"6374:8:16"}]}},{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"result","nameLocation":"7066:6:16","nodeType":"VariableDeclaration","scope":3511,"src":"7058:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"7058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3320,"initialValue":{"hexValue":"31","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7058:18:16"},{"assignments":[3322],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"x","nameLocation":"7094:1:16","nodeType":"VariableDeclaration","scope":3511,"src":"7086:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3324,"initialValue":{"id":3323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"7098:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7086:13:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7113:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7113:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7124:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7113:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"7109:79:16","trueBody":{"id":3338,"nodeType":"Block","src":"7127:61:16","statements":[{"expression":{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3330,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7141:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7147:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7141:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ExpressionStatement","src":"7141:9:16"},{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7164:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7175:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7164:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"7164:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7201:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7206:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7211:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7201:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3354,"nodeType":"IfStatement","src":"7197:77:16","trueBody":{"id":3353,"nodeType":"Block","src":"7214:60:16","statements":[{"expression":{"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3345,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7228:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7234:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7228:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3348,"nodeType":"ExpressionStatement","src":"7228:8:16"},{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7250:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7250:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ExpressionStatement","src":"7250:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7287:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7287:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"7283:77:16","trueBody":{"id":3368,"nodeType":"Block","src":"7300:60:16","statements":[{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3360,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7314:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7320:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7314:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"7314:8:16"},{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7336:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7347:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7336:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"7336:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3370,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7373:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7378:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7373:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7383:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7373:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"nodeType":"IfStatement","src":"7369:76:16","trueBody":{"id":3383,"nodeType":"Block","src":"7386:59:16","statements":[{"expression":{"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7400:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7400:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3378,"nodeType":"ExpressionStatement","src":"7400:8:16"},{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7422:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7433:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7422:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3382,"nodeType":"ExpressionStatement","src":"7422:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7458:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7467:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7458:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3399,"nodeType":"IfStatement","src":"7454:74:16","trueBody":{"id":3398,"nodeType":"Block","src":"7470:58:16","statements":[{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7484:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3393,"nodeType":"ExpressionStatement","src":"7484:7:16"},{"expression":{"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7505:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7516:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7505:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3397,"nodeType":"ExpressionStatement","src":"7505:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7541:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7546:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7541:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7541:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3414,"nodeType":"IfStatement","src":"7537:74:16","trueBody":{"id":3413,"nodeType":"Block","src":"7553:58:16","statements":[{"expression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7567:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7573:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3408,"nodeType":"ExpressionStatement","src":"7567:7:16"},{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7588:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7599:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7588:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"7588:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7624:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7629:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7624:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7633:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7624:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"nodeType":"IfStatement","src":"7620:53:16","trueBody":{"id":3424,"nodeType":"Block","src":"7636:37:16","statements":[{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7650:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7650:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"7650:12:16"}]}},{"id":3510,"nodeType":"UncheckedBlock","src":"8073:408:16","statements":[{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8097:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8107:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8116:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8120:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8116:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8107:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8106:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8131:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8106:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"8097:35:16"},{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8146:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8156:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8165:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8169:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8165:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8156:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8155:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8155:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8146:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3447,"nodeType":"ExpressionStatement","src":"8146:35:16"},{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8195:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8214:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8218:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8205:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8204:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8204:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8195:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"8195:35:16"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8244:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8254:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8263:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8267:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8263:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8254:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8253:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8253:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8244:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"8244:35:16"},{"expression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8293:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8303:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8312:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8316:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8303:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8302:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8327:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8293:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3480,"nodeType":"ExpressionStatement","src":"8293:35:16"},{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8342:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8352:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8361:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8365:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8361:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8352:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8351:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8376:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8351:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8342:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3491,"nodeType":"ExpressionStatement","src":"8342:35:16"},{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8391:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8401:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8410:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8414:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8410:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8401:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8400:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8400:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8391:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3502,"nodeType":"ExpressionStatement","src":"8391:35:16"},{"expression":{"arguments":[{"id":3504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8451:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"8459:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"8463:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8459:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3503,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"8447:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8447:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3309,"id":3509,"nodeType":"Return","src":"8440:30:16"}]}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"6068:208:16","text":" @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6290:4:16","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"a","nameLocation":"6303:1:16","nodeType":"VariableDeclaration","scope":3512,"src":"6295:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6295:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6294:11:16"},"returnParameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3512,"src":"6329:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6328:9:16"},"scope":3549,"src":"6281:2206:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3547,"nodeType":"Block","src":"8663:161:16","statements":[{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"result","nameLocation":"8681:6:16","nodeType":"VariableDeclaration","scope":3547,"src":"8673:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"8673:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3528,"initialValue":{"arguments":[{"id":3526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"8695:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3525,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3512,3548],"referencedDeclaration":3512,"src":"8690:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8690:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8673:24:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"8711:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3530,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8723:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3052_$","typeString":"type(enum Math.Rounding)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3050,"src":"8723:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"src":"8711:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"8738:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"8747:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"8756:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8711:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3544,"nodeType":"IfStatement","src":"8707:88:16","trueBody":{"id":3543,"nodeType":"Block","src":"8759:36:16","statements":[{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"8773:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8783:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8773:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"8773:11:16"}]}},{"expression":{"id":3545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"8811:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3522,"id":3546,"nodeType":"Return","src":"8804:13:16"}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"8493:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3548,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:16","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"a","nameLocation":"8609:1:16","nodeType":"VariableDeclaration","scope":3548,"src":"8601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"rounding","nameLocation":"8621:8:16","nodeType":"VariableDeclaration","scope":3548,"src":"8612:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"},"typeName":{"id":3517,"nodeType":"UserDefinedTypeName","pathNode":{"id":3516,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3052,"src":"8612:8:16"},"referencedDeclaration":3052,"src":"8612:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3052","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8600:30:16"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3548,"src":"8654:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8654:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8653:9:16"},"scope":3549,"src":"8587:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3550,"src":"202:8624:16"}],"src":"103:8724:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5400]},"id":5401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3551,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"132:709:17","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5400,"linearizedBaseContracts":[5400],"name":"SafeCast","nameLocation":"850:8:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3576,"nodeType":"Block","src":"1254:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3563,"name":"uint248","nodeType":"ElementaryTypeName","src":"1286:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1281:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1281:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1272:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1300:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":3560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1264:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"ExpressionStatement","src":"1264:78:17"},{"expression":{"arguments":[{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1367:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3571,"name":"uint248","nodeType":"ElementaryTypeName","src":"1359:7:17","typeDescriptions":{}}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1359:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3559,"id":3575,"nodeType":"Return","src":"1352:21:17"}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"865:318:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1197:9:17","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"value","nameLocation":"1215:5:17","nodeType":"VariableDeclaration","scope":3577,"src":"1207:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:15:17"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"1245:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3557,"name":"uint248","nodeType":"ElementaryTypeName","src":"1245:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1244:9:17"},"scope":5400,"src":"1188:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"1775:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1807:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3588,"name":"uint240","nodeType":"ElementaryTypeName","src":"1807:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1802:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1802:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1802:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1793:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":3585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1785:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1785:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"ExpressionStatement","src":"1785:78:17"},{"expression":{"arguments":[{"id":3598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"1888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3596,"name":"uint240","nodeType":"ElementaryTypeName","src":"1880:7:17","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3584,"id":3600,"nodeType":"Return","src":"1873:21:17"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"1386:318:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1718:9:17","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"value","nameLocation":"1736:5:17","nodeType":"VariableDeclaration","scope":3602,"src":"1728:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:15:17"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3602,"src":"1766:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3582,"name":"uint240","nodeType":"ElementaryTypeName","src":"1766:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1765:9:17"},"scope":5400,"src":"1709:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3626,"nodeType":"Block","src":"2296:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2314:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3613,"name":"uint232","nodeType":"ElementaryTypeName","src":"2328:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2323:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2323:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2314:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":3610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3620,"nodeType":"ExpressionStatement","src":"2306:78:17"},{"expression":{"arguments":[{"id":3623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2409:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2401:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3621,"name":"uint232","nodeType":"ElementaryTypeName","src":"2401:7:17","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3609,"id":3625,"nodeType":"Return","src":"2394:21:17"}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"1907:318:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2239:9:17","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"2257:5:17","nodeType":"VariableDeclaration","scope":3627,"src":"2249:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2249:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2248:15:17"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"2287:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3607,"name":"uint232","nodeType":"ElementaryTypeName","src":"2287:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2286:9:17"},"scope":5400,"src":"2230:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3651,"nodeType":"Block","src":"2817:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3638,"name":"uint224","nodeType":"ElementaryTypeName","src":"2849:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2844:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2844:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2835:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":3635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"ExpressionStatement","src":"2827:78:17"},{"expression":{"arguments":[{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2930:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3646,"name":"uint224","nodeType":"ElementaryTypeName","src":"2922:7:17","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3634,"id":3650,"nodeType":"Return","src":"2915:21:17"}]},"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"2428:318:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2760:9:17","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"value","nameLocation":"2778:5:17","nodeType":"VariableDeclaration","scope":3652,"src":"2770:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:15:17"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3652,"src":"2808:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3632,"name":"uint224","nodeType":"ElementaryTypeName","src":"2808:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2807:9:17"},"scope":5400,"src":"2751:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"3338:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3663,"name":"uint216","nodeType":"ElementaryTypeName","src":"3370:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3365:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3365:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3356:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":3660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3348:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3670,"nodeType":"ExpressionStatement","src":"3348:78:17"},{"expression":{"arguments":[{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3671,"name":"uint216","nodeType":"ElementaryTypeName","src":"3443:7:17","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3659,"id":3675,"nodeType":"Return","src":"3436:21:17"}]},"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"2949:318:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3281:9:17","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"value","nameLocation":"3299:5:17","nodeType":"VariableDeclaration","scope":3677,"src":"3291:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3290:15:17"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"3329:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3657,"name":"uint216","nodeType":"ElementaryTypeName","src":"3329:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3328:9:17"},"scope":5400,"src":"3272:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3701,"nodeType":"Block","src":"3859:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3877:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3891:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3688,"name":"uint208","nodeType":"ElementaryTypeName","src":"3891:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3886:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3886:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3886:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3877:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3905:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":3685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3869:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3869:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3695,"nodeType":"ExpressionStatement","src":"3869:78:17"},{"expression":{"arguments":[{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3972:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3964:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3696,"name":"uint208","nodeType":"ElementaryTypeName","src":"3964:7:17","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3964:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3684,"id":3700,"nodeType":"Return","src":"3957:21:17"}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"3470:318:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3802:9:17","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"value","nameLocation":"3820:5:17","nodeType":"VariableDeclaration","scope":3702,"src":"3812:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:15:17"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"3850:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3682,"name":"uint208","nodeType":"ElementaryTypeName","src":"3850:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3849:9:17"},"scope":5400,"src":"3793:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"4380:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"4398:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4412:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3713,"name":"uint200","nodeType":"ElementaryTypeName","src":"4412:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4407:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4407:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4398:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":3710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4390:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3720,"nodeType":"ExpressionStatement","src":"4390:78:17"},{"expression":{"arguments":[{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"4493:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3721,"name":"uint200","nodeType":"ElementaryTypeName","src":"4485:7:17","typeDescriptions":{}}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4485:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3709,"id":3725,"nodeType":"Return","src":"4478:21:17"}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"3991:318:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4323:9:17","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"value","nameLocation":"4341:5:17","nodeType":"VariableDeclaration","scope":3727,"src":"4333:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4332:15:17"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3727,"src":"4371:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3707,"name":"uint200","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4370:9:17"},"scope":5400,"src":"4314:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3751,"nodeType":"Block","src":"4901:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"4919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4933:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3738,"name":"uint192","nodeType":"ElementaryTypeName","src":"4933:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4928:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4928:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4928:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4919:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":3735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4911:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4911:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"ExpressionStatement","src":"4911:78:17"},{"expression":{"arguments":[{"id":3748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"5014:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3746,"name":"uint192","nodeType":"ElementaryTypeName","src":"5006:7:17","typeDescriptions":{}}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5006:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3734,"id":3750,"nodeType":"Return","src":"4999:21:17"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"4512:318:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":3752,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4844:9:17","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"value","nameLocation":"4862:5:17","nodeType":"VariableDeclaration","scope":3752,"src":"4854:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:15:17"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3752,"src":"4892:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3732,"name":"uint192","nodeType":"ElementaryTypeName","src":"4892:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4891:9:17"},"scope":5400,"src":"4835:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3776,"nodeType":"Block","src":"5422:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"5440:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3763,"name":"uint184","nodeType":"ElementaryTypeName","src":"5454:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5449:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5449:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5440:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":3760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5432:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5432:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3770,"nodeType":"ExpressionStatement","src":"5432:78:17"},{"expression":{"arguments":[{"id":3773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"5535:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3771,"name":"uint184","nodeType":"ElementaryTypeName","src":"5527:7:17","typeDescriptions":{}}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3759,"id":3775,"nodeType":"Return","src":"5520:21:17"}]},"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"5033:318:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5365:9:17","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"value","nameLocation":"5383:5:17","nodeType":"VariableDeclaration","scope":3777,"src":"5375:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5374:15:17"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3777,"src":"5413:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3757,"name":"uint184","nodeType":"ElementaryTypeName","src":"5413:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5412:9:17"},"scope":5400,"src":"5356:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"5943:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"5961:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5975:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3788,"name":"uint176","nodeType":"ElementaryTypeName","src":"5975:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5970:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5970:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5961:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":3785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3795,"nodeType":"ExpressionStatement","src":"5953:78:17"},{"expression":{"arguments":[{"id":3798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"6056:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6048:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3796,"name":"uint176","nodeType":"ElementaryTypeName","src":"6048:7:17","typeDescriptions":{}}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3784,"id":3800,"nodeType":"Return","src":"6041:21:17"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"5554:318:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5886:9:17","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"value","nameLocation":"5904:5:17","nodeType":"VariableDeclaration","scope":3802,"src":"5896:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5895:15:17"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"5934:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3782,"name":"uint176","nodeType":"ElementaryTypeName","src":"5934:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5933:9:17"},"scope":5400,"src":"5877:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3826,"nodeType":"Block","src":"6464:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"6482:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6496:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3813,"name":"uint168","nodeType":"ElementaryTypeName","src":"6496:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6491:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6491:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6482:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6510:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":3810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6474:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6474:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"ExpressionStatement","src":"6474:78:17"},{"expression":{"arguments":[{"id":3823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"6577:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6569:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3821,"name":"uint168","nodeType":"ElementaryTypeName","src":"6569:7:17","typeDescriptions":{}}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6569:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3809,"id":3825,"nodeType":"Return","src":"6562:21:17"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"6075:318:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":3827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6407:9:17","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"value","nameLocation":"6425:5:17","nodeType":"VariableDeclaration","scope":3827,"src":"6417:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:15:17"},"returnParameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3827,"src":"6455:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3807,"name":"uint168","nodeType":"ElementaryTypeName","src":"6455:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6454:9:17"},"scope":5400,"src":"6398:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3851,"nodeType":"Block","src":"6985:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7003:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3838,"name":"uint160","nodeType":"ElementaryTypeName","src":"7017:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7012:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7012:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7003:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7031:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":3835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3845,"nodeType":"ExpressionStatement","src":"6995:78:17"},{"expression":{"arguments":[{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7098:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7090:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3846,"name":"uint160","nodeType":"ElementaryTypeName","src":"7090:7:17","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7090:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3834,"id":3850,"nodeType":"Return","src":"7083:21:17"}]},"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"6596:318:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6928:9:17","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"value","nameLocation":"6946:5:17","nodeType":"VariableDeclaration","scope":3852,"src":"6938:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6937:15:17"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"6976:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3832,"name":"uint160","nodeType":"ElementaryTypeName","src":"6976:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6975:9:17"},"scope":5400,"src":"6919:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3876,"nodeType":"Block","src":"7506:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"7524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3863,"name":"uint152","nodeType":"ElementaryTypeName","src":"7538:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7533:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7533:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7533:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7524:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7552:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":3860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7516:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3870,"nodeType":"ExpressionStatement","src":"7516:78:17"},{"expression":{"arguments":[{"id":3873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"7619:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7611:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3871,"name":"uint152","nodeType":"ElementaryTypeName","src":"7611:7:17","typeDescriptions":{}}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7611:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3859,"id":3875,"nodeType":"Return","src":"7604:21:17"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"7117:318:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":3877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7449:9:17","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"value","nameLocation":"7467:5:17","nodeType":"VariableDeclaration","scope":3877,"src":"7459:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7458:15:17"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3877,"src":"7497:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3857,"name":"uint152","nodeType":"ElementaryTypeName","src":"7497:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7496:9:17"},"scope":5400,"src":"7440:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"8027:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"8045:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3888,"name":"uint144","nodeType":"ElementaryTypeName","src":"8059:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3887,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8054:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8054:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8045:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":3885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8037:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8037:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3895,"nodeType":"ExpressionStatement","src":"8037:78:17"},{"expression":{"arguments":[{"id":3898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"8140:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3896,"name":"uint144","nodeType":"ElementaryTypeName","src":"8132:7:17","typeDescriptions":{}}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3884,"id":3900,"nodeType":"Return","src":"8125:21:17"}]},"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"7638:318:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7970:9:17","nodeType":"FunctionDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"value","nameLocation":"7988:5:17","nodeType":"VariableDeclaration","scope":3902,"src":"7980:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:15:17"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3902,"src":"8018:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3882,"name":"uint144","nodeType":"ElementaryTypeName","src":"8018:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8017:9:17"},"scope":5400,"src":"7961:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"8548:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"8566:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3913,"name":"uint136","nodeType":"ElementaryTypeName","src":"8580:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8575:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8575:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8566:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8594:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":3910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8558:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8558:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3920,"nodeType":"ExpressionStatement","src":"8558:78:17"},{"expression":{"arguments":[{"id":3923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"8661:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8653:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3921,"name":"uint136","nodeType":"ElementaryTypeName","src":"8653:7:17","typeDescriptions":{}}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8653:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3909,"id":3925,"nodeType":"Return","src":"8646:21:17"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"8159:318:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8491:9:17","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"value","nameLocation":"8509:5:17","nodeType":"VariableDeclaration","scope":3927,"src":"8501:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8500:15:17"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3927,"src":"8539:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3907,"name":"uint136","nodeType":"ElementaryTypeName","src":"8539:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8538:9:17"},"scope":5400,"src":"8482:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"9069:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"9087:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3938,"name":"uint128","nodeType":"ElementaryTypeName","src":"9101:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9096:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9096:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9096:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9087:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":3935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3945,"nodeType":"ExpressionStatement","src":"9079:78:17"},{"expression":{"arguments":[{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"9182:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3946,"name":"uint128","nodeType":"ElementaryTypeName","src":"9174:7:17","typeDescriptions":{}}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9174:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3934,"id":3950,"nodeType":"Return","src":"9167:21:17"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"8680:318:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9012:9:17","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"value","nameLocation":"9030:5:17","nodeType":"VariableDeclaration","scope":3952,"src":"9022:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:15:17"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3952,"src":"9060:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3932,"name":"uint128","nodeType":"ElementaryTypeName","src":"9060:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9059:9:17"},"scope":5400,"src":"9003:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3976,"nodeType":"Block","src":"9590:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"9608:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9622:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3963,"name":"uint120","nodeType":"ElementaryTypeName","src":"9622:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9617:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9617:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9617:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9608:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9636:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":3960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9600:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3970,"nodeType":"ExpressionStatement","src":"9600:78:17"},{"expression":{"arguments":[{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"9703:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9695:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3971,"name":"uint120","nodeType":"ElementaryTypeName","src":"9695:7:17","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3959,"id":3975,"nodeType":"Return","src":"9688:21:17"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"9201:318:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9533:9:17","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"value","nameLocation":"9551:5:17","nodeType":"VariableDeclaration","scope":3977,"src":"9543:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9542:15:17"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"9581:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3957,"name":"uint120","nodeType":"ElementaryTypeName","src":"9581:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9580:9:17"},"scope":5400,"src":"9524:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"10111:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"10129:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10143:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3988,"name":"uint112","nodeType":"ElementaryTypeName","src":"10143:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10138:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10138:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10138:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10129:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10157:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":3985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10121:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10121:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3995,"nodeType":"ExpressionStatement","src":"10121:78:17"},{"expression":{"arguments":[{"id":3998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"10224:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3996,"name":"uint112","nodeType":"ElementaryTypeName","src":"10216:7:17","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10216:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3984,"id":4000,"nodeType":"Return","src":"10209:21:17"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"9722:318:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10054:9:17","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"value","nameLocation":"10072:5:17","nodeType":"VariableDeclaration","scope":4002,"src":"10064:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10063:15:17"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4002,"src":"10102:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3982,"name":"uint112","nodeType":"ElementaryTypeName","src":"10102:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10101:9:17"},"scope":5400,"src":"10045:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"10632:126:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"10650:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4013,"name":"uint104","nodeType":"ElementaryTypeName","src":"10664:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10659:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10659:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10650:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10678:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10642:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10642:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4020,"nodeType":"ExpressionStatement","src":"10642:78:17"},{"expression":{"arguments":[{"id":4023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"10745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4021,"name":"uint104","nodeType":"ElementaryTypeName","src":"10737:7:17","typeDescriptions":{}}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4009,"id":4025,"nodeType":"Return","src":"10730:21:17"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"10243:318:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10575:9:17","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"value","nameLocation":"10593:5:17","nodeType":"VariableDeclaration","scope":4027,"src":"10585:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10584:15:17"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4027,"src":"10623:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4007,"name":"uint104","nodeType":"ElementaryTypeName","src":"10623:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10622:9:17"},"scope":5400,"src":"10566:192:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4051,"nodeType":"Block","src":"11147:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11165:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11179:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4038,"name":"uint96","nodeType":"ElementaryTypeName","src":"11179:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11174:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11174:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11174:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11165:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11157:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11157:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4045,"nodeType":"ExpressionStatement","src":"11157:76:17"},{"expression":{"arguments":[{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11257:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4046,"name":"uint96","nodeType":"ElementaryTypeName","src":"11250:6:17","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11250:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4034,"id":4050,"nodeType":"Return","src":"11243:20:17"}]},"documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"10764:314:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11092:8:17","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"value","nameLocation":"11109:5:17","nodeType":"VariableDeclaration","scope":4052,"src":"11101:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11100:15:17"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4052,"src":"11139:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4032,"name":"uint96","nodeType":"ElementaryTypeName","src":"11139:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11138:8:17"},"scope":5400,"src":"11083:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"11659:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"11677:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11691:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4063,"name":"uint88","nodeType":"ElementaryTypeName","src":"11691:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11686:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11686:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11686:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11677:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11669:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11669:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4070,"nodeType":"ExpressionStatement","src":"11669:76:17"},{"expression":{"arguments":[{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"11769:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4071,"name":"uint88","nodeType":"ElementaryTypeName","src":"11762:6:17","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11762:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4059,"id":4075,"nodeType":"Return","src":"11755:20:17"}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"11276:314:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11604:8:17","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"value","nameLocation":"11621:5:17","nodeType":"VariableDeclaration","scope":4077,"src":"11613:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:15:17"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4077,"src":"11651:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4057,"name":"uint88","nodeType":"ElementaryTypeName","src":"11651:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11650:8:17"},"scope":5400,"src":"11595:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4101,"nodeType":"Block","src":"12171:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"12189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12203:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4088,"name":"uint80","nodeType":"ElementaryTypeName","src":"12203:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12198:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12198:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12198:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12189:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12216:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12181:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12181:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4095,"nodeType":"ExpressionStatement","src":"12181:76:17"},{"expression":{"arguments":[{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"12281:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12274:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4096,"name":"uint80","nodeType":"ElementaryTypeName","src":"12274:6:17","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12274:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4084,"id":4100,"nodeType":"Return","src":"12267:20:17"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"11788:314:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12116:8:17","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"value","nameLocation":"12133:5:17","nodeType":"VariableDeclaration","scope":4102,"src":"12125:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12124:15:17"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4102,"src":"12163:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4082,"name":"uint80","nodeType":"ElementaryTypeName","src":"12163:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12162:8:17"},"scope":5400,"src":"12107:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4126,"nodeType":"Block","src":"12683:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12701:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12715:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4113,"name":"uint72","nodeType":"ElementaryTypeName","src":"12715:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12710:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12710:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12710:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12701:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12728:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12693:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"12693:76:17"},{"expression":{"arguments":[{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4121,"name":"uint72","nodeType":"ElementaryTypeName","src":"12786:6:17","typeDescriptions":{}}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12786:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4109,"id":4125,"nodeType":"Return","src":"12779:20:17"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"12300:314:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12628:8:17","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"value","nameLocation":"12645:5:17","nodeType":"VariableDeclaration","scope":4127,"src":"12637:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"12637:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12636:15:17"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"12675:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4107,"name":"uint72","nodeType":"ElementaryTypeName","src":"12675:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12674:8:17"},"scope":5400,"src":"12619:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"13195:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"13213:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13227:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4138,"name":"uint64","nodeType":"ElementaryTypeName","src":"13227:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13222:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13222:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13222:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13213:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13240:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13205:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13205:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4145,"nodeType":"ExpressionStatement","src":"13205:76:17"},{"expression":{"arguments":[{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"13305:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13298:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4146,"name":"uint64","nodeType":"ElementaryTypeName","src":"13298:6:17","typeDescriptions":{}}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4134,"id":4150,"nodeType":"Return","src":"13291:20:17"}]},"documentation":{"id":4128,"nodeType":"StructuredDocumentation","src":"12812:314:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13140:8:17","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"value","nameLocation":"13157:5:17","nodeType":"VariableDeclaration","scope":4152,"src":"13149:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13148:15:17"},"returnParameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4152,"src":"13187:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4132,"name":"uint64","nodeType":"ElementaryTypeName","src":"13187:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13186:8:17"},"scope":5400,"src":"13131:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4176,"nodeType":"Block","src":"13707:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"13725:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13739:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4163,"name":"uint56","nodeType":"ElementaryTypeName","src":"13739:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13734:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13734:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13734:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13725:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13717:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13717:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4170,"nodeType":"ExpressionStatement","src":"13717:76:17"},{"expression":{"arguments":[{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"13817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13810:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4171,"name":"uint56","nodeType":"ElementaryTypeName","src":"13810:6:17","typeDescriptions":{}}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13810:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4159,"id":4175,"nodeType":"Return","src":"13803:20:17"}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"13324:314:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13652:8:17","nodeType":"FunctionDefinition","parameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"value","nameLocation":"13669:5:17","nodeType":"VariableDeclaration","scope":4177,"src":"13661:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"13661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13660:15:17"},"returnParameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4177,"src":"13699:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4157,"name":"uint56","nodeType":"ElementaryTypeName","src":"13699:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13698:8:17"},"scope":5400,"src":"13643:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4201,"nodeType":"Block","src":"14219:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"14237:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14251:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4188,"name":"uint48","nodeType":"ElementaryTypeName","src":"14251:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14246:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14246:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14237:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14264:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14229:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14229:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4195,"nodeType":"ExpressionStatement","src":"14229:76:17"},{"expression":{"arguments":[{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"14329:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14322:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4196,"name":"uint48","nodeType":"ElementaryTypeName","src":"14322:6:17","typeDescriptions":{}}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14322:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4184,"id":4200,"nodeType":"Return","src":"14315:20:17"}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"13836:314:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14164:8:17","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"value","nameLocation":"14181:5:17","nodeType":"VariableDeclaration","scope":4202,"src":"14173:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"14173:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14172:15:17"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4202,"src":"14211:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4182,"name":"uint48","nodeType":"ElementaryTypeName","src":"14211:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14210:8:17"},"scope":5400,"src":"14155:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"14731:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"14749:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14763:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4213,"name":"uint40","nodeType":"ElementaryTypeName","src":"14763:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14758:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14758:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14758:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14749:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14776:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14741:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14741:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4220,"nodeType":"ExpressionStatement","src":"14741:76:17"},{"expression":{"arguments":[{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"14841:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14834:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4221,"name":"uint40","nodeType":"ElementaryTypeName","src":"14834:6:17","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14834:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4209,"id":4225,"nodeType":"Return","src":"14827:20:17"}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"14348:314:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14676:8:17","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"value","nameLocation":"14693:5:17","nodeType":"VariableDeclaration","scope":4227,"src":"14685:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"14685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14684:15:17"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"14723:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4207,"name":"uint40","nodeType":"ElementaryTypeName","src":"14723:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14722:8:17"},"scope":5400,"src":"14667:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4251,"nodeType":"Block","src":"15243:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"15261:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15275:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4238,"name":"uint32","nodeType":"ElementaryTypeName","src":"15275:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15270:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15270:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15270:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15261:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15288:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15253:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15253:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"ExpressionStatement","src":"15253:76:17"},{"expression":{"arguments":[{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"15353:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4246,"name":"uint32","nodeType":"ElementaryTypeName","src":"15346:6:17","typeDescriptions":{}}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15346:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4234,"id":4250,"nodeType":"Return","src":"15339:20:17"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"14860:314:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4252,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15188:8:17","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"value","nameLocation":"15205:5:17","nodeType":"VariableDeclaration","scope":4252,"src":"15197:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"15197:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15196:15:17"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4252,"src":"15235:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4232,"name":"uint32","nodeType":"ElementaryTypeName","src":"15235:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15234:8:17"},"scope":5400,"src":"15179:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"15755:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"15773:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15787:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4263,"name":"uint24","nodeType":"ElementaryTypeName","src":"15787:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4262,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15782:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15782:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15782:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15773:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15765:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15765:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4270,"nodeType":"ExpressionStatement","src":"15765:76:17"},{"expression":{"arguments":[{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"15865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15858:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4271,"name":"uint24","nodeType":"ElementaryTypeName","src":"15858:6:17","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15858:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4259,"id":4275,"nodeType":"Return","src":"15851:20:17"}]},"documentation":{"id":4253,"nodeType":"StructuredDocumentation","src":"15372:314:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15700:8:17","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"value","nameLocation":"15717:5:17","nodeType":"VariableDeclaration","scope":4277,"src":"15709:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15708:15:17"},"returnParameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4277,"src":"15747:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4257,"name":"uint24","nodeType":"ElementaryTypeName","src":"15747:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15746:8:17"},"scope":5400,"src":"15691:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"16267:123:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"16285:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16299:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4288,"name":"uint16","nodeType":"ElementaryTypeName","src":"16299:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16294:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16294:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16294:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16285:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16312:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16277:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16277:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"ExpressionStatement","src":"16277:76:17"},{"expression":{"arguments":[{"id":4298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"16377:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16370:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4296,"name":"uint16","nodeType":"ElementaryTypeName","src":"16370:6:17","typeDescriptions":{}}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4284,"id":4300,"nodeType":"Return","src":"16363:20:17"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"15884:314:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16212:8:17","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"value","nameLocation":"16229:5:17","nodeType":"VariableDeclaration","scope":4302,"src":"16221:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16220:15:17"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4302,"src":"16259:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4282,"name":"uint16","nodeType":"ElementaryTypeName","src":"16259:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16258:8:17"},"scope":5400,"src":"16203:187:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"16773:120:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"16791:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16805:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4313,"name":"uint8","nodeType":"ElementaryTypeName","src":"16805:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16800:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16800:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16800:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16791:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16817:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16783:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16783:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4320,"nodeType":"ExpressionStatement","src":"16783:74:17"},{"expression":{"arguments":[{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"16880:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16874:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4321,"name":"uint8","nodeType":"ElementaryTypeName","src":"16874:5:17","typeDescriptions":{}}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16874:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4309,"id":4325,"nodeType":"Return","src":"16867:19:17"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"16396:310:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16720:7:17","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"value","nameLocation":"16736:5:17","nodeType":"VariableDeclaration","scope":4327,"src":"16728:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"16728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16727:15:17"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"16766:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4307,"name":"uint8","nodeType":"ElementaryTypeName","src":"16766:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16765:7:17"},"scope":5400,"src":"16711:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"17167:103:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"17185:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17194:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17185:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17197:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17177:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17177:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4341,"nodeType":"ExpressionStatement","src":"17177:55:17"},{"expression":{"arguments":[{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"17257:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"17249:7:17","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17249:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4334,"id":4346,"nodeType":"Return","src":"17242:21:17"}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"16899:198:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17111:9:17","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"value","nameLocation":"17128:5:17","nodeType":"VariableDeclaration","scope":4348,"src":"17121:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4329,"name":"int256","nodeType":"ElementaryTypeName","src":"17121:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17120:14:17"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"17158:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"17158:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17157:9:17"},"scope":5400,"src":"17102:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"17694:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"17712:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17726:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4359,"name":"int248","nodeType":"ElementaryTypeName","src":"17726:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":4358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17721:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17721:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"17721:16:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17712:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"17741:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17755:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4366,"name":"int248","nodeType":"ElementaryTypeName","src":"17755:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":4365,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17750:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17750:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"17750:16:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17741:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17712:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17768:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17704:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17704:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4374,"nodeType":"ExpressionStatement","src":"17704:106:17"},{"expression":{"arguments":[{"id":4377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"17834:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17827:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4375,"name":"int248","nodeType":"ElementaryTypeName","src":"17827:6:17","typeDescriptions":{}}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17827:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":4355,"id":4379,"nodeType":"Return","src":"17820:20:17"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"17276:350:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17640:8:17","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"17656:5:17","nodeType":"VariableDeclaration","scope":4381,"src":"17649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4350,"name":"int256","nodeType":"ElementaryTypeName","src":"17649:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17648:14:17"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"17686:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4353,"name":"int248","nodeType":"ElementaryTypeName","src":"17686:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17685:8:17"},"scope":5400,"src":"17631:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"18271:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"18289:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18303:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4392,"name":"int240","nodeType":"ElementaryTypeName","src":"18303:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":4391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18298:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18298:16:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18289:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"18318:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18332:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4399,"name":"int240","nodeType":"ElementaryTypeName","src":"18332:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":4398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18327:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18327:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18327:16:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18289:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18345:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18281:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18281:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4407,"nodeType":"ExpressionStatement","src":"18281:106:17"},{"expression":{"arguments":[{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"18411:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18404:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4408,"name":"int240","nodeType":"ElementaryTypeName","src":"18404:6:17","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18404:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":4388,"id":4412,"nodeType":"Return","src":"18397:20:17"}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"17853:350:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18217:8:17","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"value","nameLocation":"18233:5:17","nodeType":"VariableDeclaration","scope":4414,"src":"18226:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4383,"name":"int256","nodeType":"ElementaryTypeName","src":"18226:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18225:14:17"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"18263:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4386,"name":"int240","nodeType":"ElementaryTypeName","src":"18263:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18262:8:17"},"scope":5400,"src":"18208:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4446,"nodeType":"Block","src":"18848:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"18866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18880:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4425,"name":"int232","nodeType":"ElementaryTypeName","src":"18880:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":4424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18875:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18875:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18875:16:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18866:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"18895:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18909:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4432,"name":"int232","nodeType":"ElementaryTypeName","src":"18909:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":4431,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18904:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18904:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18904:16:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18895:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18866:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18922:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18858:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18858:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4440,"nodeType":"ExpressionStatement","src":"18858:106:17"},{"expression":{"arguments":[{"id":4443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"18988:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18981:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4441,"name":"int232","nodeType":"ElementaryTypeName","src":"18981:6:17","typeDescriptions":{}}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18981:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":4421,"id":4445,"nodeType":"Return","src":"18974:20:17"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"18430:350:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18794:8:17","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"value","nameLocation":"18810:5:17","nodeType":"VariableDeclaration","scope":4447,"src":"18803:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4416,"name":"int256","nodeType":"ElementaryTypeName","src":"18803:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18802:14:17"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4447,"src":"18840:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4419,"name":"int232","nodeType":"ElementaryTypeName","src":"18840:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18839:8:17"},"scope":5400,"src":"18785:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"19425:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"19443:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19457:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4458,"name":"int224","nodeType":"ElementaryTypeName","src":"19457:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":4457,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19452:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19452:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"19452:16:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19443:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"19472:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19486:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4465,"name":"int224","nodeType":"ElementaryTypeName","src":"19486:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":4464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19481:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19481:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"19481:16:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19472:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19443:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19499:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19435:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19435:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4473,"nodeType":"ExpressionStatement","src":"19435:106:17"},{"expression":{"arguments":[{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"19565:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19558:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4474,"name":"int224","nodeType":"ElementaryTypeName","src":"19558:6:17","typeDescriptions":{}}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19558:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":4454,"id":4478,"nodeType":"Return","src":"19551:20:17"}]},"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"19007:350:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19371:8:17","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"value","nameLocation":"19387:5:17","nodeType":"VariableDeclaration","scope":4480,"src":"19380:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4449,"name":"int256","nodeType":"ElementaryTypeName","src":"19380:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19379:14:17"},"returnParameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"19417:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4452,"name":"int224","nodeType":"ElementaryTypeName","src":"19417:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19416:8:17"},"scope":5400,"src":"19362:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4512,"nodeType":"Block","src":"20002:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"20020:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20034:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4491,"name":"int216","nodeType":"ElementaryTypeName","src":"20034:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":4490,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20029:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20029:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20029:16:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20020:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"20049:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20063:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4498,"name":"int216","nodeType":"ElementaryTypeName","src":"20063:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":4497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20058:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20058:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20058:16:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20049:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20020:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20076:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20012:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20012:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4506,"nodeType":"ExpressionStatement","src":"20012:106:17"},{"expression":{"arguments":[{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"20142:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20135:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4507,"name":"int216","nodeType":"ElementaryTypeName","src":"20135:6:17","typeDescriptions":{}}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20135:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":4487,"id":4511,"nodeType":"Return","src":"20128:20:17"}]},"documentation":{"id":4481,"nodeType":"StructuredDocumentation","src":"19584:350:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19948:8:17","nodeType":"FunctionDefinition","parameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"value","nameLocation":"19964:5:17","nodeType":"VariableDeclaration","scope":4513,"src":"19957:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4482,"name":"int256","nodeType":"ElementaryTypeName","src":"19957:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19956:14:17"},"returnParameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4513,"src":"19994:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4485,"name":"int216","nodeType":"ElementaryTypeName","src":"19994:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19993:8:17"},"scope":5400,"src":"19939:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4545,"nodeType":"Block","src":"20579:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"20597:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4524,"name":"int208","nodeType":"ElementaryTypeName","src":"20611:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":4523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20606:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20606:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20606:16:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20597:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"20626:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4531,"name":"int208","nodeType":"ElementaryTypeName","src":"20640:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":4530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20635:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20635:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20635:16:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20626:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20597:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20653:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20589:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20589:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"20589:106:17"},{"expression":{"arguments":[{"id":4542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"20719:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20712:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4540,"name":"int208","nodeType":"ElementaryTypeName","src":"20712:6:17","typeDescriptions":{}}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20712:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":4520,"id":4544,"nodeType":"Return","src":"20705:20:17"}]},"documentation":{"id":4514,"nodeType":"StructuredDocumentation","src":"20161:350:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20525:8:17","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"value","nameLocation":"20541:5:17","nodeType":"VariableDeclaration","scope":4546,"src":"20534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4515,"name":"int256","nodeType":"ElementaryTypeName","src":"20534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20533:14:17"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4546,"src":"20571:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4518,"name":"int208","nodeType":"ElementaryTypeName","src":"20571:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20570:8:17"},"scope":5400,"src":"20516:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"21156:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"21174:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21188:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4557,"name":"int200","nodeType":"ElementaryTypeName","src":"21188:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":4556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21183:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21183:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21183:16:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21174:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"21203:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21217:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4564,"name":"int200","nodeType":"ElementaryTypeName","src":"21217:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":4563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21212:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21212:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21212:16:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21203:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21174:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21166:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21166:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4572,"nodeType":"ExpressionStatement","src":"21166:106:17"},{"expression":{"arguments":[{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"21296:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21289:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4573,"name":"int200","nodeType":"ElementaryTypeName","src":"21289:6:17","typeDescriptions":{}}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21289:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":4553,"id":4577,"nodeType":"Return","src":"21282:20:17"}]},"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"20738:350:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21102:8:17","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"value","nameLocation":"21118:5:17","nodeType":"VariableDeclaration","scope":4579,"src":"21111:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4548,"name":"int256","nodeType":"ElementaryTypeName","src":"21111:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21110:14:17"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"21148:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4551,"name":"int200","nodeType":"ElementaryTypeName","src":"21148:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21147:8:17"},"scope":5400,"src":"21093:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"21733:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"21751:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21765:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4590,"name":"int192","nodeType":"ElementaryTypeName","src":"21765:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":4589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21760:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21760:16:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21751:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"21780:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21794:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4597,"name":"int192","nodeType":"ElementaryTypeName","src":"21794:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":4596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21789:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21789:16:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21780:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21751:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21807:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21743:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21743:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4605,"nodeType":"ExpressionStatement","src":"21743:106:17"},{"expression":{"arguments":[{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"21873:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21866:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4606,"name":"int192","nodeType":"ElementaryTypeName","src":"21866:6:17","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21866:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":4586,"id":4610,"nodeType":"Return","src":"21859:20:17"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"21315:350:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21679:8:17","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"value","nameLocation":"21695:5:17","nodeType":"VariableDeclaration","scope":4612,"src":"21688:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4581,"name":"int256","nodeType":"ElementaryTypeName","src":"21688:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21687:14:17"},"returnParameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"21725:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4584,"name":"int192","nodeType":"ElementaryTypeName","src":"21725:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21724:8:17"},"scope":5400,"src":"21670:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"22310:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"22328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22342:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4623,"name":"int184","nodeType":"ElementaryTypeName","src":"22342:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":4622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22337:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22337:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22337:16:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22328:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"22357:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22371:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4630,"name":"int184","nodeType":"ElementaryTypeName","src":"22371:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":4629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22366:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22366:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22366:16:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22357:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22328:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22384:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22320:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22320:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4638,"nodeType":"ExpressionStatement","src":"22320:106:17"},{"expression":{"arguments":[{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"22450:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22443:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4639,"name":"int184","nodeType":"ElementaryTypeName","src":"22443:6:17","typeDescriptions":{}}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22443:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":4619,"id":4643,"nodeType":"Return","src":"22436:20:17"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"21892:350:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22256:8:17","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"value","nameLocation":"22272:5:17","nodeType":"VariableDeclaration","scope":4645,"src":"22265:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4614,"name":"int256","nodeType":"ElementaryTypeName","src":"22265:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22264:14:17"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"22302:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4617,"name":"int184","nodeType":"ElementaryTypeName","src":"22302:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22301:8:17"},"scope":5400,"src":"22247:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4677,"nodeType":"Block","src":"22887:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"22905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22919:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4656,"name":"int176","nodeType":"ElementaryTypeName","src":"22919:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":4655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22914:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22914:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22914:16:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22905:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"22934:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22948:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4663,"name":"int176","nodeType":"ElementaryTypeName","src":"22948:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":4662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22943:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22943:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22943:16:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22934:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22905:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22961:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22897:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22897:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4671,"nodeType":"ExpressionStatement","src":"22897:106:17"},{"expression":{"arguments":[{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"23027:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4672,"name":"int176","nodeType":"ElementaryTypeName","src":"23020:6:17","typeDescriptions":{}}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23020:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":4652,"id":4676,"nodeType":"Return","src":"23013:20:17"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"22469:350:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4678,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22833:8:17","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"value","nameLocation":"22849:5:17","nodeType":"VariableDeclaration","scope":4678,"src":"22842:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4647,"name":"int256","nodeType":"ElementaryTypeName","src":"22842:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22841:14:17"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4678,"src":"22879:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4650,"name":"int176","nodeType":"ElementaryTypeName","src":"22879:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22878:8:17"},"scope":5400,"src":"22824:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4710,"nodeType":"Block","src":"23464:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"23482:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23496:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4689,"name":"int168","nodeType":"ElementaryTypeName","src":"23496:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":4688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23491:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23491:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"23491:16:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23482:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"23511:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23525:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4696,"name":"int168","nodeType":"ElementaryTypeName","src":"23525:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":4695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23520:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23520:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"23520:16:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23511:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23482:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23538:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23474:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23474:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4704,"nodeType":"ExpressionStatement","src":"23474:106:17"},{"expression":{"arguments":[{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"23604:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23597:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4705,"name":"int168","nodeType":"ElementaryTypeName","src":"23597:6:17","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23597:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":4685,"id":4709,"nodeType":"Return","src":"23590:20:17"}]},"documentation":{"id":4679,"nodeType":"StructuredDocumentation","src":"23046:350:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23410:8:17","nodeType":"FunctionDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"value","nameLocation":"23426:5:17","nodeType":"VariableDeclaration","scope":4711,"src":"23419:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4680,"name":"int256","nodeType":"ElementaryTypeName","src":"23419:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23418:14:17"},"returnParameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"23456:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4683,"name":"int168","nodeType":"ElementaryTypeName","src":"23456:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23455:8:17"},"scope":5400,"src":"23401:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4743,"nodeType":"Block","src":"24041:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"24059:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24073:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4722,"name":"int160","nodeType":"ElementaryTypeName","src":"24073:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":4721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24068:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24068:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24068:16:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24059:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"24088:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24102:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4729,"name":"int160","nodeType":"ElementaryTypeName","src":"24102:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":4728,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24097:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24097:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24097:16:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24088:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24059:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24115:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24051:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24051:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"ExpressionStatement","src":"24051:106:17"},{"expression":{"arguments":[{"id":4740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"24181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4738,"name":"int160","nodeType":"ElementaryTypeName","src":"24174:6:17","typeDescriptions":{}}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24174:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":4718,"id":4742,"nodeType":"Return","src":"24167:20:17"}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"23623:350:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4744,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23987:8:17","nodeType":"FunctionDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"24003:5:17","nodeType":"VariableDeclaration","scope":4744,"src":"23996:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4713,"name":"int256","nodeType":"ElementaryTypeName","src":"23996:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23995:14:17"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4744,"src":"24033:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4716,"name":"int160","nodeType":"ElementaryTypeName","src":"24033:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24032:8:17"},"scope":5400,"src":"23978:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4776,"nodeType":"Block","src":"24618:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"24636:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24650:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4755,"name":"int152","nodeType":"ElementaryTypeName","src":"24650:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":4754,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24645:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24645:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24645:16:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24636:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"24665:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24679:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4762,"name":"int152","nodeType":"ElementaryTypeName","src":"24679:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":4761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24674:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24674:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24674:16:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24665:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24636:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24692:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24628:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24628:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4770,"nodeType":"ExpressionStatement","src":"24628:106:17"},{"expression":{"arguments":[{"id":4773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"24758:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24751:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4771,"name":"int152","nodeType":"ElementaryTypeName","src":"24751:6:17","typeDescriptions":{}}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24751:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":4751,"id":4775,"nodeType":"Return","src":"24744:20:17"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"24200:350:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24564:8:17","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"value","nameLocation":"24580:5:17","nodeType":"VariableDeclaration","scope":4777,"src":"24573:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4746,"name":"int256","nodeType":"ElementaryTypeName","src":"24573:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24572:14:17"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4777,"src":"24610:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4749,"name":"int152","nodeType":"ElementaryTypeName","src":"24610:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24609:8:17"},"scope":5400,"src":"24555:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4809,"nodeType":"Block","src":"25195:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"25213:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25227:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4788,"name":"int144","nodeType":"ElementaryTypeName","src":"25227:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":4787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25222:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25222:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25222:16:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25213:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"25242:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25256:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4795,"name":"int144","nodeType":"ElementaryTypeName","src":"25256:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":4794,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25251:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25251:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25251:16:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25242:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25213:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25269:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25205:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25205:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4803,"nodeType":"ExpressionStatement","src":"25205:106:17"},{"expression":{"arguments":[{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"25335:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4804,"name":"int144","nodeType":"ElementaryTypeName","src":"25328:6:17","typeDescriptions":{}}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25328:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":4784,"id":4808,"nodeType":"Return","src":"25321:20:17"}]},"documentation":{"id":4778,"nodeType":"StructuredDocumentation","src":"24777:350:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25141:8:17","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"value","nameLocation":"25157:5:17","nodeType":"VariableDeclaration","scope":4810,"src":"25150:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4779,"name":"int256","nodeType":"ElementaryTypeName","src":"25150:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25149:14:17"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4810,"src":"25187:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4782,"name":"int144","nodeType":"ElementaryTypeName","src":"25187:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25186:8:17"},"scope":5400,"src":"25132:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4842,"nodeType":"Block","src":"25772:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"25790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25804:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4821,"name":"int136","nodeType":"ElementaryTypeName","src":"25804:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":4820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25799:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25799:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25799:16:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25790:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"25819:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25833:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4828,"name":"int136","nodeType":"ElementaryTypeName","src":"25833:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":4827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25828:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25828:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25828:16:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25819:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25790:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25846:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25782:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25782:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4836,"nodeType":"ExpressionStatement","src":"25782:106:17"},{"expression":{"arguments":[{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"25912:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4837,"name":"int136","nodeType":"ElementaryTypeName","src":"25905:6:17","typeDescriptions":{}}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25905:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":4817,"id":4841,"nodeType":"Return","src":"25898:20:17"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"25354:350:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25718:8:17","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"value","nameLocation":"25734:5:17","nodeType":"VariableDeclaration","scope":4843,"src":"25727:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4812,"name":"int256","nodeType":"ElementaryTypeName","src":"25727:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25726:14:17"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4843,"src":"25764:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4815,"name":"int136","nodeType":"ElementaryTypeName","src":"25764:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25763:8:17"},"scope":5400,"src":"25709:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4875,"nodeType":"Block","src":"26349:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"26367:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4854,"name":"int128","nodeType":"ElementaryTypeName","src":"26381:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":4853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26376:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26376:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26376:16:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26367:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"26396:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26410:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4861,"name":"int128","nodeType":"ElementaryTypeName","src":"26410:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":4860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26405:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26405:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26405:16:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26396:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26367:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26423:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26359:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26359:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4869,"nodeType":"ExpressionStatement","src":"26359:106:17"},{"expression":{"arguments":[{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"26489:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26482:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4870,"name":"int128","nodeType":"ElementaryTypeName","src":"26482:6:17","typeDescriptions":{}}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26482:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":4850,"id":4874,"nodeType":"Return","src":"26475:20:17"}]},"documentation":{"id":4844,"nodeType":"StructuredDocumentation","src":"25931:350:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":4876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26295:8:17","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"value","nameLocation":"26311:5:17","nodeType":"VariableDeclaration","scope":4876,"src":"26304:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4845,"name":"int256","nodeType":"ElementaryTypeName","src":"26304:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26303:14:17"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4876,"src":"26341:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4848,"name":"int128","nodeType":"ElementaryTypeName","src":"26341:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26340:8:17"},"scope":5400,"src":"26286:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4908,"nodeType":"Block","src":"26926:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"26944:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26958:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4887,"name":"int120","nodeType":"ElementaryTypeName","src":"26958:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":4886,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26953:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26953:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26953:16:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26944:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"26973:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26987:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4894,"name":"int120","nodeType":"ElementaryTypeName","src":"26987:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":4893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26982:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26982:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26982:16:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26973:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26944:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27000:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26936:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26936:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"ExpressionStatement","src":"26936:106:17"},{"expression":{"arguments":[{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27066:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27059:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4903,"name":"int120","nodeType":"ElementaryTypeName","src":"27059:6:17","typeDescriptions":{}}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27059:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":4883,"id":4907,"nodeType":"Return","src":"27052:20:17"}]},"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"26508:350:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26872:8:17","nodeType":"FunctionDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"value","nameLocation":"26888:5:17","nodeType":"VariableDeclaration","scope":4909,"src":"26881:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4878,"name":"int256","nodeType":"ElementaryTypeName","src":"26881:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26880:14:17"},"returnParameters":{"id":4883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4909,"src":"26918:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4881,"name":"int120","nodeType":"ElementaryTypeName","src":"26918:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26917:8:17"},"scope":5400,"src":"26863:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"27503:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"27521:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27535:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4920,"name":"int112","nodeType":"ElementaryTypeName","src":"27535:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":4919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27530:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27530:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"27530:16:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27521:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"27550:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27564:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4927,"name":"int112","nodeType":"ElementaryTypeName","src":"27564:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":4926,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27559:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27559:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"27559:16:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27550:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27521:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27513:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27513:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"27513:106:17"},{"expression":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"27643:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27636:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4936,"name":"int112","nodeType":"ElementaryTypeName","src":"27636:6:17","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27636:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":4916,"id":4940,"nodeType":"Return","src":"27629:20:17"}]},"documentation":{"id":4910,"nodeType":"StructuredDocumentation","src":"27085:350:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27449:8:17","nodeType":"FunctionDefinition","parameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"value","nameLocation":"27465:5:17","nodeType":"VariableDeclaration","scope":4942,"src":"27458:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4911,"name":"int256","nodeType":"ElementaryTypeName","src":"27458:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27457:14:17"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"27495:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4914,"name":"int112","nodeType":"ElementaryTypeName","src":"27495:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27494:8:17"},"scope":5400,"src":"27440:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4974,"nodeType":"Block","src":"28080:153:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"28098:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28112:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4953,"name":"int104","nodeType":"ElementaryTypeName","src":"28112:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":4952,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28107:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28107:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28107:16:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28098:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"28127:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28141:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4960,"name":"int104","nodeType":"ElementaryTypeName","src":"28141:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":4959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28136:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28136:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28136:16:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28127:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28098:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28154:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28090:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28090:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"ExpressionStatement","src":"28090:106:17"},{"expression":{"arguments":[{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"28220:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28213:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4969,"name":"int104","nodeType":"ElementaryTypeName","src":"28213:6:17","typeDescriptions":{}}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28213:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":4949,"id":4973,"nodeType":"Return","src":"28206:20:17"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"27662:350:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28026:8:17","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"28042:5:17","nodeType":"VariableDeclaration","scope":4975,"src":"28035:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4944,"name":"int256","nodeType":"ElementaryTypeName","src":"28035:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28034:14:17"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"28072:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4947,"name":"int104","nodeType":"ElementaryTypeName","src":"28072:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28071:8:17"},"scope":5400,"src":"28017:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5007,"nodeType":"Block","src":"28650:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"28668:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28682:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4986,"name":"int96","nodeType":"ElementaryTypeName","src":"28682:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":4985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28677:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28677:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28677:15:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28668:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"28696:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28710:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4993,"name":"int96","nodeType":"ElementaryTypeName","src":"28710:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":4992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28705:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28705:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28705:15:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28696:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28668:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28722:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28660:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28660:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5001,"nodeType":"ExpressionStatement","src":"28660:103:17"},{"expression":{"arguments":[{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"28786:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28780:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5002,"name":"int96","nodeType":"ElementaryTypeName","src":"28780:5:17","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28780:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":4982,"id":5006,"nodeType":"Return","src":"28773:19:17"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"28239:345:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28598:7:17","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"value","nameLocation":"28613:5:17","nodeType":"VariableDeclaration","scope":5008,"src":"28606:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4977,"name":"int256","nodeType":"ElementaryTypeName","src":"28606:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28605:14:17"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5008,"src":"28643:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4980,"name":"int96","nodeType":"ElementaryTypeName","src":"28643:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28642:7:17"},"scope":5400,"src":"28589:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"29216:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"29234:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29248:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5019,"name":"int88","nodeType":"ElementaryTypeName","src":"29248:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29243:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29243:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29243:15:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29234:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"29262:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29276:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5026,"name":"int88","nodeType":"ElementaryTypeName","src":"29276:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":5025,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29271:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29271:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29271:15:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29262:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29234:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29288:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29226:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29226:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5034,"nodeType":"ExpressionStatement","src":"29226:103:17"},{"expression":{"arguments":[{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"29352:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29346:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5035,"name":"int88","nodeType":"ElementaryTypeName","src":"29346:5:17","typeDescriptions":{}}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29346:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":5015,"id":5039,"nodeType":"Return","src":"29339:19:17"}]},"documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"28805:345:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29164:7:17","nodeType":"FunctionDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"value","nameLocation":"29179:5:17","nodeType":"VariableDeclaration","scope":5041,"src":"29172:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5010,"name":"int256","nodeType":"ElementaryTypeName","src":"29172:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29171:14:17"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"29209:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5013,"name":"int88","nodeType":"ElementaryTypeName","src":"29209:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29208:7:17"},"scope":5400,"src":"29155:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"29782:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"29800:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29814:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5052,"name":"int80","nodeType":"ElementaryTypeName","src":"29814:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29809:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29809:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29809:15:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29800:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"29828:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29842:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5059,"name":"int80","nodeType":"ElementaryTypeName","src":"29842:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":5058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29837:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29837:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29837:15:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29828:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29800:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29854:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29792:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29792:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"ExpressionStatement","src":"29792:103:17"},{"expression":{"arguments":[{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"29918:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29912:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5068,"name":"int80","nodeType":"ElementaryTypeName","src":"29912:5:17","typeDescriptions":{}}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29912:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":5048,"id":5072,"nodeType":"Return","src":"29905:19:17"}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"29371:345:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29730:7:17","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"value","nameLocation":"29745:5:17","nodeType":"VariableDeclaration","scope":5074,"src":"29738:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5043,"name":"int256","nodeType":"ElementaryTypeName","src":"29738:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29737:14:17"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5074,"src":"29775:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5046,"name":"int80","nodeType":"ElementaryTypeName","src":"29775:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29774:7:17"},"scope":5400,"src":"29721:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"30348:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"30366:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30380:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5085,"name":"int72","nodeType":"ElementaryTypeName","src":"30380:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30375:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30375:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30375:15:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30366:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"30394:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30408:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5092,"name":"int72","nodeType":"ElementaryTypeName","src":"30408:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":5091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30403:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30403:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30403:15:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30394:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30366:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30420:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30358:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30358:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5100,"nodeType":"ExpressionStatement","src":"30358:103:17"},{"expression":{"arguments":[{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"30484:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30478:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5101,"name":"int72","nodeType":"ElementaryTypeName","src":"30478:5:17","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30478:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":5081,"id":5105,"nodeType":"Return","src":"30471:19:17"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"29937:345:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30296:7:17","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"value","nameLocation":"30311:5:17","nodeType":"VariableDeclaration","scope":5107,"src":"30304:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5076,"name":"int256","nodeType":"ElementaryTypeName","src":"30304:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30303:14:17"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"30341:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5079,"name":"int72","nodeType":"ElementaryTypeName","src":"30341:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30340:7:17"},"scope":5400,"src":"30287:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5139,"nodeType":"Block","src":"30914:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"30932:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30946:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5118,"name":"int64","nodeType":"ElementaryTypeName","src":"30946:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5117,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30941:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30941:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30941:15:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30932:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"30960:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30974:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5125,"name":"int64","nodeType":"ElementaryTypeName","src":"30974:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":5124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30969:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30969:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30969:15:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30960:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30932:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30986:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30924:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30924:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5133,"nodeType":"ExpressionStatement","src":"30924:103:17"},{"expression":{"arguments":[{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"31050:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31044:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5134,"name":"int64","nodeType":"ElementaryTypeName","src":"31044:5:17","typeDescriptions":{}}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31044:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":5114,"id":5138,"nodeType":"Return","src":"31037:19:17"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"30503:345:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5140,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30862:7:17","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"30877:5:17","nodeType":"VariableDeclaration","scope":5140,"src":"30870:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5109,"name":"int256","nodeType":"ElementaryTypeName","src":"30870:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30869:14:17"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5140,"src":"30907:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5112,"name":"int64","nodeType":"ElementaryTypeName","src":"30907:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30906:7:17"},"scope":5400,"src":"30853:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"31480:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"31498:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31512:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5151,"name":"int56","nodeType":"ElementaryTypeName","src":"31512:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31507:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31507:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"31507:15:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31498:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"31526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31540:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5158,"name":"int56","nodeType":"ElementaryTypeName","src":"31540:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":5157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31535:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31535:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"31535:15:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31526:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31498:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31552:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31490:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31490:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5166,"nodeType":"ExpressionStatement","src":"31490:103:17"},{"expression":{"arguments":[{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"31616:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31610:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5167,"name":"int56","nodeType":"ElementaryTypeName","src":"31610:5:17","typeDescriptions":{}}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31610:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":5147,"id":5171,"nodeType":"Return","src":"31603:19:17"}]},"documentation":{"id":5141,"nodeType":"StructuredDocumentation","src":"31069:345:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31428:7:17","nodeType":"FunctionDefinition","parameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"value","nameLocation":"31443:5:17","nodeType":"VariableDeclaration","scope":5173,"src":"31436:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5142,"name":"int256","nodeType":"ElementaryTypeName","src":"31436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31435:14:17"},"returnParameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5173,"src":"31473:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5145,"name":"int56","nodeType":"ElementaryTypeName","src":"31473:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31472:7:17"},"scope":5400,"src":"31419:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5205,"nodeType":"Block","src":"32046:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"32064:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32078:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5184,"name":"int48","nodeType":"ElementaryTypeName","src":"32078:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32073:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32073:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32073:15:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32064:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"32092:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32106:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5191,"name":"int48","nodeType":"ElementaryTypeName","src":"32106:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":5190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32101:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32101:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32101:15:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32092:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32064:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32118:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32056:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32056:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5199,"nodeType":"ExpressionStatement","src":"32056:103:17"},{"expression":{"arguments":[{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"32182:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32176:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5200,"name":"int48","nodeType":"ElementaryTypeName","src":"32176:5:17","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32176:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":5180,"id":5204,"nodeType":"Return","src":"32169:19:17"}]},"documentation":{"id":5174,"nodeType":"StructuredDocumentation","src":"31635:345:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5206,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31994:7:17","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"32009:5:17","nodeType":"VariableDeclaration","scope":5206,"src":"32002:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5175,"name":"int256","nodeType":"ElementaryTypeName","src":"32002:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32001:14:17"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5206,"src":"32039:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5178,"name":"int48","nodeType":"ElementaryTypeName","src":"32039:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32038:7:17"},"scope":5400,"src":"31985:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5238,"nodeType":"Block","src":"32612:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"32630:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32644:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5217,"name":"int40","nodeType":"ElementaryTypeName","src":"32644:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32639:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32639:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32639:15:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32630:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"32658:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32672:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5224,"name":"int40","nodeType":"ElementaryTypeName","src":"32672:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":5223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32667:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32667:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32667:15:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32658:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32630:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32684:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32622:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32622:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5232,"nodeType":"ExpressionStatement","src":"32622:103:17"},{"expression":{"arguments":[{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"32748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32742:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5233,"name":"int40","nodeType":"ElementaryTypeName","src":"32742:5:17","typeDescriptions":{}}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32742:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":5213,"id":5237,"nodeType":"Return","src":"32735:19:17"}]},"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"32201:345:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5239,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32560:7:17","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"value","nameLocation":"32575:5:17","nodeType":"VariableDeclaration","scope":5239,"src":"32568:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5208,"name":"int256","nodeType":"ElementaryTypeName","src":"32568:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32567:14:17"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5239,"src":"32605:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5211,"name":"int40","nodeType":"ElementaryTypeName","src":"32605:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32604:7:17"},"scope":5400,"src":"32551:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"33178:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"33196:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33210:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5250,"name":"int32","nodeType":"ElementaryTypeName","src":"33210:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":5249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33205:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33205:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33205:15:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33196:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"33224:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33238:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5257,"name":"int32","nodeType":"ElementaryTypeName","src":"33238:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":5256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33233:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33233:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33233:15:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33224:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33196:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33250:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33188:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33188:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5265,"nodeType":"ExpressionStatement","src":"33188:103:17"},{"expression":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"33314:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33308:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5266,"name":"int32","nodeType":"ElementaryTypeName","src":"33308:5:17","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33308:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":5246,"id":5270,"nodeType":"Return","src":"33301:19:17"}]},"documentation":{"id":5240,"nodeType":"StructuredDocumentation","src":"32767:345:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33126:7:17","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"value","nameLocation":"33141:5:17","nodeType":"VariableDeclaration","scope":5272,"src":"33134:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5241,"name":"int256","nodeType":"ElementaryTypeName","src":"33134:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33133:14:17"},"returnParameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"33171:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5244,"name":"int32","nodeType":"ElementaryTypeName","src":"33171:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33170:7:17"},"scope":5400,"src":"33117:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"33744:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"33762:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33776:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5283,"name":"int24","nodeType":"ElementaryTypeName","src":"33776:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":5282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33771:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33771:15:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33762:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"33790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33804:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5290,"name":"int24","nodeType":"ElementaryTypeName","src":"33804:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":5289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33799:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33799:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33799:15:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33790:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33762:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33816:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33754:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33754:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5298,"nodeType":"ExpressionStatement","src":"33754:103:17"},{"expression":{"arguments":[{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"33880:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33874:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5299,"name":"int24","nodeType":"ElementaryTypeName","src":"33874:5:17","typeDescriptions":{}}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33874:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":5279,"id":5303,"nodeType":"Return","src":"33867:19:17"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"33333:345:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33692:7:17","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"value","nameLocation":"33707:5:17","nodeType":"VariableDeclaration","scope":5305,"src":"33700:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5274,"name":"int256","nodeType":"ElementaryTypeName","src":"33700:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33699:14:17"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5305,"src":"33737:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5277,"name":"int24","nodeType":"ElementaryTypeName","src":"33737:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33736:7:17"},"scope":5400,"src":"33683:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5337,"nodeType":"Block","src":"34310:149:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"34328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34342:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5316,"name":"int16","nodeType":"ElementaryTypeName","src":"34342:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":5315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34337:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34337:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34337:15:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34328:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"34356:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34370:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5323,"name":"int16","nodeType":"ElementaryTypeName","src":"34370:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":5322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34365:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34365:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34365:15:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34356:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34328:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34382:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34320:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34320:103:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5331,"nodeType":"ExpressionStatement","src":"34320:103:17"},{"expression":{"arguments":[{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"34446:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34440:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5332,"name":"int16","nodeType":"ElementaryTypeName","src":"34440:5:17","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34440:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":5312,"id":5336,"nodeType":"Return","src":"34433:19:17"}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"33899:345:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34258:7:17","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"value","nameLocation":"34273:5:17","nodeType":"VariableDeclaration","scope":5338,"src":"34266:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"34266:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34265:14:17"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5338,"src":"34303:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5310,"name":"int16","nodeType":"ElementaryTypeName","src":"34303:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34302:7:17"},"scope":5400,"src":"34249:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"34869:145:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"34887:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34901:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5349,"name":"int8","nodeType":"ElementaryTypeName","src":"34901:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":5348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34896:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34896:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34896:14:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34887:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"34914:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34928:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5356,"name":"int8","nodeType":"ElementaryTypeName","src":"34928:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":5355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34923:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34923:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34923:14:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34914:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34887:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34939:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34879:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34879:100:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5364,"nodeType":"ExpressionStatement","src":"34879:100:17"},{"expression":{"arguments":[{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"35001:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34996:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5365,"name":"int8","nodeType":"ElementaryTypeName","src":"34996:4:17","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34996:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":5345,"id":5369,"nodeType":"Return","src":"34989:18:17"}]},"documentation":{"id":5339,"nodeType":"StructuredDocumentation","src":"34465:340:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34819:6:17","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"value","nameLocation":"34833:5:17","nodeType":"VariableDeclaration","scope":5371,"src":"34826:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5340,"name":"int256","nodeType":"ElementaryTypeName","src":"34826:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34825:14:17"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"34863:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5343,"name":"int8","nodeType":"ElementaryTypeName","src":"34863:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34862:6:17"},"scope":5400,"src":"34810:204:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"35292:233:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"35409:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35431:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5384,"name":"int256","nodeType":"ElementaryTypeName","src":"35431:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35426:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35426:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"35426:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35418:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"35418:7:17","typeDescriptions":{}}},"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35418:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35409:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35445:42:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35401:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35401:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"ExpressionStatement","src":"35401:87:17"},{"expression":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"35512:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35505:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5393,"name":"int256","nodeType":"ElementaryTypeName","src":"35505:6:17","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35505:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5378,"id":5397,"nodeType":"Return","src":"35498:20:17"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"35020:203:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35237:8:17","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"35254:5:17","nodeType":"VariableDeclaration","scope":5399,"src":"35246:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"35246:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35245:15:17"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"35284:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5376,"name":"int256","nodeType":"ElementaryTypeName","src":"35284:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35283:8:17"},"scope":5400,"src":"35228:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5401,"src":"842:34685:17"}],"src":"107:35421:17"},"id":17},"contracts/Megatech.sol":{"ast":{"absolutePath":"contracts/Megatech.sol","exportedSymbols":{"Arrays":[2181],"Context":[2203],"Counters":[2277],"ECDSA":[2891],"EIP712":[3045],"ERC20":[776],"ERC20Burnable":[898],"ERC20Permit":[2060],"ERC20Snapshot":[1226],"ERC20Votes":[1863],"IERC20":[854],"IERC20Metadata":[1888],"IERC20Permit":[2096],"IVotes":[190],"Math":[3549],"Megatech":[5556],"Ownable":[112],"SafeCast":[5400],"Strings":[2503]},"id":5557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":5402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":5401,"src":"32:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2892,"src":"90:62:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","id":5404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":3046,"src":"153:69:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","id":5405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2097,"src":"223:79:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":5406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2278,"src":"303:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":5407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":3550,"src":"356:53:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":5408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2182,"src":"410:50:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":5409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2204,"src":"461:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":855,"src":"513:56:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":113,"src":"570:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":5412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":1889,"src":"623:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":777,"src":"699:55:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":5414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":2061,"src":"755:78:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":5415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":1864,"src":"834:71:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol","id":5416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":1227,"src":"906:74:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":5417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5557,"sourceUnit":899,"src":"981:74:18","symbolAliases":[],"unitAlias":""},{"id":5418,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"1057:23:18"},{"abstract":false,"baseContracts":[{"baseName":{"id":5420,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"1162:5:18"},"id":5421,"nodeType":"InheritanceSpecifier","src":"1162:5:18"},{"baseName":{"id":5422,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"1173:13:18"},"id":5423,"nodeType":"InheritanceSpecifier","src":"1173:13:18"},{"baseName":{"id":5424,"name":"ERC20Snapshot","nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"1192:13:18"},"id":5425,"nodeType":"InheritanceSpecifier","src":"1192:13:18"},{"baseName":{"id":5426,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1211:7:18"},"id":5427,"nodeType":"InheritanceSpecifier","src":"1211:7:18"},{"baseName":{"id":5428,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"1224:11:18"},"id":5429,"nodeType":"InheritanceSpecifier","src":"1224:11:18"},{"baseName":{"id":5430,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"1241:10:18"},"id":5431,"nodeType":"InheritanceSpecifier","src":"1241:10:18"}],"contractDependencies":[112,190,776,854,898,1226,1863,1888,2060,2096,2203,3045],"contractKind":"contract","documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"1082:55:18","text":"@custom:security-contact marketing@megatechmgt.com"},"fullyImplemented":true,"id":5556,"linearizedBaseContracts":[5556,1863,2060,3045,2096,112,1226,898,776,1888,854,2203,190],"name":"Megatech","nameLocation":"1146:8:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":5452,"nodeType":"Block","src":"1321:63:18","statements":[{"expression":{"arguments":[{"expression":{"id":5442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1337:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1337:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"35303030303030303030","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1349:10:18","typeDescriptions":{"typeIdentifier":"t_rational_5000000000_by_1","typeString":"int_const 5000000000"},"value":"5000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5446,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1366:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1362:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1349:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5537],"referencedDeclaration":5537,"src":"1331:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5451,"nodeType":"ExpressionStatement","src":"1331:46:18"}]},"id":5453,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d65676174656368","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1278:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d1ade095c5e622ced784c7129565ae8426cca88028ca2b7f8e26c345e267af5","typeString":"literal_string \"Megatech\""},"value":"Megatech"},{"hexValue":"4d4754","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1290:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e56e5fd57c1779a57e3e4289a3e364593953860bd492900dedf166323cf0db1c","typeString":"literal_string \"MGT\""},"value":"MGT"}],"id":5436,"modifierName":{"id":5433,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"1272:5:18"},"nodeType":"ModifierInvocation","src":"1272:24:18"},{"arguments":[{"hexValue":"4d65676174656368","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1309:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d1ade095c5e622ced784c7129565ae8426cca88028ca2b7f8e26c345e267af5","typeString":"literal_string \"Megatech\""},"value":"Megatech"}],"id":5439,"modifierName":{"id":5437,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"1297:11:18"},"nodeType":"ModifierInvocation","src":"1297:23:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[],"src":"1269:2:18"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[],"src":"1321:0:18"},"scope":5556,"src":"1258:126:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5461,"nodeType":"Block","src":"1427:28:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5458,"name":"_snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1437:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_uint256_$","typeString":"function () returns (uint256)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1437:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5460,"nodeType":"ExpressionStatement","src":"1437:11:18"}]},"functionSelector":"9711715a","id":5462,"implemented":true,"kind":"function","modifiers":[{"id":5456,"modifierName":{"id":5455,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1417:9:18"},"nodeType":"ModifierInvocation","src":"1417:9:18"}],"name":"snapshot","nameLocation":"1399:8:18","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[],"src":"1407:2:18"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[],"src":"1427:0:18"},"scope":5556,"src":"1390:65:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5476,"nodeType":"Block","src":"1520:34:18","statements":[{"expression":{"arguments":[{"id":5472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"1536:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5473,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1540:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5471,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5537],"referencedDeclaration":5537,"src":"1530:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5475,"nodeType":"ExpressionStatement","src":"1530:17:18"}]},"functionSelector":"40c10f19","id":5477,"implemented":true,"kind":"function","modifiers":[{"id":5469,"modifierName":{"id":5468,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1510:9:18"},"nodeType":"ModifierInvocation","src":"1510:9:18"}],"name":"mint","nameLocation":"1470:4:18","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"to","nameLocation":"1483:2:18","nodeType":"VariableDeclaration","scope":5477,"src":"1475:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5463,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5466,"mutability":"mutable","name":"amount","nameLocation":"1495:6:18","nodeType":"VariableDeclaration","scope":5477,"src":"1487:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1474:28:18"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[],"src":"1520:0:18"},"scope":5556,"src":"1461:93:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[764,1082],"body":{"id":5497,"nodeType":"Block","src":"1770:61:18","statements":[{"expression":{"arguments":[{"id":5492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"1807:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"1813:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"1817:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5489,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1780:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Megatech_$5556_$","typeString":"type(contract super Megatech)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1780:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1780:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"ExpressionStatement","src":"1780:44:18"}]},"id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1637:20:18","nodeType":"FunctionDefinition","overrides":{"id":5487,"nodeType":"OverrideSpecifier","overrides":[{"id":5485,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"1748:5:18"},{"id":5486,"name":"ERC20Snapshot","nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"1755:13:18"}],"src":"1739:30:18"},"parameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"from","nameLocation":"1675:4:18","nodeType":"VariableDeclaration","scope":5498,"src":"1667:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5478,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5481,"mutability":"mutable","name":"to","nameLocation":"1697:2:18","nodeType":"VariableDeclaration","scope":5498,"src":"1689:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5480,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5483,"mutability":"mutable","name":"amount","nameLocation":"1717:6:18","nodeType":"VariableDeclaration","scope":5498,"src":"1709:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1657:72:18"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[],"src":"1770:0:18"},"scope":5556,"src":"1628:203:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[775,1630],"body":{"id":5518,"nodeType":"Block","src":"1975:60:18","statements":[{"expression":{"arguments":[{"id":5513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"2011:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2017:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"2021:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5510,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1985:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Megatech_$5556_$","typeString":"type(contract super Megatech)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"1985:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1985:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5517,"nodeType":"ExpressionStatement","src":"1985:43:18"}]},"id":5519,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"1846:19:18","nodeType":"FunctionDefinition","overrides":{"id":5508,"nodeType":"OverrideSpecifier","overrides":[{"id":5506,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"1956:5:18"},{"id":5507,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"1963:10:18"}],"src":"1947:27:18"},"parameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"from","nameLocation":"1883:4:18","nodeType":"VariableDeclaration","scope":5519,"src":"1875:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"to","nameLocation":"1905:2:18","nodeType":"VariableDeclaration","scope":5519,"src":"1897:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5501,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5504,"mutability":"mutable","name":"amount","nameLocation":"1925:6:18","nodeType":"VariableDeclaration","scope":5519,"src":"1917:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:72:18"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[],"src":"1975:0:18"},"scope":5556,"src":"1837:198:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[593,1577],"body":{"id":5536,"nodeType":"Block","src":"2141:40:18","statements":[{"expression":{"arguments":[{"id":5532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"2163:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"2167:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5529,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2151:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Megatech_$5556_$","typeString":"type(contract super Megatech)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1577,"src":"2151:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2151:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"ExpressionStatement","src":"2151:23:18"}]},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2050:5:18","nodeType":"FunctionDefinition","overrides":{"id":5527,"nodeType":"OverrideSpecifier","overrides":[{"id":5525,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"2118:5:18"},{"id":5526,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"2125:10:18"}],"src":"2109:27:18"},"parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"to","nameLocation":"2064:2:18","nodeType":"VariableDeclaration","scope":5537,"src":"2056:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5520,"name":"address","nodeType":"ElementaryTypeName","src":"2056:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"amount","nameLocation":"2076:6:18","nodeType":"VariableDeclaration","scope":5537,"src":"2068:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2055:28:18"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[],"src":"2141:0:18"},"scope":5556,"src":"2041:140:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[665,1600],"body":{"id":5554,"nodeType":"Block","src":"2292:45:18","statements":[{"expression":{"arguments":[{"id":5550,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"2314:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"2323:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5547,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Megatech_$5556_$","typeString":"type(contract super Megatech)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1600,"src":"2302:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2302:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"2302:28:18"}]},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2196:5:18","nodeType":"FunctionDefinition","overrides":{"id":5545,"nodeType":"OverrideSpecifier","overrides":[{"id":5543,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":776,"src":"2269:5:18"},{"id":5544,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"2276:10:18"}],"src":"2260:27:18"},"parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"account","nameLocation":"2210:7:18","nodeType":"VariableDeclaration","scope":5555,"src":"2202:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5538,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"amount","nameLocation":"2227:6:18","nodeType":"VariableDeclaration","scope":5555,"src":"2219:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:33:18"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[],"src":"2292:0:18"},"scope":5556,"src":"2187:150:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5557,"src":"1137:1202:18"}],"src":"32:2308:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:19","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:19","statements":[{"nodeType":"YulAssignment","src":"112:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:19"},"nodeType":"YulFunctionCall","src":"137:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:19"},"nodeType":"YulFunctionCall","src":"121:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:19"},"nodeType":"YulFunctionCall","src":"196:21:19"},"nodeType":"YulExpressionStatement","src":"196:21:19"},{"nodeType":"YulVariableDeclaration","src":"226:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:19"},"nodeType":"YulFunctionCall","src":"237:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:19"},"nodeType":"YulFunctionCall","src":"293:12:19"},"nodeType":"YulExpressionStatement","src":"293:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:19"},"nodeType":"YulFunctionCall","src":"268:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:19"},"nodeType":"YulFunctionCall","src":"265:25:19"},"nodeType":"YulIf","src":"262:2:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:19"},"nodeType":"YulFunctionCall","src":"316:39:19"},"nodeType":"YulExpressionStatement","src":"316:39:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:19","type":""}],"src":"7:354:19"},{"body":{"nodeType":"YulBlock","src":"454:215:19","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:19"},"nodeType":"YulFunctionCall","src":"505:12:19"},"nodeType":"YulExpressionStatement","src":"505:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:19"},"nodeType":"YulFunctionCall","src":"478:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:19"},"nodeType":"YulFunctionCall","src":"474:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:19"},"nodeType":"YulFunctionCall","src":"467:35:19"},"nodeType":"YulIf","src":"464:2:19"},{"nodeType":"YulVariableDeclaration","src":"528:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:19"},"nodeType":"YulFunctionCall","src":"542:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:19","type":""}]},{"nodeType":"YulAssignment","src":"564:99:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:19"},"nodeType":"YulFunctionCall","src":"632:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:19"},"nodeType":"YulFunctionCall","src":"573:90:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:19","type":""}],"src":"381:288:19"},{"body":{"nodeType":"YulBlock","src":"789:538:19","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:19"},"nodeType":"YulFunctionCall","src":"837:12:19"},"nodeType":"YulExpressionStatement","src":"837:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:19"},"nodeType":"YulFunctionCall","src":"806:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:19"},"nodeType":"YulFunctionCall","src":"802:32:19"},"nodeType":"YulIf","src":"799:2:19"},{"nodeType":"YulBlock","src":"861:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:19"},"nodeType":"YulFunctionCall","src":"896:17:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:19"},"nodeType":"YulFunctionCall","src":"890:24:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:19"},"nodeType":"YulFunctionCall","src":"963:12:19"},"nodeType":"YulExpressionStatement","src":"963:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:19"},"nodeType":"YulFunctionCall","src":"930:30:19"},"nodeType":"YulIf","src":"927:2:19"},{"nodeType":"YulAssignment","src":"991:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:19"},"nodeType":"YulFunctionCall","src":"1043:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:19"},"nodeType":"YulFunctionCall","src":"1001:74:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:19"}]}]},{"nodeType":"YulBlock","src":"1095:225:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:19"},"nodeType":"YulFunctionCall","src":"1130:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:19"},"nodeType":"YulFunctionCall","src":"1124:25:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:19"},"nodeType":"YulFunctionCall","src":"1198:12:19"},"nodeType":"YulExpressionStatement","src":"1198:12:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:19"},"nodeType":"YulFunctionCall","src":"1165:30:19"},"nodeType":"YulIf","src":"1162:2:19"},{"nodeType":"YulAssignment","src":"1226:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:19"},"nodeType":"YulFunctionCall","src":"1278:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:19"},"nodeType":"YulFunctionCall","src":"1236:74:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:19"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:19","type":""}],"src":"675:652:19"},{"body":{"nodeType":"YulBlock","src":"1374:88:19","statements":[{"nodeType":"YulAssignment","src":"1384:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:19"},"nodeType":"YulFunctionCall","src":"1394:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:19"},"nodeType":"YulFunctionCall","src":"1423:33:19"},"nodeType":"YulExpressionStatement","src":"1423:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:19","type":""}],"src":"1333:129:19"},{"body":{"nodeType":"YulBlock","src":"1508:35:19","statements":[{"nodeType":"YulAssignment","src":"1518:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:19"},"nodeType":"YulFunctionCall","src":"1528:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:19","type":""}],"src":"1468:75:19"},{"body":{"nodeType":"YulBlock","src":"1616:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:19"},"nodeType":"YulFunctionCall","src":"1723:18:19"},"nodeType":"YulExpressionStatement","src":"1723:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:19"},"nodeType":"YulFunctionCall","src":"1690:30:19"},"nodeType":"YulIf","src":"1687:2:19"},{"nodeType":"YulAssignment","src":"1753:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:19"},"nodeType":"YulFunctionCall","src":"1761:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:19"}]},{"nodeType":"YulAssignment","src":"1827:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:19"},"nodeType":"YulFunctionCall","src":"1835:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:19","type":""}],"src":"1549:308:19"},{"body":{"nodeType":"YulBlock","src":"1912:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:19"},"nodeType":"YulFunctionCall","src":"2012:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:19"},"nodeType":"YulFunctionCall","src":"2031:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:19"},"nodeType":"YulFunctionCall","src":"2025:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:19"},"nodeType":"YulFunctionCall","src":"2005:39:19"},"nodeType":"YulExpressionStatement","src":"2005:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:19"},"nodeType":"YulFunctionCall","src":"1949:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:19","statements":[{"nodeType":"YulAssignment","src":"1965:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:19"},"nodeType":"YulFunctionCall","src":"1970:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:19","statements":[]},"src":"1941:113:19"},{"body":{"nodeType":"YulBlock","src":"2088:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:19"},"nodeType":"YulFunctionCall","src":"2134:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:19"},"nodeType":"YulFunctionCall","src":"2127:27:19"},"nodeType":"YulExpressionStatement","src":"2127:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:19"},"nodeType":"YulFunctionCall","src":"2066:13:19"},"nodeType":"YulIf","src":"2063:2:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:19","type":""}],"src":"1863:307:19"},{"body":{"nodeType":"YulBlock","src":"2227:269:19","statements":[{"nodeType":"YulAssignment","src":"2237:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:19"},"nodeType":"YulFunctionCall","src":"2247:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:19"},"nodeType":"YulFunctionCall","src":"2294:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:19","statements":[{"nodeType":"YulAssignment","src":"2359:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:19"},"nodeType":"YulFunctionCall","src":"2369:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:19"},"nodeType":"YulFunctionCall","src":"2318:26:19"},"nodeType":"YulIf","src":"2315:2:19"},{"body":{"nodeType":"YulBlock","src":"2448:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:19"},"nodeType":"YulFunctionCall","src":"2462:18:19"},"nodeType":"YulExpressionStatement","src":"2462:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:19"},"nodeType":"YulFunctionCall","src":"2432:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:19"},"nodeType":"YulFunctionCall","src":"2409:38:19"},"nodeType":"YulIf","src":"2406:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:19","type":""}],"src":"2176:320:19"},{"body":{"nodeType":"YulBlock","src":"2545:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:19"},"nodeType":"YulFunctionCall","src":"2585:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:19"},"nodeType":"YulFunctionCall","src":"2573:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:19"},"nodeType":"YulFunctionCall","src":"2726:18:19"},"nodeType":"YulExpressionStatement","src":"2726:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:19"},"nodeType":"YulFunctionCall","src":"2664:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:19"},"nodeType":"YulFunctionCall","src":"2700:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:19"},"nodeType":"YulFunctionCall","src":"2661:62:19"},"nodeType":"YulIf","src":"2658:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:19"},"nodeType":"YulFunctionCall","src":"2755:22:19"},"nodeType":"YulExpressionStatement","src":"2755:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:19","type":""}],"src":"2502:281:19"},{"body":{"nodeType":"YulBlock","src":"2817:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:19"},"nodeType":"YulFunctionCall","src":"2827:88:19"},"nodeType":"YulExpressionStatement","src":"2827:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:19"},"nodeType":"YulFunctionCall","src":"2924:15:19"},"nodeType":"YulExpressionStatement","src":"2924:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:19"},"nodeType":"YulFunctionCall","src":"2948:15:19"},"nodeType":"YulExpressionStatement","src":"2948:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:19"},{"body":{"nodeType":"YulBlock","src":"3003:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:19"},"nodeType":"YulFunctionCall","src":"3013:88:19"},"nodeType":"YulExpressionStatement","src":"3013:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:19"},"nodeType":"YulFunctionCall","src":"3110:15:19"},"nodeType":"YulExpressionStatement","src":"3110:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:19"},"nodeType":"YulFunctionCall","src":"3134:15:19"},"nodeType":"YulExpressionStatement","src":"3134:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:19"},{"body":{"nodeType":"YulBlock","src":"3209:54:19","statements":[{"nodeType":"YulAssignment","src":"3219:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:19"},"nodeType":"YulFunctionCall","src":"3233:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:19"},"nodeType":"YulFunctionCall","src":"3249:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:19"},"nodeType":"YulFunctionCall","src":"3229:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:19","type":""}],"src":"3161:102:19"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620015d9380380620015d9833981810160405281019062000037919062000193565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61125380620003866000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d19565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610cfe565b60405180910390f35b61010461032b565b6040516101119190610e1b565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610cfe565b60405180910390f35b610152610364565b60405161015f9190610e36565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610cfe565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610e1b565b60405180910390f35b6101d06103ec565b6040516101dd9190610d19565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610cfe565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610cfe565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610e1b565b60405180910390f35b60606003805461028590610f4b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f4b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e6d565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f4b565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f4b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610dfb565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ddb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d5b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e1b565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d7b565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d3b565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610d9b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610e1b565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a98816111ef565b92915050565b600081359050610aad81611206565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81610ed5565b82525050565b6000610bbd82610e51565b610bc78185610e5c565b9350610bd7818560208601610f18565b610be081610fdb565b840191505092915050565b6000610bf8602383610e5c565b9150610c0382610fec565b604082019050919050565b6000610c1b602283610e5c565b9150610c268261103b565b604082019050919050565b6000610c3e601d83610e5c565b9150610c498261108a565b602082019050919050565b6000610c61602683610e5c565b9150610c6c826110b3565b604082019050919050565b6000610c84602583610e5c565b9150610c8f82611102565b604082019050919050565b6000610ca7602483610e5c565b9150610cb282611151565b604082019050919050565b6000610cca602583610e5c565b9150610cd5826111a0565b604082019050919050565b610ce981610f01565b82525050565b610cf881610f0b565b82525050565b6000602082019050610d136000830184610ba3565b92915050565b60006020820190508181036000830152610d338184610bb2565b905092915050565b60006020820190508181036000830152610d5481610beb565b9050919050565b60006020820190508181036000830152610d7481610c0e565b9050919050565b60006020820190508181036000830152610d9481610c31565b9050919050565b60006020820190508181036000830152610db481610c54565b9050919050565b60006020820190508181036000830152610dd481610c77565b9050919050565b60006020820190508181036000830152610df481610c9a565b9050919050565b60006020820190508181036000830152610e1481610cbd565b9050919050565b6000602082019050610e306000830184610ce0565b92915050565b6000602082019050610e4b6000830184610cef565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7882610f01565b9150610e8383610f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb857610eb7610f7d565b5b828201905092915050565b6000610ece82610ee1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f36578082015181840152602081019050610f1b565b83811115610f45576000848401525b50505050565b60006002820490506001821680610f6357607f821691505b60208210811415610f7757610f76610fac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f881610ec3565b811461120357600080fd5b50565b61120f81610f01565b811461121a57600080fd5b5056fea264697066735822122078736b85f9a6445c14622d8d730f663e8f67a8e04fdba2889d528c1d4c4c51ab64736f6c63430008020033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15D9 CODESIZE SUB DUP1 PUSH3 0x15D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1253 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0xE5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xFDB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0x22 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E PUSH1 0x1D DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC49 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x26 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA7 PUSH1 0x24 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCB2 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xF0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD33 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD54 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD94 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB4 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF4 DUP2 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE14 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE78 DUP3 PUSH2 0xF01 JUMP JUMPDEST SWAP2 POP PUSH2 0xE83 DUP4 PUSH2 0xF01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xFAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x736B85F9A6445C14622D8D730F663E8F67A8E04FDBA2889D52 DUP13 SAR 0x4C 0x4C MLOAD 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"1403:11214:2:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:19:-;;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;;;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;1403:11214:2:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13266:19","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:19","statements":[{"nodeType":"YulAssignment","src":"69:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:19"},"nodeType":"YulFunctionCall","src":"78:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:19"},"nodeType":"YulFunctionCall","src":"107:33:19"},"nodeType":"YulExpressionStatement","src":"107:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:19","type":""}],"src":"7:139:19"},{"body":{"nodeType":"YulBlock","src":"204:87:19","statements":[{"nodeType":"YulAssignment","src":"214:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:19"},"nodeType":"YulFunctionCall","src":"223:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:19"},"nodeType":"YulFunctionCall","src":"252:33:19"},"nodeType":"YulExpressionStatement","src":"252:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:19","type":""}],"src":"152:139:19"},{"body":{"nodeType":"YulBlock","src":"363:196:19","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:19"},"nodeType":"YulFunctionCall","src":"411:12:19"},"nodeType":"YulExpressionStatement","src":"411:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:19"},"nodeType":"YulFunctionCall","src":"380:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:19"},"nodeType":"YulFunctionCall","src":"376:32:19"},"nodeType":"YulIf","src":"373:2:19"},{"nodeType":"YulBlock","src":"435:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"450:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"464:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"454:6:19","type":""}]},{"nodeType":"YulAssignment","src":"479:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"525:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:19"},"nodeType":"YulFunctionCall","src":"510:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"534:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"489:20:19"},"nodeType":"YulFunctionCall","src":"489:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"479:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:19","type":""}],"src":"297:262:19"},{"body":{"nodeType":"YulBlock","src":"648:324:19","statements":[{"body":{"nodeType":"YulBlock","src":"694:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"706:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"696:6:19"},"nodeType":"YulFunctionCall","src":"696:12:19"},"nodeType":"YulExpressionStatement","src":"696:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"669:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"665:3:19"},"nodeType":"YulFunctionCall","src":"665:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"690:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"661:3:19"},"nodeType":"YulFunctionCall","src":"661:32:19"},"nodeType":"YulIf","src":"658:2:19"},{"nodeType":"YulBlock","src":"720:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"735:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"749:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"739:6:19","type":""}]},{"nodeType":"YulAssignment","src":"764:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"810:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:19"},"nodeType":"YulFunctionCall","src":"795:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"819:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"774:20:19"},"nodeType":"YulFunctionCall","src":"774:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"764:6:19"}]}]},{"nodeType":"YulBlock","src":"847:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"862:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"876:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"866:6:19","type":""}]},{"nodeType":"YulAssignment","src":"892:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"927:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"938:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:19"},"nodeType":"YulFunctionCall","src":"923:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"947:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"902:20:19"},"nodeType":"YulFunctionCall","src":"902:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"892:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"610:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"621:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"633:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"641:6:19","type":""}],"src":"565:407:19"},{"body":{"nodeType":"YulBlock","src":"1078:452:19","statements":[{"body":{"nodeType":"YulBlock","src":"1124:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1133:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1126:6:19"},"nodeType":"YulFunctionCall","src":"1126:12:19"},"nodeType":"YulExpressionStatement","src":"1126:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1099:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1108:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1095:3:19"},"nodeType":"YulFunctionCall","src":"1095:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:19"},"nodeType":"YulFunctionCall","src":"1091:32:19"},"nodeType":"YulIf","src":"1088:2:19"},{"nodeType":"YulBlock","src":"1150:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1165:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1179:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1169:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1194:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1229:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1240:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:19"},"nodeType":"YulFunctionCall","src":"1225:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1204:20:19"},"nodeType":"YulFunctionCall","src":"1204:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:19"}]}]},{"nodeType":"YulBlock","src":"1277:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1292:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1306:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1296:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1322:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:19"},"nodeType":"YulFunctionCall","src":"1353:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1332:20:19"},"nodeType":"YulFunctionCall","src":"1332:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1322:6:19"}]}]},{"nodeType":"YulBlock","src":"1405:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1420:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1434:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1424:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1450:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1496:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:19"},"nodeType":"YulFunctionCall","src":"1481:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1505:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1460:20:19"},"nodeType":"YulFunctionCall","src":"1460:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1450:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1032:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1043:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1055:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1063:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1071:6:19","type":""}],"src":"978:552:19"},{"body":{"nodeType":"YulBlock","src":"1619:324:19","statements":[{"body":{"nodeType":"YulBlock","src":"1665:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1674:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1677:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1667:6:19"},"nodeType":"YulFunctionCall","src":"1667:12:19"},"nodeType":"YulExpressionStatement","src":"1667:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1636:3:19"},"nodeType":"YulFunctionCall","src":"1636:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1661:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1632:3:19"},"nodeType":"YulFunctionCall","src":"1632:32:19"},"nodeType":"YulIf","src":"1629:2:19"},{"nodeType":"YulBlock","src":"1691:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1706:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1720:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1710:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1735:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1770:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1781:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1766:3:19"},"nodeType":"YulFunctionCall","src":"1766:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1790:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1745:20:19"},"nodeType":"YulFunctionCall","src":"1745:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1735:6:19"}]}]},{"nodeType":"YulBlock","src":"1818:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1833:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1847:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1837:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1863:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1909:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:19"},"nodeType":"YulFunctionCall","src":"1894:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1918:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1873:20:19"},"nodeType":"YulFunctionCall","src":"1873:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1863:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1581:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1592:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1604:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1612:6:19","type":""}],"src":"1536:407:19"},{"body":{"nodeType":"YulBlock","src":"2008:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2025:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2045:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2030:14:19"},"nodeType":"YulFunctionCall","src":"2030:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:19"},"nodeType":"YulFunctionCall","src":"2018:34:19"},"nodeType":"YulExpressionStatement","src":"2018:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1996:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2003:3:19","type":""}],"src":"1949:109:19"},{"body":{"nodeType":"YulBlock","src":"2156:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2166:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2180:32:19"},"nodeType":"YulFunctionCall","src":"2180:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2170:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2228:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2294:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2299:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2235:58:19"},"nodeType":"YulFunctionCall","src":"2235:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2228:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2341:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2348:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:19"},"nodeType":"YulFunctionCall","src":"2337:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"2355:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2360:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2315:21:19"},"nodeType":"YulFunctionCall","src":"2315:52:19"},"nodeType":"YulExpressionStatement","src":"2315:52:19"},{"nodeType":"YulAssignment","src":"2376:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2387:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2414:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2392:21:19"},"nodeType":"YulFunctionCall","src":"2392:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2383:3:19"},"nodeType":"YulFunctionCall","src":"2383:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2376:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2137:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2144:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2152:3:19","type":""}],"src":"2064:364:19"},{"body":{"nodeType":"YulBlock","src":"2580:220:19","statements":[{"nodeType":"YulAssignment","src":"2590:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2656:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2661:2:19","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2597:58:19"},"nodeType":"YulFunctionCall","src":"2597:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2590:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2762:3:19"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2673:88:19"},"nodeType":"YulFunctionCall","src":"2673:93:19"},"nodeType":"YulExpressionStatement","src":"2673:93:19"},{"nodeType":"YulAssignment","src":"2775:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2786:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2782:3:19"},"nodeType":"YulFunctionCall","src":"2782:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2775:3:19"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2568:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2576:3:19","type":""}],"src":"2434:366:19"},{"body":{"nodeType":"YulBlock","src":"2952:220:19","statements":[{"nodeType":"YulAssignment","src":"2962:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3028:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3033:2:19","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2969:58:19"},"nodeType":"YulFunctionCall","src":"2969:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2962:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3134:3:19"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3045:88:19"},"nodeType":"YulFunctionCall","src":"3045:93:19"},"nodeType":"YulExpressionStatement","src":"3045:93:19"},{"nodeType":"YulAssignment","src":"3147:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3158:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3163:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:19"},"nodeType":"YulFunctionCall","src":"3154:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3147:3:19"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2940:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2948:3:19","type":""}],"src":"2806:366:19"},{"body":{"nodeType":"YulBlock","src":"3324:220:19","statements":[{"nodeType":"YulAssignment","src":"3334:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3400:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3341:58:19"},"nodeType":"YulFunctionCall","src":"3341:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3334:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3506:3:19"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3417:88:19"},"nodeType":"YulFunctionCall","src":"3417:93:19"},"nodeType":"YulExpressionStatement","src":"3417:93:19"},{"nodeType":"YulAssignment","src":"3519:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3530:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3535:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:19"},"nodeType":"YulFunctionCall","src":"3526:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3519:3:19"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3312:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3320:3:19","type":""}],"src":"3178:366:19"},{"body":{"nodeType":"YulBlock","src":"3696:220:19","statements":[{"nodeType":"YulAssignment","src":"3706:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3772:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3777:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3713:58:19"},"nodeType":"YulFunctionCall","src":"3713:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3706:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3878:3:19"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"3789:88:19"},"nodeType":"YulFunctionCall","src":"3789:93:19"},"nodeType":"YulExpressionStatement","src":"3789:93:19"},{"nodeType":"YulAssignment","src":"3891:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3902:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3907:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:19"},"nodeType":"YulFunctionCall","src":"3898:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3891:3:19"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3684:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3692:3:19","type":""}],"src":"3550:366:19"},{"body":{"nodeType":"YulBlock","src":"4068:220:19","statements":[{"nodeType":"YulAssignment","src":"4078:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4144:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4149:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4085:58:19"},"nodeType":"YulFunctionCall","src":"4085:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4078:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:19"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4161:88:19"},"nodeType":"YulFunctionCall","src":"4161:93:19"},"nodeType":"YulExpressionStatement","src":"4161:93:19"},{"nodeType":"YulAssignment","src":"4263:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4274:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4279:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4270:3:19"},"nodeType":"YulFunctionCall","src":"4270:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4263:3:19"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4056:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4064:3:19","type":""}],"src":"3922:366:19"},{"body":{"nodeType":"YulBlock","src":"4440:220:19","statements":[{"nodeType":"YulAssignment","src":"4450:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4516:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4521:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4457:58:19"},"nodeType":"YulFunctionCall","src":"4457:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4450:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4622:3:19"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4533:88:19"},"nodeType":"YulFunctionCall","src":"4533:93:19"},"nodeType":"YulExpressionStatement","src":"4533:93:19"},{"nodeType":"YulAssignment","src":"4635:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4646:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:19"},"nodeType":"YulFunctionCall","src":"4642:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4635:3:19"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4428:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4436:3:19","type":""}],"src":"4294:366:19"},{"body":{"nodeType":"YulBlock","src":"4812:220:19","statements":[{"nodeType":"YulAssignment","src":"4822:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4888:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4829:58:19"},"nodeType":"YulFunctionCall","src":"4829:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4822:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4994:3:19"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"4905:88:19"},"nodeType":"YulFunctionCall","src":"4905:93:19"},"nodeType":"YulExpressionStatement","src":"4905:93:19"},{"nodeType":"YulAssignment","src":"5007:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5023:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:19"},"nodeType":"YulFunctionCall","src":"5014:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5007:3:19"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4800:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4808:3:19","type":""}],"src":"4666:366:19"},{"body":{"nodeType":"YulBlock","src":"5103:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5120:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5143:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5125:17:19"},"nodeType":"YulFunctionCall","src":"5125:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5113:6:19"},"nodeType":"YulFunctionCall","src":"5113:37:19"},"nodeType":"YulExpressionStatement","src":"5113:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5091:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5098:3:19","type":""}],"src":"5038:118:19"},{"body":{"nodeType":"YulBlock","src":"5223:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5240:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5245:15:19"},"nodeType":"YulFunctionCall","src":"5245:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5233:6:19"},"nodeType":"YulFunctionCall","src":"5233:35:19"},"nodeType":"YulExpressionStatement","src":"5233:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5211:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5218:3:19","type":""}],"src":"5162:112:19"},{"body":{"nodeType":"YulBlock","src":"5372:118:19","statements":[{"nodeType":"YulAssignment","src":"5382:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5405:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:19"},"nodeType":"YulFunctionCall","src":"5390:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5382:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5456:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5469:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5465:3:19"},"nodeType":"YulFunctionCall","src":"5465:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5418:37:19"},"nodeType":"YulFunctionCall","src":"5418:65:19"},"nodeType":"YulExpressionStatement","src":"5418:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5344:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5356:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5367:4:19","type":""}],"src":"5280:210:19"},{"body":{"nodeType":"YulBlock","src":"5614:195:19","statements":[{"nodeType":"YulAssignment","src":"5624:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5647:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5632:3:19"},"nodeType":"YulFunctionCall","src":"5632:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5624:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5682:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:19"},"nodeType":"YulFunctionCall","src":"5667:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5690:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5696:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5686:3:19"},"nodeType":"YulFunctionCall","src":"5686:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5660:6:19"},"nodeType":"YulFunctionCall","src":"5660:47:19"},"nodeType":"YulExpressionStatement","src":"5660:47:19"},{"nodeType":"YulAssignment","src":"5716:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5788:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"5797:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5724:63:19"},"nodeType":"YulFunctionCall","src":"5724:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5716:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5586:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5598:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5609:4:19","type":""}],"src":"5496:313:19"},{"body":{"nodeType":"YulBlock","src":"5986:248:19","statements":[{"nodeType":"YulAssignment","src":"5996:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6019:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:19"},"nodeType":"YulFunctionCall","src":"6004:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5996:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6043:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6054:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6039:3:19"},"nodeType":"YulFunctionCall","src":"6039:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6062:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6058:3:19"},"nodeType":"YulFunctionCall","src":"6058:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6032:6:19"},"nodeType":"YulFunctionCall","src":"6032:47:19"},"nodeType":"YulExpressionStatement","src":"6032:47:19"},{"nodeType":"YulAssignment","src":"6088:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6222:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6096:124:19"},"nodeType":"YulFunctionCall","src":"6096:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6088:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5966:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5981:4:19","type":""}],"src":"5815:419:19"},{"body":{"nodeType":"YulBlock","src":"6411:248:19","statements":[{"nodeType":"YulAssignment","src":"6421:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6444:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:19"},"nodeType":"YulFunctionCall","src":"6429:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6421:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6468:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6464:3:19"},"nodeType":"YulFunctionCall","src":"6464:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6487:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6483:3:19"},"nodeType":"YulFunctionCall","src":"6483:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6457:6:19"},"nodeType":"YulFunctionCall","src":"6457:47:19"},"nodeType":"YulExpressionStatement","src":"6457:47:19"},{"nodeType":"YulAssignment","src":"6513:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6647:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6521:124:19"},"nodeType":"YulFunctionCall","src":"6521:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6513:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6391:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6406:4:19","type":""}],"src":"6240:419:19"},{"body":{"nodeType":"YulBlock","src":"6836:248:19","statements":[{"nodeType":"YulAssignment","src":"6846:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6858:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6869:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6854:3:19"},"nodeType":"YulFunctionCall","src":"6854:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6846:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6904:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6889:3:19"},"nodeType":"YulFunctionCall","src":"6889:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6912:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6918:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6908:3:19"},"nodeType":"YulFunctionCall","src":"6908:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6882:6:19"},"nodeType":"YulFunctionCall","src":"6882:47:19"},"nodeType":"YulExpressionStatement","src":"6882:47:19"},{"nodeType":"YulAssignment","src":"6938:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7072:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6946:124:19"},"nodeType":"YulFunctionCall","src":"6946:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6938:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6816:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6831:4:19","type":""}],"src":"6665:419:19"},{"body":{"nodeType":"YulBlock","src":"7261:248:19","statements":[{"nodeType":"YulAssignment","src":"7271:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7283:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7294:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7279:3:19"},"nodeType":"YulFunctionCall","src":"7279:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7271:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7329:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:19"},"nodeType":"YulFunctionCall","src":"7314:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7337:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7343:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7333:3:19"},"nodeType":"YulFunctionCall","src":"7333:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7307:6:19"},"nodeType":"YulFunctionCall","src":"7307:47:19"},"nodeType":"YulExpressionStatement","src":"7307:47:19"},{"nodeType":"YulAssignment","src":"7363:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7497:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7371:124:19"},"nodeType":"YulFunctionCall","src":"7371:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7363:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7241:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7256:4:19","type":""}],"src":"7090:419:19"},{"body":{"nodeType":"YulBlock","src":"7686:248:19","statements":[{"nodeType":"YulAssignment","src":"7696:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7719:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:19"},"nodeType":"YulFunctionCall","src":"7704:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7696:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7743:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7754:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:19"},"nodeType":"YulFunctionCall","src":"7739:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7762:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7768:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7758:3:19"},"nodeType":"YulFunctionCall","src":"7758:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7732:6:19"},"nodeType":"YulFunctionCall","src":"7732:47:19"},"nodeType":"YulExpressionStatement","src":"7732:47:19"},{"nodeType":"YulAssignment","src":"7788:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7922:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7796:124:19"},"nodeType":"YulFunctionCall","src":"7796:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7788:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7666:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7681:4:19","type":""}],"src":"7515:419:19"},{"body":{"nodeType":"YulBlock","src":"8111:248:19","statements":[{"nodeType":"YulAssignment","src":"8121:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8133:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8144:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8129:3:19"},"nodeType":"YulFunctionCall","src":"8129:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8121:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8168:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8179:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8164:3:19"},"nodeType":"YulFunctionCall","src":"8164:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8187:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8193:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8183:3:19"},"nodeType":"YulFunctionCall","src":"8183:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8157:6:19"},"nodeType":"YulFunctionCall","src":"8157:47:19"},"nodeType":"YulExpressionStatement","src":"8157:47:19"},{"nodeType":"YulAssignment","src":"8213:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8347:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8221:124:19"},"nodeType":"YulFunctionCall","src":"8221:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8213:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8091:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8106:4:19","type":""}],"src":"7940:419:19"},{"body":{"nodeType":"YulBlock","src":"8536:248:19","statements":[{"nodeType":"YulAssignment","src":"8546:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8558:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8569:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8554:3:19"},"nodeType":"YulFunctionCall","src":"8554:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8546:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8593:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8604:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:19"},"nodeType":"YulFunctionCall","src":"8589:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8612:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8618:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8608:3:19"},"nodeType":"YulFunctionCall","src":"8608:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8582:6:19"},"nodeType":"YulFunctionCall","src":"8582:47:19"},"nodeType":"YulExpressionStatement","src":"8582:47:19"},{"nodeType":"YulAssignment","src":"8638:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8772:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8646:124:19"},"nodeType":"YulFunctionCall","src":"8646:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8638:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8516:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8531:4:19","type":""}],"src":"8365:419:19"},{"body":{"nodeType":"YulBlock","src":"8888:124:19","statements":[{"nodeType":"YulAssignment","src":"8898:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8910:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8921:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8906:3:19"},"nodeType":"YulFunctionCall","src":"8906:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8898:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8978:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8991:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9002:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8987:3:19"},"nodeType":"YulFunctionCall","src":"8987:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8934:43:19"},"nodeType":"YulFunctionCall","src":"8934:71:19"},"nodeType":"YulExpressionStatement","src":"8934:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8860:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8872:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8883:4:19","type":""}],"src":"8790:222:19"},{"body":{"nodeType":"YulBlock","src":"9112:120:19","statements":[{"nodeType":"YulAssignment","src":"9122:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9145:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:19"},"nodeType":"YulFunctionCall","src":"9130:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9122:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9198:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9211:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9222:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:19"},"nodeType":"YulFunctionCall","src":"9207:17:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9158:39:19"},"nodeType":"YulFunctionCall","src":"9158:67:19"},"nodeType":"YulExpressionStatement","src":"9158:67:19"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9084:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9096:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9107:4:19","type":""}],"src":"9018:214:19"},{"body":{"nodeType":"YulBlock","src":"9297:40:19","statements":[{"nodeType":"YulAssignment","src":"9308:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9324:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9318:5:19"},"nodeType":"YulFunctionCall","src":"9318:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9308:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9280:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9290:6:19","type":""}],"src":"9238:99:19"},{"body":{"nodeType":"YulBlock","src":"9439:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9456:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"9461:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:19"},"nodeType":"YulFunctionCall","src":"9449:19:19"},"nodeType":"YulExpressionStatement","src":"9449:19:19"},{"nodeType":"YulAssignment","src":"9477:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9496:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9501:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9492:3:19"},"nodeType":"YulFunctionCall","src":"9492:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9477:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9411:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"9416:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9427:11:19","type":""}],"src":"9343:169:19"},{"body":{"nodeType":"YulBlock","src":"9562:261:19","statements":[{"nodeType":"YulAssignment","src":"9572:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9595:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9577:17:19"},"nodeType":"YulFunctionCall","src":"9577:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9572:1:19"}]},{"nodeType":"YulAssignment","src":"9606:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9629:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9611:17:19"},"nodeType":"YulFunctionCall","src":"9611:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9606:1:19"}]},{"body":{"nodeType":"YulBlock","src":"9769:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9771:16:19"},"nodeType":"YulFunctionCall","src":"9771:18:19"},"nodeType":"YulExpressionStatement","src":"9771:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9690:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9697:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"9765:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9693:3:19"},"nodeType":"YulFunctionCall","src":"9693:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9687:2:19"},"nodeType":"YulFunctionCall","src":"9687:81:19"},"nodeType":"YulIf","src":"9684:2:19"},{"nodeType":"YulAssignment","src":"9801:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9812:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"9815:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9808:3:19"},"nodeType":"YulFunctionCall","src":"9808:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9801:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9549:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"9552:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9558:3:19","type":""}],"src":"9518:305:19"},{"body":{"nodeType":"YulBlock","src":"9874:51:19","statements":[{"nodeType":"YulAssignment","src":"9884:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9913:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9895:17:19"},"nodeType":"YulFunctionCall","src":"9895:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9884:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9856:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9866:7:19","type":""}],"src":"9829:96:19"},{"body":{"nodeType":"YulBlock","src":"9973:48:19","statements":[{"nodeType":"YulAssignment","src":"9983:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10008:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10001:6:19"},"nodeType":"YulFunctionCall","src":"10001:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9994:6:19"},"nodeType":"YulFunctionCall","src":"9994:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9983:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9955:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9965:7:19","type":""}],"src":"9931:90:19"},{"body":{"nodeType":"YulBlock","src":"10072:81:19","statements":[{"nodeType":"YulAssignment","src":"10082:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10097:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10104:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10093:3:19"},"nodeType":"YulFunctionCall","src":"10093:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10082:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10054:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10064:7:19","type":""}],"src":"10027:126:19"},{"body":{"nodeType":"YulBlock","src":"10204:32:19","statements":[{"nodeType":"YulAssignment","src":"10214:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"10225:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10214:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10186:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10196:7:19","type":""}],"src":"10159:77:19"},{"body":{"nodeType":"YulBlock","src":"10285:43:19","statements":[{"nodeType":"YulAssignment","src":"10295:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10310:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10317:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10306:3:19"},"nodeType":"YulFunctionCall","src":"10306:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10295:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10267:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10277:7:19","type":""}],"src":"10242:86:19"},{"body":{"nodeType":"YulBlock","src":"10383:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10393:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10402:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10397:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10462:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10487:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10492:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:19"},"nodeType":"YulFunctionCall","src":"10483:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10506:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"10511:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:19"},"nodeType":"YulFunctionCall","src":"10502:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10496:5:19"},"nodeType":"YulFunctionCall","src":"10496:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10476:6:19"},"nodeType":"YulFunctionCall","src":"10476:39:19"},"nodeType":"YulExpressionStatement","src":"10476:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10423:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"10426:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10420:2:19"},"nodeType":"YulFunctionCall","src":"10420:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10434:19:19","statements":[{"nodeType":"YulAssignment","src":"10436:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10445:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"10448:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:19"},"nodeType":"YulFunctionCall","src":"10441:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10436:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"10416:3:19","statements":[]},"src":"10412:113:19"},{"body":{"nodeType":"YulBlock","src":"10559:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10609:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"10614:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:19"},"nodeType":"YulFunctionCall","src":"10605:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"10623:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10598:6:19"},"nodeType":"YulFunctionCall","src":"10598:27:19"},"nodeType":"YulExpressionStatement","src":"10598:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10540:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"10543:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10537:2:19"},"nodeType":"YulFunctionCall","src":"10537:13:19"},"nodeType":"YulIf","src":"10534:2:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10365:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10370:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"10375:6:19","type":""}],"src":"10334:307:19"},{"body":{"nodeType":"YulBlock","src":"10698:269:19","statements":[{"nodeType":"YulAssignment","src":"10708:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10722:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"10728:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10718:3:19"},"nodeType":"YulFunctionCall","src":"10718:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10708:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"10739:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10769:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"10775:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10765:3:19"},"nodeType":"YulFunctionCall","src":"10765:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10743:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10816:51:19","statements":[{"nodeType":"YulAssignment","src":"10830:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10844:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10840:3:19"},"nodeType":"YulFunctionCall","src":"10840:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10830:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10796:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10789:6:19"},"nodeType":"YulFunctionCall","src":"10789:26:19"},"nodeType":"YulIf","src":"10786:2:19"},{"body":{"nodeType":"YulBlock","src":"10919:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10933:16:19"},"nodeType":"YulFunctionCall","src":"10933:18:19"},"nodeType":"YulExpressionStatement","src":"10933:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10883:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10906:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10914:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10903:2:19"},"nodeType":"YulFunctionCall","src":"10903:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10880:2:19"},"nodeType":"YulFunctionCall","src":"10880:38:19"},"nodeType":"YulIf","src":"10877:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10682:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10691:6:19","type":""}],"src":"10647:320:19"},{"body":{"nodeType":"YulBlock","src":"11001:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11018:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11021:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11011:6:19"},"nodeType":"YulFunctionCall","src":"11011:88:19"},"nodeType":"YulExpressionStatement","src":"11011:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11115:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11118:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11108:6:19"},"nodeType":"YulFunctionCall","src":"11108:15:19"},"nodeType":"YulExpressionStatement","src":"11108:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11139:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11142:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11132:6:19"},"nodeType":"YulFunctionCall","src":"11132:15:19"},"nodeType":"YulExpressionStatement","src":"11132:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10973:180:19"},{"body":{"nodeType":"YulBlock","src":"11187:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11204:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11207:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11197:6:19"},"nodeType":"YulFunctionCall","src":"11197:88:19"},"nodeType":"YulExpressionStatement","src":"11197:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11301:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11304:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:19"},"nodeType":"YulFunctionCall","src":"11294:15:19"},"nodeType":"YulExpressionStatement","src":"11294:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11325:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11328:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11318:6:19"},"nodeType":"YulFunctionCall","src":"11318:15:19"},"nodeType":"YulExpressionStatement","src":"11318:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11159:180:19"},{"body":{"nodeType":"YulBlock","src":"11393:54:19","statements":[{"nodeType":"YulAssignment","src":"11403:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11421:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11417:3:19"},"nodeType":"YulFunctionCall","src":"11417:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11437:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11433:3:19"},"nodeType":"YulFunctionCall","src":"11433:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11413:3:19"},"nodeType":"YulFunctionCall","src":"11413:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11403:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11376:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11386:6:19","type":""}],"src":"11345:102:19"},{"body":{"nodeType":"YulBlock","src":"11559:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11581:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11589:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11577:3:19"},"nodeType":"YulFunctionCall","src":"11577:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"11593:34:19","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11570:6:19"},"nodeType":"YulFunctionCall","src":"11570:58:19"},"nodeType":"YulExpressionStatement","src":"11570:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11649:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11657:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11645:3:19"},"nodeType":"YulFunctionCall","src":"11645:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"11662:5:19","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11638:6:19"},"nodeType":"YulFunctionCall","src":"11638:30:19"},"nodeType":"YulExpressionStatement","src":"11638:30:19"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11551:6:19","type":""}],"src":"11453:222:19"},{"body":{"nodeType":"YulBlock","src":"11787:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11809:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11817:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:19"},"nodeType":"YulFunctionCall","src":"11805:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"11821:34:19","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:19"},"nodeType":"YulFunctionCall","src":"11798:58:19"},"nodeType":"YulExpressionStatement","src":"11798:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11877:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11885:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11873:3:19"},"nodeType":"YulFunctionCall","src":"11873:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"11890:4:19","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11866:6:19"},"nodeType":"YulFunctionCall","src":"11866:29:19"},"nodeType":"YulExpressionStatement","src":"11866:29:19"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11779:6:19","type":""}],"src":"11681:221:19"},{"body":{"nodeType":"YulBlock","src":"12014:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12036:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12044:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:19"},"nodeType":"YulFunctionCall","src":"12032:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"12048:31:19","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12025:6:19"},"nodeType":"YulFunctionCall","src":"12025:55:19"},"nodeType":"YulExpressionStatement","src":"12025:55:19"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12006:6:19","type":""}],"src":"11908:179:19"},{"body":{"nodeType":"YulBlock","src":"12199:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12221:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12229:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12217:3:19"},"nodeType":"YulFunctionCall","src":"12217:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"12233:34:19","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12210:6:19"},"nodeType":"YulFunctionCall","src":"12210:58:19"},"nodeType":"YulExpressionStatement","src":"12210:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12289:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12285:3:19"},"nodeType":"YulFunctionCall","src":"12285:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"12302:8:19","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12278:6:19"},"nodeType":"YulFunctionCall","src":"12278:33:19"},"nodeType":"YulExpressionStatement","src":"12278:33:19"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12191:6:19","type":""}],"src":"12093:225:19"},{"body":{"nodeType":"YulBlock","src":"12430:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12452:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12460:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12448:3:19"},"nodeType":"YulFunctionCall","src":"12448:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"12464:34:19","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12441:6:19"},"nodeType":"YulFunctionCall","src":"12441:58:19"},"nodeType":"YulExpressionStatement","src":"12441:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12520:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12528:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12516:3:19"},"nodeType":"YulFunctionCall","src":"12516:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"12533:7:19","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12509:6:19"},"nodeType":"YulFunctionCall","src":"12509:32:19"},"nodeType":"YulExpressionStatement","src":"12509:32:19"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12422:6:19","type":""}],"src":"12324:224:19"},{"body":{"nodeType":"YulBlock","src":"12660:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12682:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12690:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12678:3:19"},"nodeType":"YulFunctionCall","src":"12678:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"12694:34:19","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12671:6:19"},"nodeType":"YulFunctionCall","src":"12671:58:19"},"nodeType":"YulExpressionStatement","src":"12671:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12750:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12758:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12746:3:19"},"nodeType":"YulFunctionCall","src":"12746:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"12763:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12739:6:19"},"nodeType":"YulFunctionCall","src":"12739:31:19"},"nodeType":"YulExpressionStatement","src":"12739:31:19"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12652:6:19","type":""}],"src":"12554:223:19"},{"body":{"nodeType":"YulBlock","src":"12889:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12911:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12919:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:19"},"nodeType":"YulFunctionCall","src":"12907:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"12923:34:19","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:19"},"nodeType":"YulFunctionCall","src":"12900:58:19"},"nodeType":"YulExpressionStatement","src":"12900:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12979:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12987:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12975:3:19"},"nodeType":"YulFunctionCall","src":"12975:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"12992:7:19","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12968:6:19"},"nodeType":"YulFunctionCall","src":"12968:32:19"},"nodeType":"YulExpressionStatement","src":"12968:32:19"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12881:6:19","type":""}],"src":"12783:224:19"},{"body":{"nodeType":"YulBlock","src":"13056:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"13113:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13122:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13125:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13115:6:19"},"nodeType":"YulFunctionCall","src":"13115:12:19"},"nodeType":"YulExpressionStatement","src":"13115:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13079:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13104:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13086:17:19"},"nodeType":"YulFunctionCall","src":"13086:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13076:2:19"},"nodeType":"YulFunctionCall","src":"13076:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13069:6:19"},"nodeType":"YulFunctionCall","src":"13069:43:19"},"nodeType":"YulIf","src":"13066:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13049:5:19","type":""}],"src":"13013:122:19"},{"body":{"nodeType":"YulBlock","src":"13184:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"13241:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13250:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13253:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13243:6:19"},"nodeType":"YulFunctionCall","src":"13243:12:19"},"nodeType":"YulExpressionStatement","src":"13243:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13207:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13232:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13214:17:19"},"nodeType":"YulFunctionCall","src":"13214:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13204:2:19"},"nodeType":"YulFunctionCall","src":"13204:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13197:6:19"},"nodeType":"YulFunctionCall","src":"13197:43:19"},"nodeType":"YulIf","src":"13194:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13177:5:19","type":""}],"src":"13141:122:19"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d19565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610cfe565b60405180910390f35b61010461032b565b6040516101119190610e1b565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610cfe565b60405180910390f35b610152610364565b60405161015f9190610e36565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610cfe565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610e1b565b60405180910390f35b6101d06103ec565b6040516101dd9190610d19565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610cfe565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610cfe565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610e1b565b60405180910390f35b60606003805461028590610f4b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f4b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e6d565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f4b565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f4b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610dfb565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ddb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d5b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e1b565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d7b565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d3b565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610d9b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610e1b565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a98816111ef565b92915050565b600081359050610aad81611206565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81610ed5565b82525050565b6000610bbd82610e51565b610bc78185610e5c565b9350610bd7818560208601610f18565b610be081610fdb565b840191505092915050565b6000610bf8602383610e5c565b9150610c0382610fec565b604082019050919050565b6000610c1b602283610e5c565b9150610c268261103b565b604082019050919050565b6000610c3e601d83610e5c565b9150610c498261108a565b602082019050919050565b6000610c61602683610e5c565b9150610c6c826110b3565b604082019050919050565b6000610c84602583610e5c565b9150610c8f82611102565b604082019050919050565b6000610ca7602483610e5c565b9150610cb282611151565b604082019050919050565b6000610cca602583610e5c565b9150610cd5826111a0565b604082019050919050565b610ce981610f01565b82525050565b610cf881610f0b565b82525050565b6000602082019050610d136000830184610ba3565b92915050565b60006020820190508181036000830152610d338184610bb2565b905092915050565b60006020820190508181036000830152610d5481610beb565b9050919050565b60006020820190508181036000830152610d7481610c0e565b9050919050565b60006020820190508181036000830152610d9481610c31565b9050919050565b60006020820190508181036000830152610db481610c54565b9050919050565b60006020820190508181036000830152610dd481610c77565b9050919050565b60006020820190508181036000830152610df481610c9a565b9050919050565b60006020820190508181036000830152610e1481610cbd565b9050919050565b6000602082019050610e306000830184610ce0565b92915050565b6000602082019050610e4b6000830184610cef565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7882610f01565b9150610e8383610f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb857610eb7610f7d565b5b828201905092915050565b6000610ece82610ee1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f36578082015181840152602081019050610f1b565b83811115610f45576000848401525b50505050565b60006002820490506001821680610f6357607f821691505b60208210811415610f7757610f76610fac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f881610ec3565b811461120357600080fd5b50565b61120f81610f01565b811461121a57600080fd5b5056fea264697066735822122078736b85f9a6445c14622d8d730f663e8f67a8e04fdba2889d528c1d4c4c51ab64736f6c63430008020033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0xE5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xFDB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0x22 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E PUSH1 0x1D DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC49 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x26 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA7 PUSH1 0x24 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCB2 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xF0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD33 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD54 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD94 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB4 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF4 DUP2 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE14 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE78 DUP3 PUSH2 0xF01 JUMP JUMPDEST SWAP2 POP PUSH2 0xE83 DUP4 PUSH2 0xF01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xFAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x736B85F9A6445C14622D8D730F663E8F67A8E04FDBA2889D52 DUP13 SAR 0x4C 0x4C MLOAD 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"1403:11214:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;10110:370:2:-;10258:1;10241:19;;:5;:19;;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10761:441;;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7475:651;;;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:139:19:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:96::-;;9895:24;9913:5;9895:24;:::i;:::-;9884:35;;9874:51;;;:::o;9931:90::-;;10008:5;10001:13;9994:21;9983:32;;9973:48;;;:::o;10027:126::-;;10104:42;10097:5;10093:54;10082:65;;10072:81;;;:::o;10159:77::-;;10225:5;10214:16;;10204:32;;;:::o;10242:86::-;;10317:4;10310:5;10306:16;10295:27;;10285:43;;;:::o;10334:307::-;10402:1;10412:113;10426:6;10423:1;10420:13;10412:113;;;10511:1;10506:3;10502:11;10496:18;10492:1;10487:3;10483:11;10476:39;10448:2;10445:1;10441:10;10436:15;;10412:113;;;10543:6;10540:1;10537:13;10534:2;;;10623:1;10614:6;10609:3;10605:16;10598:27;10534:2;10383:258;;;;:::o;10647:320::-;;10728:1;10722:4;10718:12;10708:22;;10775:1;10769:4;10765:12;10796:18;10786:2;;10852:4;10844:6;10840:17;10830:27;;10786:2;10914;10906:6;10903:14;10883:18;10880:38;10877:2;;;10933:18;;:::i;:::-;10877:2;10698:269;;;;:::o;10973:180::-;11021:77;11018:1;11011:88;11118:4;11115:1;11108:15;11142:4;11139:1;11132:15;11159:180;11207:77;11204:1;11197:88;11304:4;11301:1;11294:15;11328:4;11325:1;11318:15;11345:102;;11437:2;11433:7;11428:2;11421:5;11417:14;11413:28;11403:38;;11393:54;;;:::o;11453:222::-;11593:34;11589:1;11581:6;11577:14;11570:58;11662:5;11657:2;11649:6;11645:15;11638:30;11559:116;:::o;11681:221::-;11821:34;11817:1;11809:6;11805:14;11798:58;11890:4;11885:2;11877:6;11873:15;11866:29;11787:115;:::o;11908:179::-;12048:31;12044:1;12036:6;12032:14;12025:55;12014:73;:::o;12093:225::-;12233:34;12229:1;12221:6;12217:14;12210:58;12302:8;12297:2;12289:6;12285:15;12278:33;12199:119;:::o;12324:224::-;12464:34;12460:1;12452:6;12448:14;12441:58;12533:7;12528:2;12520:6;12516:15;12509:32;12430:118;:::o;12554:223::-;12694:34;12690:1;12682:6;12678:14;12671:58;12763:6;12758:2;12750:6;12746:15;12739:31;12660:117;:::o;12783:224::-;12923:34;12919:1;12911:6;12907:14;12900:58;12992:7;12987:2;12979:6;12975:15;12968:32;12889:118;:::o;13013:122::-;13086:24;13104:5;13086:24;:::i;:::-;13079:5;13076:35;13066:2;;13125:1;13122;13115:12;13066:2;13056:79;:::o;13141:122::-;13214:24;13232:5;13214:24;:::i;:::-;13207:5;13204:35;13194:2;;13253:1;13250;13243:12;13194:2;13184:79;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"ERC20Snapshot":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and total supply at the time are recorded for later access. This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting. In naive implementations it's possible to perform a \\\"double spend\\\" attack by reusing the same balance from different accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be used to create an efficient ERC20 forking mechanism. Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id and the account address. NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract. Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient alternative consider {ERC20Votes}. ==== Gas Costs Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much smaller since identical balances in subsequent snapshots are stored as a single entry. There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent transfers will have normal cost until the next snapshot, and so on.\",\"events\":{\"Snapshot(uint256)\":{\"details\":\"Emitted by {_snapshot} when a snapshot identified by `id` is created.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":\"ERC20Snapshot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":{\"keccak256\":\"0x9f3a9fc338edd87bff11d626ee6f365ac72f03a8841c4a2938438ef81e8cf1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d2192ec88279638f4866b2c09e017702699fdb995bf1ca167b7110bc5b29d51\",\"dweb:/ipfs/Qme2JhqYoH25xKpgC7qj8o9yKofJyragCuHfX4CQMuPuef\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026919f7cf8cdb614c7b7f5fe69fb2e7f3636b7c462abcf5ae46729e19893c83164736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SWAP2 SWAP16 PUSH29 0xF8CDB614C7B7F5FE69FB2E7F3636B7C462ABCF5AE46729E19893C83164 PUSH20 0x6F6C634300080200330000000000000000000000 ","sourceMap":"201:1327:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026919f7cf8cdb614c7b7f5fe69fb2e7f3636b7c462abcf5ae46729e19893c83164736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SWAP2 SWAP16 PUSH29 0xF8CDB614C7B7F5FE69FB2E7F3636B7C462ABCF5AE46729E19893C83164 PUSH20 0x6F6C634300080200330000000000000000000000 ","sourceMap":"201:1327:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a482a23571d12e6749c828baaf11601495e7aeafaa415ca084863d808c797c4e64736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 DUP3 LOG2 CALLDATALOAD PUSH18 0xD12E6749C828BAAF11601495E7AEAFAA415C LOG0 DUP5 DUP7 RETURNDATASIZE DUP1 DUP13 PUSH26 0x7C4E64736F6C6343000802003300000000000000000000000000 ","sourceMap":"424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a482a23571d12e6749c828baaf11601495e7aeafaa415ca084863d808c797c4e64736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 DUP3 LOG2 CALLDATALOAD PUSH18 0xD12E6749C828BAAF11601495E7AEAFAA415C LOG0 DUP5 DUP7 RETURNDATASIZE DUP1 DUP13 PUSH26 0x7C4E64736F6C6343000802003300000000000000000000000000 ","sourceMap":"424:971:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220331a3186f37e581493a8cf8ee7aedffd42c43c9be8c8911cf0d0b1de034ce45964736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER BYTE BALANCE DUP7 RETURN PUSH31 0x581493A8CF8EE7AEDFFD42C43C9BE8C8911CF0D0B1DE034CE45964736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ","sourceMap":"161:2235:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220331a3186f37e581493a8cf8ee7aedffd42c43c9be8c8911cf0d0b1de034ce45964736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER BYTE BALANCE DUP7 RETURN PUSH31 0x581493A8CF8EE7AEDFFD42C43C9BE8C8911CF0D0B1DE034CE45964736F6C63 NUMBER STOP ADDMOD MUL STOP CALLER ","sourceMap":"161:2235:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d48743f04c2ef08d84fb8998f817461a200dea7bc9b4d429cacfc97d52560f8764736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP8 NUMBER CREATE 0x4C 0x2E CREATE DUP14 DUP5 0xFB DUP10 SWAP9 0xF8 OR CHAINID BYTE KECCAK256 0xD 0xEA PUSH28 0xC9B4D429CACFC97D52560F8764736F6C634300080200330000000000 ","sourceMap":"369:8375:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d48743f04c2ef08d84fb8998f817461a200dea7bc9b4d429cacfc97d52560f8764736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP8 NUMBER CREATE 0x4C 0x2E CREATE DUP14 DUP5 0xFB DUP10 SWAP9 0xF8 OR CHAINID BYTE KECCAK256 0xD 0xEA PUSH28 0xC9B4D429CACFC97D52560F8764736F6C634300080200330000000000 ","sourceMap":"369:8375:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220659f562236fd8362a0e6f9c96ac89228b49b07bdf827a23f34c24af1053c181e64736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x9F562236FD83 PUSH3 0xA0E6F9 0xC9 PUSH11 0xC89228B49B07BDF827A23F CALLVALUE 0xC2 0x4A CALL SDIV EXTCODECOPY XOR 0x1E PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"202:8624:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220659f562236fd8362a0e6f9c96ac89228b49b07bdf827a23f34c24af1053c181e64736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x9F562236FD83 PUSH3 0xA0E6F9 0xC9 PUSH11 0xC89228B49B07BDF827A23F CALLVALUE 0xC2 0x4A CALL SDIV EXTCODECOPY XOR 0x1E PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"202:8624:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071ab5829395894e010f72cebe35d6c9b0d68c944c827f3a823c994c4cd4cb3a564736f6c63430008020033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xAB5829395894E010F72CEBE35D6C9B0D68C9 DIFFICULTY 0xC8 0x27 RETURN 0xA8 0x23 0xC9 SWAP5 0xC4 0xCD 0x4C 0xB3 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"842:34685:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071ab5829395894e010f72cebe35d6c9b0d68c944c827f3a823c994c4cd4cb3a564736f6c63430008020033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xAB5829395894E010F72CEBE35D6C9B0D68C9 DIFFICULTY 0xC8 0x27 RETURN 0xA8 0x23 0xC9 SWAP5 0xC4 0xCD 0x4C 0xB3 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"842:34685:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}"}},"contracts/Megatech.sol":{"Megatech":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"snapshot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10246:19","statements":[{"body":{"nodeType":"YulBlock","src":"72:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"89:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"112:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"94:17:19"},"nodeType":"YulFunctionCall","src":"94:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"82:6:19"},"nodeType":"YulFunctionCall","src":"82:37:19"},"nodeType":"YulExpressionStatement","src":"82:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"60:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"67:3:19","type":""}],"src":"7:118:19"},{"body":{"nodeType":"YulBlock","src":"196:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"213:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"236:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"218:17:19"},"nodeType":"YulFunctionCall","src":"218:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"206:6:19"},"nodeType":"YulFunctionCall","src":"206:37:19"},"nodeType":"YulExpressionStatement","src":"206:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"184:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"191:3:19","type":""}],"src":"131:118:19"},{"body":{"nodeType":"YulBlock","src":"401:220:19","statements":[{"nodeType":"YulAssignment","src":"411:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"477:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"482:2:19","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"418:58:19"},"nodeType":"YulFunctionCall","src":"418:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"411:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"583:3:19"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"494:88:19"},"nodeType":"YulFunctionCall","src":"494:93:19"},"nodeType":"YulExpressionStatement","src":"494:93:19"},{"nodeType":"YulAssignment","src":"596:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"607:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"612:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:19"},"nodeType":"YulFunctionCall","src":"603:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"596:3:19"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"389:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"397:3:19","type":""}],"src":"255:366:19"},{"body":{"nodeType":"YulBlock","src":"773:220:19","statements":[{"nodeType":"YulAssignment","src":"783:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"849:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"854:2:19","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"790:58:19"},"nodeType":"YulFunctionCall","src":"790:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"783:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"955:3:19"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"866:88:19"},"nodeType":"YulFunctionCall","src":"866:93:19"},"nodeType":"YulExpressionStatement","src":"866:93:19"},{"nodeType":"YulAssignment","src":"968:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"979:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"984:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:19"},"nodeType":"YulFunctionCall","src":"975:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"968:3:19"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"761:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"769:3:19","type":""}],"src":"627:366:19"},{"body":{"nodeType":"YulBlock","src":"1145:220:19","statements":[{"nodeType":"YulAssignment","src":"1155:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1221:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1226:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1162:58:19"},"nodeType":"YulFunctionCall","src":"1162:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1155:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1327:3:19"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"1238:88:19"},"nodeType":"YulFunctionCall","src":"1238:93:19"},"nodeType":"YulExpressionStatement","src":"1238:93:19"},{"nodeType":"YulAssignment","src":"1340:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1351:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1356:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:19"},"nodeType":"YulFunctionCall","src":"1347:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1340:3:19"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1133:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1141:3:19","type":""}],"src":"999:366:19"},{"body":{"nodeType":"YulBlock","src":"1517:220:19","statements":[{"nodeType":"YulAssignment","src":"1527:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1593:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1598:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1534:58:19"},"nodeType":"YulFunctionCall","src":"1534:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1527:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1699:3:19"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"1610:88:19"},"nodeType":"YulFunctionCall","src":"1610:93:19"},"nodeType":"YulExpressionStatement","src":"1610:93:19"},{"nodeType":"YulAssignment","src":"1712:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1723:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1728:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:19"},"nodeType":"YulFunctionCall","src":"1719:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1712:3:19"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1505:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1513:3:19","type":""}],"src":"1371:366:19"},{"body":{"nodeType":"YulBlock","src":"1808:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1825:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1848:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1830:17:19"},"nodeType":"YulFunctionCall","src":"1830:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1818:6:19"},"nodeType":"YulFunctionCall","src":"1818:37:19"},"nodeType":"YulExpressionStatement","src":"1818:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1796:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1803:3:19","type":""}],"src":"1743:118:19"},{"body":{"nodeType":"YulBlock","src":"2077:454:19","statements":[{"nodeType":"YulAssignment","src":"2087:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2099:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2110:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2095:3:19"},"nodeType":"YulFunctionCall","src":"2095:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2087:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2168:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2181:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2192:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2177:3:19"},"nodeType":"YulFunctionCall","src":"2177:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2124:43:19"},"nodeType":"YulFunctionCall","src":"2124:71:19"},"nodeType":"YulExpressionStatement","src":"2124:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2249:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2262:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2273:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2258:3:19"},"nodeType":"YulFunctionCall","src":"2258:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2205:43:19"},"nodeType":"YulFunctionCall","src":"2205:72:19"},"nodeType":"YulExpressionStatement","src":"2205:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2331:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2344:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2355:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2340:3:19"},"nodeType":"YulFunctionCall","src":"2340:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2287:43:19"},"nodeType":"YulFunctionCall","src":"2287:72:19"},"nodeType":"YulExpressionStatement","src":"2287:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2413:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2426:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2437:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2422:3:19"},"nodeType":"YulFunctionCall","src":"2422:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2369:43:19"},"nodeType":"YulFunctionCall","src":"2369:72:19"},"nodeType":"YulExpressionStatement","src":"2369:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2495:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2508:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2519:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2504:3:19"},"nodeType":"YulFunctionCall","src":"2504:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2451:43:19"},"nodeType":"YulFunctionCall","src":"2451:73:19"},"nodeType":"YulExpressionStatement","src":"2451:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2017:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2029:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2037:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2045:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2053:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2061:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2072:4:19","type":""}],"src":"1867:664:19"},{"body":{"nodeType":"YulBlock","src":"2708:248:19","statements":[{"nodeType":"YulAssignment","src":"2718:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2741:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2726:3:19"},"nodeType":"YulFunctionCall","src":"2726:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2718:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2776:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:19"},"nodeType":"YulFunctionCall","src":"2761:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2784:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2790:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2780:3:19"},"nodeType":"YulFunctionCall","src":"2780:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2754:6:19"},"nodeType":"YulFunctionCall","src":"2754:47:19"},"nodeType":"YulExpressionStatement","src":"2754:47:19"},{"nodeType":"YulAssignment","src":"2810:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2944:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2818:124:19"},"nodeType":"YulFunctionCall","src":"2818:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2810:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2688:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2703:4:19","type":""}],"src":"2537:419:19"},{"body":{"nodeType":"YulBlock","src":"3133:248:19","statements":[{"nodeType":"YulAssignment","src":"3143:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3166:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:19"},"nodeType":"YulFunctionCall","src":"3151:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3143:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3190:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3201:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3186:3:19"},"nodeType":"YulFunctionCall","src":"3186:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3209:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3215:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3205:3:19"},"nodeType":"YulFunctionCall","src":"3205:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3179:6:19"},"nodeType":"YulFunctionCall","src":"3179:47:19"},"nodeType":"YulExpressionStatement","src":"3179:47:19"},{"nodeType":"YulAssignment","src":"3235:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3369:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3243:124:19"},"nodeType":"YulFunctionCall","src":"3243:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3235:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3113:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3128:4:19","type":""}],"src":"2962:419:19"},{"body":{"nodeType":"YulBlock","src":"3558:248:19","statements":[{"nodeType":"YulAssignment","src":"3568:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3580:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3591:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:19"},"nodeType":"YulFunctionCall","src":"3576:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3568:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3615:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3611:3:19"},"nodeType":"YulFunctionCall","src":"3611:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3634:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3640:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3630:3:19"},"nodeType":"YulFunctionCall","src":"3630:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3604:6:19"},"nodeType":"YulFunctionCall","src":"3604:47:19"},"nodeType":"YulExpressionStatement","src":"3604:47:19"},{"nodeType":"YulAssignment","src":"3660:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3794:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3668:124:19"},"nodeType":"YulFunctionCall","src":"3668:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3660:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3538:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3553:4:19","type":""}],"src":"3387:419:19"},{"body":{"nodeType":"YulBlock","src":"3983:248:19","statements":[{"nodeType":"YulAssignment","src":"3993:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4005:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4016:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4001:3:19"},"nodeType":"YulFunctionCall","src":"4001:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3993:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4051:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:19"},"nodeType":"YulFunctionCall","src":"4036:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4059:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4065:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4055:3:19"},"nodeType":"YulFunctionCall","src":"4055:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:19"},"nodeType":"YulFunctionCall","src":"4029:47:19"},"nodeType":"YulExpressionStatement","src":"4029:47:19"},{"nodeType":"YulAssignment","src":"4085:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4219:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4093:124:19"},"nodeType":"YulFunctionCall","src":"4093:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4085:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3963:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3978:4:19","type":""}],"src":"3812:419:19"},{"body":{"nodeType":"YulBlock","src":"4335:124:19","statements":[{"nodeType":"YulAssignment","src":"4345:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4357:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4368:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:19"},"nodeType":"YulFunctionCall","src":"4353:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4345:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4425:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4438:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4449:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4434:3:19"},"nodeType":"YulFunctionCall","src":"4434:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4381:43:19"},"nodeType":"YulFunctionCall","src":"4381:71:19"},"nodeType":"YulExpressionStatement","src":"4381:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4307:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4319:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4330:4:19","type":""}],"src":"4237:222:19"},{"body":{"nodeType":"YulBlock","src":"4591:206:19","statements":[{"nodeType":"YulAssignment","src":"4601:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4613:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4624:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4609:3:19"},"nodeType":"YulFunctionCall","src":"4609:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4601:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4681:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4705:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4690:3:19"},"nodeType":"YulFunctionCall","src":"4690:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4637:43:19"},"nodeType":"YulFunctionCall","src":"4637:71:19"},"nodeType":"YulExpressionStatement","src":"4637:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4762:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4775:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4786:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4771:3:19"},"nodeType":"YulFunctionCall","src":"4771:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4718:43:19"},"nodeType":"YulFunctionCall","src":"4718:72:19"},"nodeType":"YulExpressionStatement","src":"4718:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4555:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4567:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4575:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4586:4:19","type":""}],"src":"4465:332:19"},{"body":{"nodeType":"YulBlock","src":"4899:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4916:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4921:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4909:6:19"},"nodeType":"YulFunctionCall","src":"4909:19:19"},"nodeType":"YulExpressionStatement","src":"4909:19:19"},{"nodeType":"YulAssignment","src":"4937:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4956:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4961:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4952:3:19"},"nodeType":"YulFunctionCall","src":"4952:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4937:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4871:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"4876:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4887:11:19","type":""}],"src":"4803:169:19"},{"body":{"nodeType":"YulBlock","src":"5022:261:19","statements":[{"nodeType":"YulAssignment","src":"5032:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5055:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5037:17:19"},"nodeType":"YulFunctionCall","src":"5037:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5032:1:19"}]},{"nodeType":"YulAssignment","src":"5066:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5089:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5071:17:19"},"nodeType":"YulFunctionCall","src":"5071:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5066:1:19"}]},{"body":{"nodeType":"YulBlock","src":"5229:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5231:16:19"},"nodeType":"YulFunctionCall","src":"5231:18:19"},"nodeType":"YulExpressionStatement","src":"5231:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5150:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5157:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"5225:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5153:3:19"},"nodeType":"YulFunctionCall","src":"5153:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5147:2:19"},"nodeType":"YulFunctionCall","src":"5147:81:19"},"nodeType":"YulIf","src":"5144:2:19"},{"nodeType":"YulAssignment","src":"5261:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5272:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5275:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5268:3:19"},"nodeType":"YulFunctionCall","src":"5268:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5261:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5009:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"5012:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5018:3:19","type":""}],"src":"4978:305:19"},{"body":{"nodeType":"YulBlock","src":"5362:775:19","statements":[{"nodeType":"YulAssignment","src":"5372:15:19","value":{"name":"_power","nodeType":"YulIdentifier","src":"5381:6:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5372:5:19"}]},{"nodeType":"YulAssignment","src":"5396:14:19","value":{"name":"_base","nodeType":"YulIdentifier","src":"5405:5:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5396:4:19"}]},{"body":{"nodeType":"YulBlock","src":"5454:677:19","statements":[{"body":{"nodeType":"YulBlock","src":"5542:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5544:16:19"},"nodeType":"YulFunctionCall","src":"5544:18:19"},"nodeType":"YulExpressionStatement","src":"5544:18:19"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5520:4:19"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"5530:3:19"},{"name":"base","nodeType":"YulIdentifier","src":"5535:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5526:3:19"},"nodeType":"YulFunctionCall","src":"5526:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5517:2:19"},"nodeType":"YulFunctionCall","src":"5517:24:19"},"nodeType":"YulIf","src":"5514:2:19"},{"body":{"nodeType":"YulBlock","src":"5609:419:19","statements":[{"nodeType":"YulAssignment","src":"5989:25:19","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6002:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"6009:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5998:3:19"},"nodeType":"YulFunctionCall","src":"5998:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5989:5:19"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5584:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"5594:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5580:3:19"},"nodeType":"YulFunctionCall","src":"5580:16:19"},"nodeType":"YulIf","src":"5577:2:19"},{"nodeType":"YulAssignment","src":"6041:23:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6053:4:19"},{"name":"base","nodeType":"YulIdentifier","src":"6059:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6049:3:19"},"nodeType":"YulFunctionCall","src":"6049:15:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6041:4:19"}]},{"nodeType":"YulAssignment","src":"6077:44:19","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6112:8:19"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"6089:22:19"},"nodeType":"YulFunctionCall","src":"6089:32:19"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6077:8:19"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5430:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"5440:1:19","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5427:2:19"},"nodeType":"YulFunctionCall","src":"5427:15:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5443:2:19","statements":[]},"pre":{"nodeType":"YulBlock","src":"5423:3:19","statements":[]},"src":"5419:712:19"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"5317:6:19","type":""},{"name":"_base","nodeType":"YulTypedName","src":"5325:5:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5332:8:19","type":""},{"name":"max","nodeType":"YulTypedName","src":"5342:3:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5350:5:19","type":""},{"name":"base","nodeType":"YulTypedName","src":"5357:4:19","type":""}],"src":"5289:848:19"},{"body":{"nodeType":"YulBlock","src":"6207:217:19","statements":[{"nodeType":"YulAssignment","src":"6217:31:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6243:4:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6225:17:19"},"nodeType":"YulFunctionCall","src":"6225:23:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6217:4:19"}]},{"nodeType":"YulAssignment","src":"6257:37:19","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6285:8:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6269:15:19"},"nodeType":"YulFunctionCall","src":"6269:25:19"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6257:8:19"}]},{"nodeType":"YulAssignment","src":"6304:113:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6334:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"6340:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"6350:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"6313:20:19"},"nodeType":"YulFunctionCall","src":"6313:104:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6304:5:19"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6182:4:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6188:8:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6201:5:19","type":""}],"src":"6143:281:19"},{"body":{"nodeType":"YulBlock","src":"6490:1013:19","statements":[{"body":{"nodeType":"YulBlock","src":"6685:20:19","statements":[{"nodeType":"YulAssignment","src":"6687:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6696:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6687:5:19"}]},{"nodeType":"YulLeave","src":"6698:5:19"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6675:8:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6668:6:19"},"nodeType":"YulFunctionCall","src":"6668:16:19"},"nodeType":"YulIf","src":"6665:2:19"},{"body":{"nodeType":"YulBlock","src":"6730:20:19","statements":[{"nodeType":"YulAssignment","src":"6732:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6741:1:19","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6732:5:19"}]},{"nodeType":"YulLeave","src":"6743:5:19"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6724:4:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6717:6:19"},"nodeType":"YulFunctionCall","src":"6717:12:19"},"nodeType":"YulIf","src":"6714:2:19"},{"cases":[{"body":{"nodeType":"YulBlock","src":"6860:20:19","statements":[{"nodeType":"YulAssignment","src":"6862:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6871:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6862:5:19"}]},{"nodeType":"YulLeave","src":"6873:5:19"}]},"nodeType":"YulCase","src":"6853:27:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6858:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6904:176:19","statements":[{"body":{"nodeType":"YulBlock","src":"6939:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6941:16:19"},"nodeType":"YulFunctionCall","src":"6941:18:19"},"nodeType":"YulExpressionStatement","src":"6941:18:19"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6924:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"6934:3:19","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6921:2:19"},"nodeType":"YulFunctionCall","src":"6921:17:19"},"nodeType":"YulIf","src":"6918:2:19"},{"nodeType":"YulAssignment","src":"6974:25:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6987:1:19","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"6990:8:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"6983:3:19"},"nodeType":"YulFunctionCall","src":"6983:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6974:5:19"}]},{"body":{"nodeType":"YulBlock","src":"7030:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7032:16:19"},"nodeType":"YulFunctionCall","src":"7032:18:19"},"nodeType":"YulExpressionStatement","src":"7032:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7018:5:19"},{"name":"max","nodeType":"YulIdentifier","src":"7025:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7015:2:19"},"nodeType":"YulFunctionCall","src":"7015:14:19"},"nodeType":"YulIf","src":"7012:2:19"},{"nodeType":"YulLeave","src":"7065:5:19"}]},"nodeType":"YulCase","src":"6889:191:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6894:1:19","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"6810:4:19"},"nodeType":"YulSwitch","src":"6803:277:19"},{"body":{"nodeType":"YulBlock","src":"7212:123:19","statements":[{"nodeType":"YulAssignment","src":"7226:28:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7239:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"7245:8:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7235:3:19"},"nodeType":"YulFunctionCall","src":"7235:19:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7226:5:19"}]},{"body":{"nodeType":"YulBlock","src":"7285:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7287:16:19"},"nodeType":"YulFunctionCall","src":"7287:18:19"},"nodeType":"YulExpressionStatement","src":"7287:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7273:5:19"},{"name":"max","nodeType":"YulIdentifier","src":"7280:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7270:2:19"},"nodeType":"YulFunctionCall","src":"7270:14:19"},"nodeType":"YulIf","src":"7267:2:19"},{"nodeType":"YulLeave","src":"7320:5:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7115:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"7121:2:19","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7112:2:19"},"nodeType":"YulFunctionCall","src":"7112:12:19"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7129:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"7139:2:19","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7126:2:19"},"nodeType":"YulFunctionCall","src":"7126:16:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7108:3:19"},"nodeType":"YulFunctionCall","src":"7108:35:19"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7164:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"7170:3:19","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7161:2:19"},"nodeType":"YulFunctionCall","src":"7161:13:19"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7179:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"7189:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7176:2:19"},"nodeType":"YulFunctionCall","src":"7176:16:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7157:3:19"},"nodeType":"YulFunctionCall","src":"7157:36:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7092:2:19"},"nodeType":"YulFunctionCall","src":"7092:111:19"},"nodeType":"YulIf","src":"7089:2:19"},{"nodeType":"YulAssignment","src":"7345:57:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7379:1:19","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"7382:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"7388:8:19"},{"name":"max","nodeType":"YulIdentifier","src":"7398:3:19"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7360:18:19"},"nodeType":"YulFunctionCall","src":"7360:42:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7345:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"7352:4:19"}]},{"body":{"nodeType":"YulBlock","src":"7441:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7443:16:19"},"nodeType":"YulFunctionCall","src":"7443:18:19"},"nodeType":"YulExpressionStatement","src":"7443:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7418:5:19"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7429:3:19"},{"name":"base","nodeType":"YulIdentifier","src":"7434:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7425:3:19"},"nodeType":"YulFunctionCall","src":"7425:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7415:2:19"},"nodeType":"YulFunctionCall","src":"7415:25:19"},"nodeType":"YulIf","src":"7412:2:19"},{"nodeType":"YulAssignment","src":"7472:25:19","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7485:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"7492:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7481:3:19"},"nodeType":"YulFunctionCall","src":"7481:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7472:5:19"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6460:4:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6466:8:19","type":""},{"name":"max","nodeType":"YulTypedName","src":"6476:3:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6484:5:19","type":""}],"src":"6430:1073:19"},{"body":{"nodeType":"YulBlock","src":"7557:300:19","statements":[{"nodeType":"YulAssignment","src":"7567:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7590:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7572:17:19"},"nodeType":"YulFunctionCall","src":"7572:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7567:1:19"}]},{"nodeType":"YulAssignment","src":"7601:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7624:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7606:17:19"},"nodeType":"YulFunctionCall","src":"7606:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7601:1:19"}]},{"body":{"nodeType":"YulBlock","src":"7799:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7801:16:19"},"nodeType":"YulFunctionCall","src":"7801:18:19"},"nodeType":"YulExpressionStatement","src":"7801:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7711:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7704:6:19"},"nodeType":"YulFunctionCall","src":"7704:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7697:6:19"},"nodeType":"YulFunctionCall","src":"7697:17:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7719:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7726:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"7794:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7722:3:19"},"nodeType":"YulFunctionCall","src":"7722:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7716:2:19"},"nodeType":"YulFunctionCall","src":"7716:81:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7693:3:19"},"nodeType":"YulFunctionCall","src":"7693:105:19"},"nodeType":"YulIf","src":"7690:2:19"},{"nodeType":"YulAssignment","src":"7831:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7846:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"7849:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7842:3:19"},"nodeType":"YulFunctionCall","src":"7842:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7831:7:19"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7540:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"7543:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7549:7:19","type":""}],"src":"7509:348:19"},{"body":{"nodeType":"YulBlock","src":"7908:146:19","statements":[{"nodeType":"YulAssignment","src":"7918:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7941:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7923:17:19"},"nodeType":"YulFunctionCall","src":"7923:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7918:1:19"}]},{"nodeType":"YulAssignment","src":"7952:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7975:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7957:17:19"},"nodeType":"YulFunctionCall","src":"7957:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7952:1:19"}]},{"body":{"nodeType":"YulBlock","src":"7999:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8001:16:19"},"nodeType":"YulFunctionCall","src":"8001:18:19"},"nodeType":"YulExpressionStatement","src":"8001:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7993:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"7996:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7990:2:19"},"nodeType":"YulFunctionCall","src":"7990:8:19"},"nodeType":"YulIf","src":"7987:2:19"},{"nodeType":"YulAssignment","src":"8031:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8043:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8046:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8039:3:19"},"nodeType":"YulFunctionCall","src":"8039:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8031:4:19"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7894:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"7897:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7903:4:19","type":""}],"src":"7863:191:19"},{"body":{"nodeType":"YulBlock","src":"8105:51:19","statements":[{"nodeType":"YulAssignment","src":"8115:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8144:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8126:17:19"},"nodeType":"YulFunctionCall","src":"8126:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8115:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8087:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8097:7:19","type":""}],"src":"8060:96:19"},{"body":{"nodeType":"YulBlock","src":"8207:32:19","statements":[{"nodeType":"YulAssignment","src":"8217:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"8228:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8217:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8189:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8199:7:19","type":""}],"src":"8162:77:19"},{"body":{"nodeType":"YulBlock","src":"8290:81:19","statements":[{"nodeType":"YulAssignment","src":"8300:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8315:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8322:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8311:3:19"},"nodeType":"YulFunctionCall","src":"8311:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8300:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8272:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8282:7:19","type":""}],"src":"8245:126:19"},{"body":{"nodeType":"YulBlock","src":"8422:32:19","statements":[{"nodeType":"YulAssignment","src":"8432:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"8443:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8432:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8404:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8414:7:19","type":""}],"src":"8377:77:19"},{"body":{"nodeType":"YulBlock","src":"8503:43:19","statements":[{"nodeType":"YulAssignment","src":"8513:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8528:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8535:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8524:3:19"},"nodeType":"YulFunctionCall","src":"8524:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8513:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8485:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8495:7:19","type":""}],"src":"8460:86:19"},{"body":{"nodeType":"YulBlock","src":"8603:269:19","statements":[{"nodeType":"YulAssignment","src":"8613:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8627:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"8633:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8623:3:19"},"nodeType":"YulFunctionCall","src":"8623:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8613:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"8644:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8674:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"8680:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8670:3:19"},"nodeType":"YulFunctionCall","src":"8670:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8648:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"8721:51:19","statements":[{"nodeType":"YulAssignment","src":"8735:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8749:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8757:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8745:3:19"},"nodeType":"YulFunctionCall","src":"8745:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8735:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8701:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8694:6:19"},"nodeType":"YulFunctionCall","src":"8694:26:19"},"nodeType":"YulIf","src":"8691:2:19"},{"body":{"nodeType":"YulBlock","src":"8824:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8838:16:19"},"nodeType":"YulFunctionCall","src":"8838:18:19"},"nodeType":"YulExpressionStatement","src":"8838:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8788:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8811:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8819:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8808:2:19"},"nodeType":"YulFunctionCall","src":"8808:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8785:2:19"},"nodeType":"YulFunctionCall","src":"8785:38:19"},"nodeType":"YulIf","src":"8782:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8587:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8596:6:19","type":""}],"src":"8552:320:19"},{"body":{"nodeType":"YulBlock","src":"8906:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8923:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8926:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8916:6:19"},"nodeType":"YulFunctionCall","src":"8916:88:19"},"nodeType":"YulExpressionStatement","src":"8916:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9020:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9023:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9013:6:19"},"nodeType":"YulFunctionCall","src":"9013:15:19"},"nodeType":"YulExpressionStatement","src":"9013:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9044:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9047:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9037:6:19"},"nodeType":"YulFunctionCall","src":"9037:15:19"},"nodeType":"YulExpressionStatement","src":"9037:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8878:180:19"},{"body":{"nodeType":"YulBlock","src":"9092:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9109:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9112:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9102:6:19"},"nodeType":"YulFunctionCall","src":"9102:88:19"},"nodeType":"YulExpressionStatement","src":"9102:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9206:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9209:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9199:6:19"},"nodeType":"YulFunctionCall","src":"9199:15:19"},"nodeType":"YulExpressionStatement","src":"9199:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9230:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9233:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9223:6:19"},"nodeType":"YulFunctionCall","src":"9223:15:19"},"nodeType":"YulExpressionStatement","src":"9223:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"9064:180:19"},{"body":{"nodeType":"YulBlock","src":"9301:51:19","statements":[{"nodeType":"YulAssignment","src":"9311:34:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9336:1:19","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"9339:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9332:3:19"},"nodeType":"YulFunctionCall","src":"9332:13:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9311:8:19"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9282:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9292:8:19","type":""}],"src":"9250:102:19"},{"body":{"nodeType":"YulBlock","src":"9464:129:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9486:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9494:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9482:3:19"},"nodeType":"YulFunctionCall","src":"9482:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"9498:34:19","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9475:6:19"},"nodeType":"YulFunctionCall","src":"9475:58:19"},"nodeType":"YulExpressionStatement","src":"9475:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9554:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9562:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9550:3:19"},"nodeType":"YulFunctionCall","src":"9550:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"9567:18:19","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9543:6:19"},"nodeType":"YulFunctionCall","src":"9543:43:19"},"nodeType":"YulExpressionStatement","src":"9543:43:19"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9456:6:19","type":""}],"src":"9358:235:19"},{"body":{"nodeType":"YulBlock","src":"9705:120:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9727:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9735:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:19"},"nodeType":"YulFunctionCall","src":"9723:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"9739:34:19","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9716:6:19"},"nodeType":"YulFunctionCall","src":"9716:58:19"},"nodeType":"YulExpressionStatement","src":"9716:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9795:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9803:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9791:3:19"},"nodeType":"YulFunctionCall","src":"9791:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"9808:9:19","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9784:6:19"},"nodeType":"YulFunctionCall","src":"9784:34:19"},"nodeType":"YulExpressionStatement","src":"9784:34:19"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9697:6:19","type":""}],"src":"9599:226:19"},{"body":{"nodeType":"YulBlock","src":"9937:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9959:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9967:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9955:3:19"},"nodeType":"YulFunctionCall","src":"9955:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"9971:34:19","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9948:6:19"},"nodeType":"YulFunctionCall","src":"9948:58:19"},"nodeType":"YulExpressionStatement","src":"9948:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10027:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10035:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10023:3:19"},"nodeType":"YulFunctionCall","src":"10023:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"10040:8:19","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10016:6:19"},"nodeType":"YulFunctionCall","src":"10016:33:19"},"nodeType":"YulExpressionStatement","src":"10016:33:19"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9929:6:19","type":""}],"src":"9831:225:19"},{"body":{"nodeType":"YulBlock","src":"10168:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10190:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10198:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10186:3:19"},"nodeType":"YulFunctionCall","src":"10186:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"10202:33:19","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10179:6:19"},"nodeType":"YulFunctionCall","src":"10179:57:19"},"nodeType":"YulExpressionStatement","src":"10179:57:19"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10160:6:19","type":""}],"src":"10062:181:19"}]},"contents":"{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D65676174656368000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D65676174656368000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x104 SWAP3 SWAP2 SWAP1 PUSH3 0xFFB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x11D SWAP3 SWAP2 SWAP1 PUSH3 0xFFB JUMP JUMPDEST POP POP POP PUSH3 0x140 PUSH3 0x134 PUSH3 0x23D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x245 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1A9 DUP2 DUP5 DUP5 PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x237 CALLER PUSH3 0x20B PUSH3 0x347 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x219 SWAP2 SWAP1 PUSH3 0x1372 JUMP JUMPDEST PUSH5 0x12A05F200 PUSH3 0x22B SWAP2 SWAP1 PUSH3 0x14AF JUMP JUMPDEST PUSH3 0x350 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1757 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x328 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x117A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x367 DUP3 DUP3 PUSH3 0x36B PUSH1 0x20 SHL PUSH3 0x122C OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x382 DUP3 DUP3 PUSH3 0x429 PUSH1 0x20 SHL PUSH3 0x12B9 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x392 PUSH3 0x5A2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x3C0 PUSH3 0x5C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3FB SWAP1 PUSH3 0x11D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x423 PUSH1 0xE PUSH3 0x5D0 PUSH1 0x20 SHL PUSH3 0x1419 OR DUP4 PUSH3 0x5E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x493 SWAP1 PUSH3 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4B0 PUSH1 0x0 DUP4 DUP4 PUSH3 0x905 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x4C4 SWAP2 SWAP1 PUSH3 0x12BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x51B SWAP2 SWAP1 PUSH3 0x12BA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x582 SWAP2 SWAP1 PUSH3 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x59E PUSH1 0x0 DUP4 DUP4 PUSH3 0x922 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x5E0 SWAP2 SWAP1 PUSH3 0x12BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH3 0x681 JUMPI DUP6 PUSH1 0x1 DUP3 PUSH3 0x60D SWAP2 SWAP1 PUSH3 0x1510 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x645 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x684 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH3 0x6B0 DUP4 DUP6 DUP8 PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH3 0x72D JUMPI POP NUMBER DUP7 PUSH1 0x1 DUP4 PUSH3 0x6CF SWAP2 SWAP1 PUSH3 0x1510 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x707 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x7F2 JUMPI PUSH3 0x749 DUP3 PUSH3 0x93F PUSH1 0x20 SHL PUSH3 0x142F OR PUSH1 0x20 SHR JUMP JUMPDEST DUP7 PUSH1 0x1 DUP4 PUSH3 0x759 SWAP2 SWAP1 PUSH3 0x1510 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x791 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x8FC JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x814 NUMBER PUSH3 0x9AD PUSH1 0x20 SHL PUSH3 0x149A OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x835 DUP6 PUSH3 0x93F PUSH1 0x20 SHL PUSH3 0x142F OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x91D DUP4 DUP4 DUP4 PUSH3 0xA03 PUSH1 0x20 SHL PUSH3 0x14ED OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x93A DUP4 DUP4 DUP4 PUSH3 0xAFE PUSH1 0x20 SHL PUSH3 0x15A7 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x99C SWAP1 PUSH3 0x11F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9F2 SWAP1 PUSH3 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA1B DUP4 DUP4 DUP4 PUSH3 0xB4E PUSH1 0x20 SHL PUSH3 0x15D2 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xA78 JUMPI PUSH3 0xA62 DUP3 PUSH3 0xB53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA72 PUSH3 0xBB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAF9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xAD5 JUMPI PUSH3 0xABF DUP4 PUSH3 0xB53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xACF PUSH3 0xBB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAF8 JUMP JUMPDEST PUSH3 0xAE6 DUP4 PUSH3 0xB53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAF7 DUP3 PUSH3 0xB53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xB16 DUP4 DUP4 DUP4 PUSH3 0xBDA PUSH1 0x20 SHL PUSH3 0x15D7 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB49 PUSH3 0xB2B DUP5 PUSH3 0xBDF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB3C DUP5 PUSH3 0xBDF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xC48 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xBB3 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xBA7 DUP4 PUSH3 0xE6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xEB3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0xBD8 PUSH1 0x6 PUSH3 0xBCC PUSH3 0x5C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xEB3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xC85 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xE66 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD78 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD1F PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xF3F PUSH1 0x20 SHL PUSH3 0x15DC OR DUP6 PUSH3 0x5E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xD6D SWAP3 SWAP2 SWAP1 PUSH3 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xE65 JUMPI PUSH1 0x0 DUP1 PUSH3 0xE0C PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x5D0 PUSH1 0x20 SHL PUSH3 0x1419 OR DUP6 PUSH3 0x5E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xE5A SWAP3 SWAP2 SWAP1 PUSH3 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xEC5 PUSH3 0xF57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0xEDC DUP5 PUSH1 0x0 ADD PUSH3 0xF75 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST LT ISZERO PUSH3 0xF3A JUMPI DUP3 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xF4F SWAP2 SWAP1 PUSH3 0x1510 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF70 PUSH1 0x8 PUSH3 0xFED PUSH1 0x20 SHL PUSH3 0x15F2 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH3 0xF8E JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xFE8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH3 0xFA2 SWAP2 SWAP1 PUSH3 0x1510 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0xFDA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1009 SWAP1 PUSH3 0x15A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x102D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1079 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1048 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1079 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1079 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1078 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x105B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1088 SWAP2 SWAP1 PUSH3 0x108C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x10A7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x108D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x10B6 DUP2 PUSH3 0x154B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x10C7 DUP2 PUSH3 0x155F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10DC PUSH1 0x30 DUP4 PUSH3 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH3 0x10E9 DUP3 PUSH3 0x1641 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1103 PUSH1 0x27 DUP4 PUSH3 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH3 0x1110 DUP3 PUSH3 0x1690 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x112A PUSH1 0x26 DUP4 PUSH3 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH3 0x1137 DUP3 PUSH3 0x16DF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1151 PUSH1 0x1F DUP4 PUSH3 0x12A9 JUMP JUMPDEST SWAP2 POP PUSH3 0x115E DUP3 PUSH3 0x172E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1174 DUP2 PUSH3 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1191 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x10BC JUMP JUMPDEST PUSH3 0x11A0 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x10BC JUMP JUMPDEST PUSH3 0x11AF PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x10BC JUMP JUMPDEST PUSH3 0x11BE PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x1169 JUMP JUMPDEST PUSH3 0x11CD PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x10AB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11F2 DUP2 PUSH3 0x10CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1214 DUP2 PUSH3 0x10F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1236 DUP2 PUSH3 0x111B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1258 DUP2 PUSH3 0x1142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1276 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1169 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x1293 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1169 JUMP JUMPDEST PUSH3 0x12A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x1169 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12C7 DUP3 PUSH3 0x1589 JUMP JUMPDEST SWAP2 POP PUSH3 0x12D4 DUP4 PUSH3 0x1589 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x130C JUMPI PUSH3 0x130B PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x1369 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x1341 JUMPI PUSH3 0x1340 PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x1351 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x1361 DUP6 PUSH3 0x1634 JUMP JUMPDEST SWAP5 POP PUSH3 0x1321 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x137F DUP3 PUSH3 0x1589 JUMP JUMPDEST SWAP2 POP PUSH3 0x138C DUP4 PUSH3 0x1593 JUMP JUMPDEST SWAP3 POP PUSH3 0x13BB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x13C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x13D5 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x14A8 JUMP JUMPDEST DUP2 PUSH3 0x13E5 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x14A8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x13FE JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x1409 JUMPI PUSH3 0x143F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x14A8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x141E JUMPI PUSH3 0x141D PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x1438 JUMPI PUSH3 0x1437 PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST POP PUSH3 0x14A8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x1479 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x1473 JUMPI PUSH3 0x1472 PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST PUSH3 0x14A8 JUMP JUMPDEST PUSH3 0x1488 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x1317 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x14A2 JUMPI PUSH3 0x14A1 PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14BC DUP3 PUSH3 0x1589 JUMP JUMPDEST SWAP2 POP PUSH3 0x14C9 DUP4 PUSH3 0x1589 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1505 JUMPI PUSH3 0x1504 PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x151D DUP3 PUSH3 0x1589 JUMP JUMPDEST SWAP2 POP PUSH3 0x152A DUP4 PUSH3 0x1589 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x1540 JUMPI PUSH3 0x153F PUSH3 0x15D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1558 DUP3 PUSH3 0x1569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x15B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x15D0 JUMPI PUSH3 0x15CF PUSH3 0x1605 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x47AE PUSH3 0x17AA PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1B8E ADD MSTORE PUSH1 0x0 PUSH2 0x1BD0 ADD MSTORE PUSH1 0x0 PUSH2 0x1BAF ADD MSTORE PUSH1 0x0 PUSH2 0x1AE4 ADD MSTORE PUSH1 0x0 PUSH2 0x1B3A ADD MSTORE PUSH1 0x0 PUSH2 0x1B63 ADD MSTORE PUSH2 0x47AE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x65A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8E539E8C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x502 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x406 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x35A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x38C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH2 0xB90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x32C5 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x3160 JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x334E JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x11A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x713 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x720 DUP2 DUP6 DUP6 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x74D DUP6 DUP3 DUP6 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x758 DUP6 DUP6 DUP6 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x787 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 DUP2 DUP6 DUP6 PUSH2 0x799 DUP6 DUP10 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83F PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x84F PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x859 DUP3 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86E PUSH2 0x868 PUSH2 0x1600 JUMP JUMPDEST DUP3 PUSH2 0x1DDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8BE DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x8D5 JUMPI PUSH2 0x8D0 DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B PUSH2 0x955 PUSH2 0x1600 JUMP JUMPDEST DUP3 PUSH2 0x1F08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AB PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x149A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA02 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x0 PUSH2 0x2022 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA20 DUP3 PUSH2 0xA1A PUSH2 0x1600 JUMP JUMPDEST DUP4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0xA2A DUP3 DUP3 PUSH2 0x1DDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA77 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF7 PUSH1 0xE DUP4 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB0D SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB86 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB86 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB69 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0x20E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBB3 DUP5 PUSH1 0x6 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBC9 JUMPI PUSH2 0xBC4 PUSH2 0x72B JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xCE2 JUMPI PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD16 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD24 DUP3 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD76 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD8D PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0xD9A DUP2 DUP6 DUP6 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDF SWAP1 PUSH2 0x3AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE4A PUSH2 0xE42 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE27 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x213E JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP PUSH2 0xE55 DUP2 PUSH2 0x2183 JUMP JUMPDEST DUP7 EQ PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP1 PUSH2 0x3B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA0 DUP2 DUP9 PUSH2 0x1F08 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE3 SWAP1 PUSH2 0x3BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF1B DUP13 PUSH2 0x2183 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF31 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xF54 DUP3 PUSH2 0x213E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF64 DUP3 DUP8 DUP8 DUP8 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCB SWAP1 PUSH2 0x3C23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDF DUP11 DUP11 DUP11 PUSH2 0x1608 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107A PUSH2 0x3090 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1217 SWAP1 PUSH2 0x3B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1229 DUP2 PUSH2 0x2022 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1236 DUP3 DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x123E PUSH2 0x21E1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1264 PUSH2 0x72B JUMP JUMPDEST GT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x3C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B3 PUSH1 0xE PUSH2 0x1419 DUP4 PUSH2 0x2205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x3D63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1335 PUSH1 0x0 DUP4 DUP4 PUSH2 0x24EF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1401 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1415 PUSH1 0x0 DUP4 DUP4 PUSH2 0x24FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DC SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP4 DUP4 DUP4 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1536 DUP3 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x153E PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x158E JUMPI PUSH2 0x1581 DUP4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1597 DUP4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x15A0 DUP3 PUSH2 0x250F JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15B2 DUP4 DUP4 DUP4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x15CD PUSH2 0x15BE DUP5 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x15C7 DUP5 PUSH2 0x8E1 JUMP JUMPDEST DUP4 PUSH2 0x2576 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP1 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP1 PUSH2 0x3B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1859 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x184B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1842 SWAP1 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1858 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1608 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C6 SWAP1 PUSH2 0x3CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1936 SWAP1 PUSH2 0x3A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194A DUP4 DUP4 DUP4 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C7 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AC7 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1ADA DUP5 DUP5 DUP5 PUSH2 0x24FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B5C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1B89 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x1BF4 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 PUSH2 0x1C1B DUP3 DUP5 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C89 JUMPI DUP1 SWAP3 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1D27 JUMPI DUP5 PUSH1 0x1 DUP4 PUSH2 0x1CB5 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CEC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x1600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D78 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC5 SWAP1 PUSH2 0x3C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1DDA DUP3 DUP3 PUSH2 0x122C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DE8 DUP3 DUP3 PUSH2 0x27CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E29 SWAP1 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E3A PUSH2 0x27ED JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E73 SWAP1 PUSH2 0x3A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP6 DUP6 PUSH1 0x0 ADD PUSH2 0x27FE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 EQ ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EF0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F13 DUP4 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F20 DUP5 PUSH2 0x9B2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x201C DUP3 DUP5 DUP4 PUSH2 0x2576 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x8 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE PUSH2 0x27ED JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212F SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2151 PUSH2 0x214B PUSH2 0x1AE0 JUMP JUMPDEST DUP4 PUSH2 0x293A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2169 DUP8 DUP8 DUP8 DUP8 PUSH2 0x296D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2176 DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x21D0 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DB DUP2 PUSH2 0x2924 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2299 JUMPI DUP6 PUSH1 0x1 DUP3 PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x225E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x22CA DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2343 JUMPI POP NUMBER DUP7 PUSH1 0x1 DUP4 PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x231D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x2351 DUP3 PUSH2 0x142F JUMP JUMPDEST DUP7 PUSH1 0x1 DUP4 PUSH2 0x235F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2396 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x24E6 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x240B NUMBER PUSH2 0x149A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x241F DUP6 PUSH2 0x142F JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FA DUP4 DUP4 DUP4 PUSH2 0x14ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x250A DUP4 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x255F PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x255A DUP4 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x2DCB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2574 PUSH1 0x6 PUSH2 0x256F PUSH2 0x72B JUMP JUMPDEST PUSH2 0x2DCB JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25B2 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x276A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2690 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2639 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15DC DUP6 PUSH2 0x2205 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2685 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2769 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2712 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1419 DUP6 PUSH2 0x2205 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x275E SWAP3 SWAP2 SWAP1 PUSH2 0x3DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x278A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x27BA SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x27C7 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27D9 DUP3 DUP3 PUSH2 0x2E46 JUMP JUMPDEST PUSH2 0x27E7 PUSH1 0xE PUSH2 0x15DC DUP4 PUSH2 0x2205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F9 PUSH1 0x8 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x2815 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x291E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 PUSH2 0x2834 DUP4 DUP4 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2870 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x2889 JUMPI DUP1 SWAP2 POP PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2896 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x28FD JUMPI POP DUP4 DUP6 PUSH1 0x1 DUP5 PUSH2 0x28B9 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2918 JUMPI PUSH1 0x1 DUP3 PUSH2 0x290F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x291E JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x294F SWAP3 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x29A8 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29C0 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x29D2 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x29F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2A71 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA3 SWAP1 PUSH2 0x3A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BE6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2C60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C57 SWAP1 PUSH2 0x3B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CD3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0B SWAP1 PUSH2 0x3BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x2D4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D86 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2DC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DBE SWAP1 PUSH2 0x3C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD5 PUSH2 0x27ED JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DE4 DUP5 PUSH1 0x0 ADD PUSH2 0x301D JUMP JUMPDEST LT ISZERO PUSH2 0x2E41 JUMPI DUP3 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EAD SWAP1 PUSH2 0x3CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3F SWAP1 PUSH2 0x3AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F9F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3004 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3018 DUP4 PUSH1 0x0 DUP5 PUSH2 0x24FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3034 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x308B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3046 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x307D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30DD DUP2 PUSH2 0x4705 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F2 DUP2 PUSH2 0x471C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3107 DUP2 PUSH2 0x4733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x311C DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3131 DUP2 PUSH2 0x4761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3157 DUP5 DUP3 DUP6 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3181 DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3192 DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31BF DUP7 DUP3 DUP8 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31D0 DUP7 DUP3 DUP8 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31E1 DUP7 DUP3 DUP8 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3214 DUP11 DUP3 DUP12 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3225 DUP11 DUP3 DUP12 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3236 DUP11 DUP3 DUP12 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3247 DUP11 DUP3 DUP12 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3258 DUP11 DUP3 DUP12 ADD PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3269 DUP11 DUP3 DUP12 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x327A DUP11 DUP3 DUP12 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x329C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32BB DUP6 DUP3 DUP7 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32EC DUP10 DUP3 DUP11 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x32FD DUP10 DUP3 DUP11 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x330E DUP10 DUP3 DUP11 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x331F DUP10 DUP3 DUP11 ADD PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3330 DUP10 DUP3 DUP11 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3341 DUP10 DUP3 DUP11 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x336F DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3380 DUP6 DUP3 DUP7 ADD PUSH2 0x310D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x339C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33AA DUP5 DUP3 DUP6 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33BC DUP2 PUSH2 0x3EFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33CB DUP2 PUSH2 0x3F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33DA DUP2 PUSH2 0x3F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33F1 PUSH2 0x33EC DUP3 PUSH2 0x3F18 JUMP JUMPDEST PUSH2 0x3FF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3402 DUP3 PUSH2 0x3E18 JUMP JUMPDEST PUSH2 0x340C DUP2 DUP6 PUSH2 0x3E23 JUMP JUMPDEST SWAP4 POP PUSH2 0x341C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F91 JUMP JUMPDEST PUSH2 0x3425 DUP2 PUSH2 0x408D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343D PUSH1 0x18 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3448 DUP3 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3460 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x346B DUP3 PUSH2 0x40C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3483 PUSH1 0x23 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x348E DUP3 PUSH2 0x40F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A6 PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34B1 DUP3 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C9 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D4 DUP3 PUSH2 0x4168 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EC PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F7 DUP3 PUSH2 0x4191 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350F PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x351A DUP3 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3532 PUSH1 0x19 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x353D DUP3 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3555 PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3560 DUP3 PUSH2 0x4232 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x4281 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359B PUSH1 0x2 DUP4 PUSH2 0x3E34 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A6 DUP3 PUSH2 0x42D0 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BE PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x35C9 DUP3 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EC DUP3 PUSH2 0x4322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3604 PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x360F DUP3 PUSH2 0x434B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3627 PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3632 DUP3 PUSH2 0x439A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364A PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3655 DUP3 PUSH2 0x43E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366D PUSH1 0x1E DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3678 DUP3 PUSH2 0x4438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3690 PUSH1 0x30 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x369B DUP3 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B3 PUSH1 0x20 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x36BE DUP3 PUSH2 0x44B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 PUSH1 0x27 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x36E1 DUP3 PUSH2 0x44D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F9 PUSH1 0x21 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3704 DUP3 PUSH2 0x4528 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371C PUSH1 0x25 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3727 DUP3 PUSH2 0x4577 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x373F PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x374A DUP3 PUSH2 0x45C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3762 PUSH1 0x24 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x376D DUP3 PUSH2 0x4615 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3785 PUSH1 0x16 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3790 DUP3 PUSH2 0x4664 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A8 PUSH1 0x25 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B3 DUP3 PUSH2 0x468D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CB PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x37D6 DUP3 PUSH2 0x46DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37F7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x382E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x380A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3810 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3819 DUP2 PUSH2 0x3F42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3828 DUP2 PUSH2 0x3F6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3837 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3846 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3855 DUP2 PUSH2 0x3F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 DUP3 PUSH2 0x358E JUMP JUMPDEST SWAP2 POP PUSH2 0x3872 DUP3 DUP6 PUSH2 0x33E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3882 DUP3 DUP5 PUSH2 0x33E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x38F8 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3905 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x3912 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x391F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x392C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3939 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3959 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3966 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x3973 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3980 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x399E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39AB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39B8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39C5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x39D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x33B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x384C JUMP JUMPDEST PUSH2 0x3A0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3B DUP2 DUP5 PUSH2 0x33F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5C DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A7C DUP2 PUSH2 0x3453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9C DUP2 PUSH2 0x3476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ABC DUP2 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADC DUP2 PUSH2 0x34BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AFC DUP2 PUSH2 0x34DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1C DUP2 PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3C DUP2 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B5C DUP2 PUSH2 0x3548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7C DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B9C DUP2 PUSH2 0x35B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBC DUP2 PUSH2 0x35D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BDC DUP2 PUSH2 0x35F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BFC DUP2 PUSH2 0x361A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C1C DUP2 PUSH2 0x363D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3C DUP2 PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C5C DUP2 PUSH2 0x3683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C7C DUP2 PUSH2 0x36A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C9C DUP2 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CBC DUP2 PUSH2 0x36EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CDC DUP2 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFC DUP2 PUSH2 0x3732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D1C DUP2 PUSH2 0x3755 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3C DUP2 PUSH2 0x3778 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D5C DUP2 PUSH2 0x379B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7C DUP2 PUSH2 0x37BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DCE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3DDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x383D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4A DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E55 DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3E8A JUMPI PUSH2 0x3E89 PUSH2 0x4000 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAB DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x402F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED1 DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDC DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3EEF JUMPI PUSH2 0x3EEE PUSH2 0x4000 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F05 DUP3 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F94 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3FBE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3FDC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3FF0 JUMPI PUSH2 0x3FEF PUSH2 0x405E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206E6F6E6578697374656E74206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206964206973203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x470E DUP2 PUSH2 0x3EFA JUMP JUMPDEST DUP2 EQ PUSH2 0x4719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4725 DUP2 PUSH2 0x3F18 JUMP JUMPDEST DUP2 EQ PUSH2 0x4730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x473C DUP2 PUSH2 0x3F6A JUMP JUMPDEST DUP2 EQ PUSH2 0x4747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4753 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP2 EQ PUSH2 0x475E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x476A DUP2 PUSH2 0x3F84 JUMP JUMPDEST DUP2 EQ PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP3 TIMESTAMP 0xED PUSH25 0x5019141DF7C049F40D8AFE656ECDDAB11734D9A60A2C1579FE DUP1 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"1137:1202:18:-:0;;;1258:126;;;;;;;;;;1835:52:8;;;;;;;;;;;;;;;;;1874:4;2455:602:15;;;;;;;;;;;;;;;;;1978:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2520:18:15;2557:4;2541:22;;;;;;2520:43;;2573:21;2613:7;2597:25;;;;;;2573:49;;2632:16;2651:117;2632:136;;2793:10;2778:25;;;;;;2831:13;2813:31;;;;;;2873:13;2854:32;;;;;;2923:58;2945:8;2955:10;2967:13;2923:21;;;:58;;:::i;:::-;2896:85;;;;;;3014:4;2991:28;;;;;;;;;;;;3042:8;3029:21;;;;;;2455:602;;;;;1835:52:8;1331:46:18::2;1337:10;1366;:8;;;:10;;:::i;:::-;1362:2;:14;;;;:::i;:::-;1349:10;:27;;;;:::i;:::-;1331:5;;;:46;;:::i;:::-;1137:1202:::0;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;3457:257:15:-;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;3093:91:2:-;3151:5;3175:2;3168:9;;3093:91;:::o;2041:140:18:-;2151:23;2163:2;2167:6;2151:11;;;;;:23;;:::i;:::-;2041:140;;:::o;6305:285:6:-;6389:28;6401:7;6410:6;6389:11;;;;;:28;;:::i;:::-;6452:12;:10;;;:12;;:::i;:::-;6435:29;;:13;:11;;;:13;;:::i;:::-;:29;;6427:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6528:55;6545:23;6570:4;;;;;6576:6;6528:16;;;:55;;:::i;:::-;;;6305:285;;:::o;8402:389:2:-;8504:1;8485:21;;:7;:21;;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;;;:49;;:::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;;;:48;;:::i;:::-;8402:389;;:::o;6113:103:6:-;6166:7;6192:17;6185:24;;6113:103;:::o;3244:106:2:-;3305:7;3331:12;;3324:19;;3244:106;:::o;9069:96:6:-;9127:7;9157:1;9153;:5;;;;:::i;:::-;9146:12;;9069:96;;;;:::o;8432:631::-;8602:17;8621;8650:11;8664:5;:12;;;;8650:26;;8705:1;8698:3;:8;:35;;8713:5;8725:1;8719:3;:7;;;;:::i;:::-;8713:14;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;8698:35;;;8709:1;8698:35;8686:47;;;;8755:20;8758:9;8769:5;8755:2;:20;;:::i;:::-;8743:32;;8796:1;8790:3;:7;:51;;;;;8829:12;8801:5;8813:1;8807:3;:7;;;;:::i;:::-;8801:14;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:40;;;8790:51;8786:271;;;8880:29;8899:9;8880:18;;;;;:29;;:::i;:::-;8857:5;8869:1;8863:3;:7;;;;:::i;:::-;8857:14;;;;;;;;;;;;;;;;;;;;;;;:20;;;:52;;;;;;;;;;;;;;;;;;8786:271;;;8940:5;8951:94;;;;;;;;8974:31;8992:12;8974:17;;;;;:31;;:::i;:::-;8951:94;;;;;;9014:29;9033:9;9014:18;;;;;:29;;:::i;:::-;8951:94;;;;;8940:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8786:271;8432:631;;;;;;;:::o;1628:203:18:-;1780:44;1807:4;1813:2;1817:6;1780:26;;;;;:44;;:::i;:::-;1628:203;;;:::o;1837:198::-;1985:43;2011:4;2017:2;2021:6;1985:25;;;;;:43;;:::i;:::-;1837:198;;;:::o;2751:192:17:-;2808:7;2844:17;2835:26;;:5;:26;;2827:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2930:5;2915:21;;2751:192;;;:::o;15179:187::-;15235:6;15270:16;15261:25;;:5;:25;;15253:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15353:5;15339:20;;15179:187;;;:::o;5802:602:5:-;5940:44;5967:4;5973:2;5977:6;5940:26;;;;;:44;;:::i;:::-;6015:1;5999:18;;:4;:18;;;5995:403;;;6053:26;6076:2;6053:22;;;:26;;:::i;:::-;6093:28;:26;;;:28;;:::i;:::-;5995:403;;;6156:1;6142:16;;:2;:16;;;6138:260;;;6194:28;6217:4;6194:22;;;:28;;:::i;:::-;6236;:26;;;:28;;:::i;:::-;6138:260;;;6319:28;6342:4;6319:22;;;:28;;:::i;:::-;6361:26;6384:2;6361:22;;;:26;;:::i;:::-;6138:260;5995:403;5802:602;;;:::o;7002:254:6:-;7139:43;7165:4;7171:2;7175:6;7139:25;;;;;:43;;:::i;:::-;7193:56;7210:15;7220:4;7210:9;;;:15;;:::i;:::-;7227:13;7237:2;7227:9;;;:13;;:::i;:::-;7242:6;7193:16;;;:56;;:::i;:::-;7002:254;;;:::o;11786:121:2:-;;;;:::o;8010:144:5:-;8077:70;8093:24;:33;8118:7;8093:33;;;;;;;;;;;;;;;8128:18;8138:7;8128:9;;;:18;;:::i;:::-;8077:15;;;:70;;:::i;:::-;8010:144;:::o;8160:116::-;8216:53;8232:21;8255:13;:11;;;:13;;:::i;:::-;8216:15;;;:53;;:::i;:::-;8160:116::o;12495:120:2:-;;;;:::o;2218:126:6:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;7799:627::-;7926:3;7919:10;;:3;:10;;;;:24;;;;;7942:1;7933:6;:10;7919:24;7915:505;;;7978:1;7963:17;;:3;:17;;;7959:221;;8001:17;8020;8041:54;8058:12;:17;8071:3;8058:17;;;;;;;;;;;;;;;8077:9;;;;;8088:6;8041:16;;;:54;;:::i;:::-;8000:95;;;;8139:3;8118:47;;;8144:9;8155;8118:47;;;;;;;:::i;:::-;;;;;;;;7959:221;;;8213:1;8198:17;;:3;:17;;;8194:216;;8236:17;8255;8276:49;8293:12;:17;8306:3;8293:17;;;;;;;;;;;;;;;8312:4;;;;;8318:6;8276:16;;;:49;;:::i;:::-;8235:90;;;;8369:3;8348:47;;;8374:9;8385;8348:47;;;;;;;:::i;:::-;;;;;;;;8194:216;;;7915:505;7799:627;;;:::o;3408:125:2:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;8282:304:5:-;8376:17;8396:23;:21;;;:23;;:::i;:::-;8376:43;;8466:9;8433:30;8449:9;:13;;8433:15;;;:30;;:::i;:::-;:42;8429:151;;;8491:9;:13;;8510:9;8491:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8534:9;:16;;8556:12;8534:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8429:151;8282:304;;;:::o;9171:101:6:-;9234:7;9264:1;9260;:5;;;;:::i;:::-;9253:12;;9171:101;;;;:::o;4766:125:5:-;4830:7;4856:28;:18;:26;;;;;:28;;:::i;:::-;4849:35;;4766:125;:::o;8592:206::-;8662:7;8699:1;8685:3;:10;;;;:15;8681:111;;;8723:1;8716:8;;;;8681:111;8762:3;8779:1;8766:3;:10;;;;:14;;;;:::i;:::-;8762:19;;;;;;;;;;;;;;;;;;;;;;;;8755:26;;8592:206;;;;:::o;827:112:12:-;892:7;918;:14;;;911:21;;827:112;;;:::o;1137:1202:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:19:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:118::-;218:24;236:5;218:24;:::i;:::-;213:3;206:37;196:53;;:::o;255:366::-;;418:67;482:2;477:3;418:67;:::i;:::-;411:74;;494:93;583:3;494:93;:::i;:::-;612:2;607:3;603:12;596:19;;401:220;;;:::o;627:366::-;;790:67;854:2;849:3;790:67;:::i;:::-;783:74;;866:93;955:3;866:93;:::i;:::-;984:2;979:3;975:12;968:19;;773:220;;;:::o;999:366::-;;1162:67;1226:2;1221:3;1162:67;:::i;:::-;1155:74;;1238:93;1327:3;1238:93;:::i;:::-;1356:2;1351:3;1347:12;1340:19;;1145:220;;;:::o;1371:366::-;;1534:67;1598:2;1593:3;1534:67;:::i;:::-;1527:74;;1610:93;1699:3;1610:93;:::i;:::-;1728:2;1723:3;1719:12;1712:19;;1517:220;;;:::o;1743:118::-;1830:24;1848:5;1830:24;:::i;:::-;1825:3;1818:37;1808:53;;:::o;1867:664::-;;2110:3;2099:9;2095:19;2087:27;;2124:71;2192:1;2181:9;2177:17;2168:6;2124:71;:::i;:::-;2205:72;2273:2;2262:9;2258:18;2249:6;2205:72;:::i;:::-;2287;2355:2;2344:9;2340:18;2331:6;2287:72;:::i;:::-;2369;2437:2;2426:9;2422:18;2413:6;2369:72;:::i;:::-;2451:73;2519:3;2508:9;2504:19;2495:6;2451:73;:::i;:::-;2077:454;;;;;;;;:::o;2537:419::-;;2741:2;2730:9;2726:18;2718:26;;2790:9;2784:4;2780:20;2776:1;2765:9;2761:17;2754:47;2818:131;2944:4;2818:131;:::i;:::-;2810:139;;2708:248;;;:::o;2962:419::-;;3166:2;3155:9;3151:18;3143:26;;3215:9;3209:4;3205:20;3201:1;3190:9;3186:17;3179:47;3243:131;3369:4;3243:131;:::i;:::-;3235:139;;3133:248;;;:::o;3387:419::-;;3591:2;3580:9;3576:18;3568:26;;3640:9;3634:4;3630:20;3626:1;3615:9;3611:17;3604:47;3668:131;3794:4;3668:131;:::i;:::-;3660:139;;3558:248;;;:::o;3812:419::-;;4016:2;4005:9;4001:18;3993:26;;4065:9;4059:4;4055:20;4051:1;4040:9;4036:17;4029:47;4093:131;4219:4;4093:131;:::i;:::-;4085:139;;3983:248;;;:::o;4237:222::-;;4368:2;4357:9;4353:18;4345:26;;4381:71;4449:1;4438:9;4434:17;4425:6;4381:71;:::i;:::-;4335:124;;;;:::o;4465:332::-;;4624:2;4613:9;4609:18;4601:26;;4637:71;4705:1;4694:9;4690:17;4681:6;4637:71;:::i;:::-;4718:72;4786:2;4775:9;4771:18;4762:6;4718:72;:::i;:::-;4591:206;;;;;:::o;4803:169::-;;4921:6;4916:3;4909:19;4961:4;4956:3;4952:14;4937:29;;4899:73;;;;:::o;4978:305::-;;5037:20;5055:1;5037:20;:::i;:::-;5032:25;;5071:20;5089:1;5071:20;:::i;:::-;5066:25;;5225:1;5157:66;5153:74;5150:1;5147:81;5144:2;;;5231:18;;:::i;:::-;5144:2;5275:1;5272;5268:9;5261:16;;5022:261;;;;:::o;5289:848::-;;;5381:6;5372:15;;5405:5;5396:14;;5419:712;5440:1;5430:8;5427:15;5419:712;;;5535:4;5530:3;5526:14;5520:4;5517:24;5514:2;;;5544:18;;:::i;:::-;5514:2;5594:1;5584:8;5580:16;5577:2;;;6009:4;6002:5;5998:16;5989:25;;5577:2;6059:4;6053;6049:15;6041:23;;6089:32;6112:8;6089:32;:::i;:::-;6077:44;;5419:712;;;5362:775;;;;;;;:::o;6143:281::-;;6225:23;6243:4;6225:23;:::i;:::-;6217:31;;6269:25;6285:8;6269:25;:::i;:::-;6257:37;;6313:104;6350:66;6340:8;6334:4;6313:104;:::i;:::-;6304:113;;6207:217;;;;:::o;6430:1073::-;;6675:8;6665:2;;6696:1;6687:10;;6698:5;;6665:2;6724:4;6714:2;;6741:1;6732:10;;6743:5;;6714:2;6810:4;6858:1;6853:27;;;;6894:1;6889:191;;;;6803:277;;6853:27;6871:1;6862:10;;6873:5;;;6889:191;6934:3;6924:8;6921:17;6918:2;;;6941:18;;:::i;:::-;6918:2;6990:8;6987:1;6983:16;6974:25;;7025:3;7018:5;7015:14;7012:2;;;7032:18;;:::i;:::-;7012:2;7065:5;;;6803:277;;7189:2;7179:8;7176:16;7170:3;7164:4;7161:13;7157:36;7139:2;7129:8;7126:16;7121:2;7115:4;7112:12;7108:35;7092:111;7089:2;;;7245:8;7239:4;7235:19;7226:28;;7280:3;7273:5;7270:14;7267:2;;;7287:18;;:::i;:::-;7267:2;7320:5;;7089:2;7360:42;7398:3;7388:8;7382:4;7379:1;7360:42;:::i;:::-;7345:57;;;;7434:4;7429:3;7425:14;7418:5;7415:25;7412:2;;;7443:18;;:::i;:::-;7412:2;7492:4;7485:5;7481:16;7472:25;;6490:1013;;;;;;:::o;7509:348::-;;7572:20;7590:1;7572:20;:::i;:::-;7567:25;;7606:20;7624:1;7606:20;:::i;:::-;7601:25;;7794:1;7726:66;7722:74;7719:1;7716:81;7711:1;7704:9;7697:17;7693:105;7690:2;;;7801:18;;:::i;:::-;7690:2;7849:1;7846;7842:9;7831:20;;7557:300;;;;:::o;7863:191::-;;7923:20;7941:1;7923:20;:::i;:::-;7918:25;;7957:20;7975:1;7957:20;:::i;:::-;7952:25;;7996:1;7993;7990:8;7987:2;;;8001:18;;:::i;:::-;7987:2;8046:1;8043;8039:9;8031:17;;7908:146;;;;:::o;8060:96::-;;8126:24;8144:5;8126:24;:::i;:::-;8115:35;;8105:51;;;:::o;8162:77::-;;8228:5;8217:16;;8207:32;;;:::o;8245:126::-;;8322:42;8315:5;8311:54;8300:65;;8290:81;;;:::o;8377:77::-;;8443:5;8432:16;;8422:32;;;:::o;8460:86::-;;8535:4;8528:5;8524:16;8513:27;;8503:43;;;:::o;8552:320::-;;8633:1;8627:4;8623:12;8613:22;;8680:1;8674:4;8670:12;8701:18;8691:2;;8757:4;8749:6;8745:17;8735:27;;8691:2;8819;8811:6;8808:14;8788:18;8785:38;8782:2;;;8838:18;;:::i;:::-;8782:2;8603:269;;;;:::o;8878:180::-;8926:77;8923:1;8916:88;9023:4;9020:1;9013:15;9047:4;9044:1;9037:15;9064:180;9112:77;9109:1;9102:88;9209:4;9206:1;9199:15;9233:4;9230:1;9223:15;9250:102;;9339:5;9336:1;9332:13;9311:34;;9301:51;;;:::o;9358:235::-;9498:34;9494:1;9486:6;9482:14;9475:58;9567:18;9562:2;9554:6;9550:15;9543:43;9464:129;:::o;9599:226::-;9739:34;9735:1;9727:6;9723:14;9716:58;9808:9;9803:2;9795:6;9791:15;9784:34;9705:120;:::o;9831:225::-;9971:34;9967:1;9959:6;9955:14;9948:58;10040:8;10035:2;10027:6;10023:15;10016:33;9937:119;:::o;10062:181::-;10202:33;10198:1;10190:6;10186:14;10179:57;10168:75;:::o;1137:1202:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:43601:19","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:19","statements":[{"nodeType":"YulAssignment","src":"69:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:19"},"nodeType":"YulFunctionCall","src":"78:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:19"},"nodeType":"YulFunctionCall","src":"107:33:19"},"nodeType":"YulExpressionStatement","src":"107:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:19","type":""}],"src":"7:139:19"},{"body":{"nodeType":"YulBlock","src":"204:87:19","statements":[{"nodeType":"YulAssignment","src":"214:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:19"},"nodeType":"YulFunctionCall","src":"223:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"252:26:19"},"nodeType":"YulFunctionCall","src":"252:33:19"},"nodeType":"YulExpressionStatement","src":"252:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:19","type":""}],"src":"152:139:19"},{"body":{"nodeType":"YulBlock","src":"349:87:19","statements":[{"nodeType":"YulAssignment","src":"359:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"381:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"368:12:19"},"nodeType":"YulFunctionCall","src":"368:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"397:26:19"},"nodeType":"YulFunctionCall","src":"397:33:19"},"nodeType":"YulExpressionStatement","src":"397:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"327:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"335:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"343:5:19","type":""}],"src":"297:139:19"},{"body":{"nodeType":"YulBlock","src":"493:86:19","statements":[{"nodeType":"YulAssignment","src":"503:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"525:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"512:12:19"},"nodeType":"YulFunctionCall","src":"512:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"503:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"541:25:19"},"nodeType":"YulFunctionCall","src":"541:32:19"},"nodeType":"YulExpressionStatement","src":"541:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"471:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"479:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"487:5:19","type":""}],"src":"442:137:19"},{"body":{"nodeType":"YulBlock","src":"635:85:19","statements":[{"nodeType":"YulAssignment","src":"645:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"667:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"654:12:19"},"nodeType":"YulFunctionCall","src":"654:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"645:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"708:5:19"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"683:24:19"},"nodeType":"YulFunctionCall","src":"683:31:19"},"nodeType":"YulExpressionStatement","src":"683:31:19"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"613:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"621:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"629:5:19","type":""}],"src":"585:135:19"},{"body":{"nodeType":"YulBlock","src":"792:196:19","statements":[{"body":{"nodeType":"YulBlock","src":"838:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"847:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"850:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"840:6:19"},"nodeType":"YulFunctionCall","src":"840:12:19"},"nodeType":"YulExpressionStatement","src":"840:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"813:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"822:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"809:3:19"},"nodeType":"YulFunctionCall","src":"809:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"805:3:19"},"nodeType":"YulFunctionCall","src":"805:32:19"},"nodeType":"YulIf","src":"802:2:19"},{"nodeType":"YulBlock","src":"864:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"879:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"893:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"883:6:19","type":""}]},{"nodeType":"YulAssignment","src":"908:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"943:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"954:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"939:3:19"},"nodeType":"YulFunctionCall","src":"939:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"963:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"918:20:19"},"nodeType":"YulFunctionCall","src":"918:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"908:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"762:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"773:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"785:6:19","type":""}],"src":"726:262:19"},{"body":{"nodeType":"YulBlock","src":"1077:324:19","statements":[{"body":{"nodeType":"YulBlock","src":"1123:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1132:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1135:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1125:6:19"},"nodeType":"YulFunctionCall","src":"1125:12:19"},"nodeType":"YulExpressionStatement","src":"1125:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1098:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1107:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1094:3:19"},"nodeType":"YulFunctionCall","src":"1094:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1119:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1090:3:19"},"nodeType":"YulFunctionCall","src":"1090:32:19"},"nodeType":"YulIf","src":"1087:2:19"},{"nodeType":"YulBlock","src":"1149:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1164:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1178:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1168:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1193:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1228:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1224:3:19"},"nodeType":"YulFunctionCall","src":"1224:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1248:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1203:20:19"},"nodeType":"YulFunctionCall","src":"1203:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1193:6:19"}]}]},{"nodeType":"YulBlock","src":"1276:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1291:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1305:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1295:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1321:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1356:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1367:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1352:3:19"},"nodeType":"YulFunctionCall","src":"1352:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1376:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1331:20:19"},"nodeType":"YulFunctionCall","src":"1331:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1321:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1039:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1050:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1062:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1070:6:19","type":""}],"src":"994:407:19"},{"body":{"nodeType":"YulBlock","src":"1507:452:19","statements":[{"body":{"nodeType":"YulBlock","src":"1553:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1562:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1565:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1555:6:19"},"nodeType":"YulFunctionCall","src":"1555:12:19"},"nodeType":"YulExpressionStatement","src":"1555:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1528:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1524:3:19"},"nodeType":"YulFunctionCall","src":"1524:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1549:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1520:3:19"},"nodeType":"YulFunctionCall","src":"1520:32:19"},"nodeType":"YulIf","src":"1517:2:19"},{"nodeType":"YulBlock","src":"1579:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1594:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1608:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1598:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1623:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1658:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1669:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:19"},"nodeType":"YulFunctionCall","src":"1654:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1678:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1633:20:19"},"nodeType":"YulFunctionCall","src":"1633:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1623:6:19"}]}]},{"nodeType":"YulBlock","src":"1706:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1721:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1735:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1725:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1751:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1786:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1797:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1782:3:19"},"nodeType":"YulFunctionCall","src":"1782:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1806:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1761:20:19"},"nodeType":"YulFunctionCall","src":"1761:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1751:6:19"}]}]},{"nodeType":"YulBlock","src":"1834:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1849:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1863:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1853:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1879:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1914:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1925:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1910:3:19"},"nodeType":"YulFunctionCall","src":"1910:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1934:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1889:20:19"},"nodeType":"YulFunctionCall","src":"1889:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1879:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1461:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1472:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1484:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1492:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1500:6:19","type":""}],"src":"1407:552:19"},{"body":{"nodeType":"YulBlock","src":"2131:966:19","statements":[{"body":{"nodeType":"YulBlock","src":"2178:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2187:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2190:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2180:6:19"},"nodeType":"YulFunctionCall","src":"2180:12:19"},"nodeType":"YulExpressionStatement","src":"2180:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2152:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2161:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2148:3:19"},"nodeType":"YulFunctionCall","src":"2148:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2173:3:19","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2144:3:19"},"nodeType":"YulFunctionCall","src":"2144:33:19"},"nodeType":"YulIf","src":"2141:2:19"},{"nodeType":"YulBlock","src":"2204:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2219:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2233:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2223:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2248:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2283:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2294:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2279:3:19"},"nodeType":"YulFunctionCall","src":"2279:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2258:20:19"},"nodeType":"YulFunctionCall","src":"2258:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2248:6:19"}]}]},{"nodeType":"YulBlock","src":"2331:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2346:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2360:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2350:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2376:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2422:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:19"},"nodeType":"YulFunctionCall","src":"2407:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2431:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2386:20:19"},"nodeType":"YulFunctionCall","src":"2386:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2376:6:19"}]}]},{"nodeType":"YulBlock","src":"2459:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2474:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2488:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2478:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2504:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2539:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:19"},"nodeType":"YulFunctionCall","src":"2535:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2559:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2514:20:19"},"nodeType":"YulFunctionCall","src":"2514:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2504:6:19"}]}]},{"nodeType":"YulBlock","src":"2587:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2602:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2616:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2606:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2632:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2667:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2678:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2663:3:19"},"nodeType":"YulFunctionCall","src":"2663:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2687:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2642:20:19"},"nodeType":"YulFunctionCall","src":"2642:53:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2632:6:19"}]}]},{"nodeType":"YulBlock","src":"2715:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2730:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2744:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2734:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2761:61:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2805:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2790:3:19"},"nodeType":"YulFunctionCall","src":"2790:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2814:7:19"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"2771:18:19"},"nodeType":"YulFunctionCall","src":"2771:51:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2761:6:19"}]}]},{"nodeType":"YulBlock","src":"2842:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2857:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2871:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2861:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2888:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2923:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2934:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:19"},"nodeType":"YulFunctionCall","src":"2919:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2943:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2898:20:19"},"nodeType":"YulFunctionCall","src":"2898:53:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2888:6:19"}]}]},{"nodeType":"YulBlock","src":"2971:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2986:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3000:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2990:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3017:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3052:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3063:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3048:3:19"},"nodeType":"YulFunctionCall","src":"3048:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3072:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3027:20:19"},"nodeType":"YulFunctionCall","src":"3027:53:19"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3017:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2053:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2064:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2076:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2084:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2092:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2100:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2108:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2116:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2124:6:19","type":""}],"src":"1965:1132:19"},{"body":{"nodeType":"YulBlock","src":"3186:324:19","statements":[{"body":{"nodeType":"YulBlock","src":"3232:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3241:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3244:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3234:6:19"},"nodeType":"YulFunctionCall","src":"3234:12:19"},"nodeType":"YulExpressionStatement","src":"3234:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3207:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3216:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3203:3:19"},"nodeType":"YulFunctionCall","src":"3203:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3228:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3199:3:19"},"nodeType":"YulFunctionCall","src":"3199:32:19"},"nodeType":"YulIf","src":"3196:2:19"},{"nodeType":"YulBlock","src":"3258:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3273:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3287:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3277:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3302:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3337:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3348:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3333:3:19"},"nodeType":"YulFunctionCall","src":"3333:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3357:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3312:20:19"},"nodeType":"YulFunctionCall","src":"3312:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3302:6:19"}]}]},{"nodeType":"YulBlock","src":"3385:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3400:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3414:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3404:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3430:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3465:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3476:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:19"},"nodeType":"YulFunctionCall","src":"3461:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3485:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3440:20:19"},"nodeType":"YulFunctionCall","src":"3440:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3430:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3148:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3159:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3171:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3179:6:19","type":""}],"src":"3103:407:19"},{"body":{"nodeType":"YulBlock","src":"3665:837:19","statements":[{"body":{"nodeType":"YulBlock","src":"3712:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3721:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3724:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3714:6:19"},"nodeType":"YulFunctionCall","src":"3714:12:19"},"nodeType":"YulExpressionStatement","src":"3714:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3686:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3695:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3682:3:19"},"nodeType":"YulFunctionCall","src":"3682:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3707:3:19","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3678:3:19"},"nodeType":"YulFunctionCall","src":"3678:33:19"},"nodeType":"YulIf","src":"3675:2:19"},{"nodeType":"YulBlock","src":"3738:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3753:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3767:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3757:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3782:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3817:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3828:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3813:3:19"},"nodeType":"YulFunctionCall","src":"3813:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3837:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3792:20:19"},"nodeType":"YulFunctionCall","src":"3792:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3782:6:19"}]}]},{"nodeType":"YulBlock","src":"3865:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3880:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3894:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3884:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3910:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3945:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3956:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3941:3:19"},"nodeType":"YulFunctionCall","src":"3941:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3965:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3920:20:19"},"nodeType":"YulFunctionCall","src":"3920:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3910:6:19"}]}]},{"nodeType":"YulBlock","src":"3993:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4008:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4022:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4012:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4038:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4084:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:19"},"nodeType":"YulFunctionCall","src":"4069:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4093:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4048:20:19"},"nodeType":"YulFunctionCall","src":"4048:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4038:6:19"}]}]},{"nodeType":"YulBlock","src":"4121:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4136:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4150:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4140:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4166:61:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4199:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4210:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:19"},"nodeType":"YulFunctionCall","src":"4195:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4219:7:19"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"4176:18:19"},"nodeType":"YulFunctionCall","src":"4176:51:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4166:6:19"}]}]},{"nodeType":"YulBlock","src":"4247:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4262:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4276:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4266:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4293:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4328:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4339:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4324:3:19"},"nodeType":"YulFunctionCall","src":"4324:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4348:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4303:20:19"},"nodeType":"YulFunctionCall","src":"4303:53:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4293:6:19"}]}]},{"nodeType":"YulBlock","src":"4376:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4405:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4422:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4468:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4453:3:19"},"nodeType":"YulFunctionCall","src":"4453:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4477:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4432:20:19"},"nodeType":"YulFunctionCall","src":"4432:53:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4422:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3595:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3606:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3618:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3626:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3634:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3642:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3650:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3658:6:19","type":""}],"src":"3516:986:19"},{"body":{"nodeType":"YulBlock","src":"4590:323:19","statements":[{"body":{"nodeType":"YulBlock","src":"4636:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4645:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4648:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4638:6:19"},"nodeType":"YulFunctionCall","src":"4638:12:19"},"nodeType":"YulExpressionStatement","src":"4638:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4611:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4620:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4607:3:19"},"nodeType":"YulFunctionCall","src":"4607:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4632:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4603:3:19"},"nodeType":"YulFunctionCall","src":"4603:32:19"},"nodeType":"YulIf","src":"4600:2:19"},{"nodeType":"YulBlock","src":"4662:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4677:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4691:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4681:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4706:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4741:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4752:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4737:3:19"},"nodeType":"YulFunctionCall","src":"4737:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4761:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4716:20:19"},"nodeType":"YulFunctionCall","src":"4716:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4706:6:19"}]}]},{"nodeType":"YulBlock","src":"4789:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4804:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4818:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4808:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4834:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4868:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4879:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4864:3:19"},"nodeType":"YulFunctionCall","src":"4864:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4888:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"4844:19:19"},"nodeType":"YulFunctionCall","src":"4844:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4834:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4552:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4563:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4575:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4583:6:19","type":""}],"src":"4508:405:19"},{"body":{"nodeType":"YulBlock","src":"4985:196:19","statements":[{"body":{"nodeType":"YulBlock","src":"5031:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5040:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5043:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5033:6:19"},"nodeType":"YulFunctionCall","src":"5033:12:19"},"nodeType":"YulExpressionStatement","src":"5033:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5006:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"5015:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5002:3:19"},"nodeType":"YulFunctionCall","src":"5002:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"5027:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4998:3:19"},"nodeType":"YulFunctionCall","src":"4998:32:19"},"nodeType":"YulIf","src":"4995:2:19"},{"nodeType":"YulBlock","src":"5057:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5072:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5086:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5076:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5101:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5136:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5147:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5132:3:19"},"nodeType":"YulFunctionCall","src":"5132:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5156:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5111:20:19"},"nodeType":"YulFunctionCall","src":"5111:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5101:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4955:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4966:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4978:6:19","type":""}],"src":"4919:262:19"},{"body":{"nodeType":"YulBlock","src":"5252:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5269:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5292:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5274:17:19"},"nodeType":"YulFunctionCall","src":"5274:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5262:6:19"},"nodeType":"YulFunctionCall","src":"5262:37:19"},"nodeType":"YulExpressionStatement","src":"5262:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5240:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5247:3:19","type":""}],"src":"5187:118:19"},{"body":{"nodeType":"YulBlock","src":"5370:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5387:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5407:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5392:14:19"},"nodeType":"YulFunctionCall","src":"5392:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5380:6:19"},"nodeType":"YulFunctionCall","src":"5380:34:19"},"nodeType":"YulExpressionStatement","src":"5380:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5358:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5365:3:19","type":""}],"src":"5311:109:19"},{"body":{"nodeType":"YulBlock","src":"5491:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5531:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5513:17:19"},"nodeType":"YulFunctionCall","src":"5513:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:19"},"nodeType":"YulFunctionCall","src":"5501:37:19"},"nodeType":"YulExpressionStatement","src":"5501:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5479:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5486:3:19","type":""}],"src":"5426:118:19"},{"body":{"nodeType":"YulBlock","src":"5633:74:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5650:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5693:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5675:17:19"},"nodeType":"YulFunctionCall","src":"5675:24:19"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"5655:19:19"},"nodeType":"YulFunctionCall","src":"5655:45:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5643:6:19"},"nodeType":"YulFunctionCall","src":"5643:58:19"},"nodeType":"YulExpressionStatement","src":"5643:58:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5621:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5628:3:19","type":""}],"src":"5550:157:19"},{"body":{"nodeType":"YulBlock","src":"5805:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5815:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5862:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5829:32:19"},"nodeType":"YulFunctionCall","src":"5829:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5819:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5877:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5943:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5948:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5884:58:19"},"nodeType":"YulFunctionCall","src":"5884:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5877:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5990:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5997:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5986:3:19"},"nodeType":"YulFunctionCall","src":"5986:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6004:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6009:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5964:21:19"},"nodeType":"YulFunctionCall","src":"5964:52:19"},"nodeType":"YulExpressionStatement","src":"5964:52:19"},{"nodeType":"YulAssignment","src":"6025:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6036:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6063:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6041:21:19"},"nodeType":"YulFunctionCall","src":"6041:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6032:3:19"},"nodeType":"YulFunctionCall","src":"6032:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6025:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5786:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5793:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5801:3:19","type":""}],"src":"5713:364:19"},{"body":{"nodeType":"YulBlock","src":"6229:220:19","statements":[{"nodeType":"YulAssignment","src":"6239:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6305:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"6310:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6246:58:19"},"nodeType":"YulFunctionCall","src":"6246:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6239:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6411:3:19"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"6322:88:19"},"nodeType":"YulFunctionCall","src":"6322:93:19"},"nodeType":"YulExpressionStatement","src":"6322:93:19"},{"nodeType":"YulAssignment","src":"6424:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6435:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"6440:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6431:3:19"},"nodeType":"YulFunctionCall","src":"6431:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6424:3:19"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6217:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6225:3:19","type":""}],"src":"6083:366:19"},{"body":{"nodeType":"YulBlock","src":"6601:220:19","statements":[{"nodeType":"YulAssignment","src":"6611:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6677:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"6682:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6618:58:19"},"nodeType":"YulFunctionCall","src":"6618:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6611:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6783:3:19"}],"functionName":{"name":"store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","nodeType":"YulIdentifier","src":"6694:88:19"},"nodeType":"YulFunctionCall","src":"6694:93:19"},"nodeType":"YulExpressionStatement","src":"6694:93:19"},{"nodeType":"YulAssignment","src":"6796:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6807:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"6812:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6803:3:19"},"nodeType":"YulFunctionCall","src":"6803:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6796:3:19"}]}]},"name":"abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6589:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6597:3:19","type":""}],"src":"6455:366:19"},{"body":{"nodeType":"YulBlock","src":"6973:220:19","statements":[{"nodeType":"YulAssignment","src":"6983:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7049:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7054:2:19","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6990:58:19"},"nodeType":"YulFunctionCall","src":"6990:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6983:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7155:3:19"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"7066:88:19"},"nodeType":"YulFunctionCall","src":"7066:93:19"},"nodeType":"YulExpressionStatement","src":"7066:93:19"},{"nodeType":"YulAssignment","src":"7168:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7179:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7184:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:19"},"nodeType":"YulFunctionCall","src":"7175:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7168:3:19"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6961:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6969:3:19","type":""}],"src":"6827:366:19"},{"body":{"nodeType":"YulBlock","src":"7345:220:19","statements":[{"nodeType":"YulAssignment","src":"7355:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7421:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7426:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7362:58:19"},"nodeType":"YulFunctionCall","src":"7362:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7355:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7527:3:19"}],"functionName":{"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulIdentifier","src":"7438:88:19"},"nodeType":"YulFunctionCall","src":"7438:93:19"},"nodeType":"YulExpressionStatement","src":"7438:93:19"},{"nodeType":"YulAssignment","src":"7540:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7556:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:19"},"nodeType":"YulFunctionCall","src":"7547:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7540:3:19"}]}]},"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7333:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7341:3:19","type":""}],"src":"7199:366:19"},{"body":{"nodeType":"YulBlock","src":"7717:220:19","statements":[{"nodeType":"YulAssignment","src":"7727:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7793:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7798:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7734:58:19"},"nodeType":"YulFunctionCall","src":"7734:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7727:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7899:3:19"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"7810:88:19"},"nodeType":"YulFunctionCall","src":"7810:93:19"},"nodeType":"YulExpressionStatement","src":"7810:93:19"},{"nodeType":"YulAssignment","src":"7912:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7919:3:19"},"nodeType":"YulFunctionCall","src":"7919:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7912:3:19"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7705:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7713:3:19","type":""}],"src":"7571:366:19"},{"body":{"nodeType":"YulBlock","src":"8089:220:19","statements":[{"nodeType":"YulAssignment","src":"8099:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8165:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8170:2:19","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8106:58:19"},"nodeType":"YulFunctionCall","src":"8106:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8099:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8271:3:19"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"8182:88:19"},"nodeType":"YulFunctionCall","src":"8182:93:19"},"nodeType":"YulExpressionStatement","src":"8182:93:19"},{"nodeType":"YulAssignment","src":"8284:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8300:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8291:3:19"},"nodeType":"YulFunctionCall","src":"8291:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8284:3:19"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8077:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8085:3:19","type":""}],"src":"7943:366:19"},{"body":{"nodeType":"YulBlock","src":"8461:220:19","statements":[{"nodeType":"YulAssignment","src":"8471:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8537:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8542:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8478:58:19"},"nodeType":"YulFunctionCall","src":"8478:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8471:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8643:3:19"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"8554:88:19"},"nodeType":"YulFunctionCall","src":"8554:93:19"},"nodeType":"YulExpressionStatement","src":"8554:93:19"},{"nodeType":"YulAssignment","src":"8656:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8672:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8663:3:19"},"nodeType":"YulFunctionCall","src":"8663:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8656:3:19"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8449:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8457:3:19","type":""}],"src":"8315:366:19"},{"body":{"nodeType":"YulBlock","src":"8833:220:19","statements":[{"nodeType":"YulAssignment","src":"8843:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8909:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8914:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8850:58:19"},"nodeType":"YulFunctionCall","src":"8850:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8843:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9015:3:19"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"8926:88:19"},"nodeType":"YulFunctionCall","src":"8926:93:19"},"nodeType":"YulExpressionStatement","src":"8926:93:19"},{"nodeType":"YulAssignment","src":"9028:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9035:3:19"},"nodeType":"YulFunctionCall","src":"9035:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9028:3:19"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8821:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8829:3:19","type":""}],"src":"8687:366:19"},{"body":{"nodeType":"YulBlock","src":"9205:220:19","statements":[{"nodeType":"YulAssignment","src":"9215:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9281:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9286:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9222:58:19"},"nodeType":"YulFunctionCall","src":"9222:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9215:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9387:3:19"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"9298:88:19"},"nodeType":"YulFunctionCall","src":"9298:93:19"},"nodeType":"YulExpressionStatement","src":"9298:93:19"},{"nodeType":"YulAssignment","src":"9400:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9416:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9407:3:19"},"nodeType":"YulFunctionCall","src":"9407:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9400:3:19"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9193:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9201:3:19","type":""}],"src":"9059:366:19"},{"body":{"nodeType":"YulBlock","src":"9577:220:19","statements":[{"nodeType":"YulAssignment","src":"9587:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9653:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:19","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9594:58:19"},"nodeType":"YulFunctionCall","src":"9594:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9587:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9759:3:19"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9670:88:19"},"nodeType":"YulFunctionCall","src":"9670:93:19"},"nodeType":"YulExpressionStatement","src":"9670:93:19"},{"nodeType":"YulAssignment","src":"9772:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"9788:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9779:3:19"},"nodeType":"YulFunctionCall","src":"9779:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9772:3:19"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9565:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9573:3:19","type":""}],"src":"9431:366:19"},{"body":{"nodeType":"YulBlock","src":"9967:236:19","statements":[{"nodeType":"YulAssignment","src":"9977:91:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10061:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10066:1:19","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9984:76:19"},"nodeType":"YulFunctionCall","src":"9984:84:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9977:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10166:3:19"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"10077:88:19"},"nodeType":"YulFunctionCall","src":"10077:93:19"},"nodeType":"YulExpressionStatement","src":"10077:93:19"},{"nodeType":"YulAssignment","src":"10179:18:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10190:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10195:1:19","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10186:3:19"},"nodeType":"YulFunctionCall","src":"10186:11:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10179:3:19"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9955:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9963:3:19","type":""}],"src":"9803:400:19"},{"body":{"nodeType":"YulBlock","src":"10355:220:19","statements":[{"nodeType":"YulAssignment","src":"10365:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10431:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10436:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10372:58:19"},"nodeType":"YulFunctionCall","src":"10372:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10365:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10537:3:19"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10448:88:19"},"nodeType":"YulFunctionCall","src":"10448:93:19"},"nodeType":"YulExpressionStatement","src":"10448:93:19"},{"nodeType":"YulAssignment","src":"10550:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10561:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10566:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10557:3:19"},"nodeType":"YulFunctionCall","src":"10557:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10550:3:19"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10343:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10351:3:19","type":""}],"src":"10209:366:19"},{"body":{"nodeType":"YulBlock","src":"10727:220:19","statements":[{"nodeType":"YulAssignment","src":"10737:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10803:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10808:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10744:58:19"},"nodeType":"YulFunctionCall","src":"10744:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10737:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10909:3:19"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"10820:88:19"},"nodeType":"YulFunctionCall","src":"10820:93:19"},"nodeType":"YulExpressionStatement","src":"10820:93:19"},{"nodeType":"YulAssignment","src":"10922:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10933:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10938:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:19"},"nodeType":"YulFunctionCall","src":"10929:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10922:3:19"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10715:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10723:3:19","type":""}],"src":"10581:366:19"},{"body":{"nodeType":"YulBlock","src":"11099:220:19","statements":[{"nodeType":"YulAssignment","src":"11109:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11175:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11180:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11116:58:19"},"nodeType":"YulFunctionCall","src":"11116:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11109:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11281:3:19"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"11192:88:19"},"nodeType":"YulFunctionCall","src":"11192:93:19"},"nodeType":"YulExpressionStatement","src":"11192:93:19"},{"nodeType":"YulAssignment","src":"11294:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11305:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11310:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11301:3:19"},"nodeType":"YulFunctionCall","src":"11301:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11294:3:19"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11087:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11095:3:19","type":""}],"src":"10953:366:19"},{"body":{"nodeType":"YulBlock","src":"11471:220:19","statements":[{"nodeType":"YulAssignment","src":"11481:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11547:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11552:2:19","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11488:58:19"},"nodeType":"YulFunctionCall","src":"11488:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11481:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11653:3:19"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"11564:88:19"},"nodeType":"YulFunctionCall","src":"11564:93:19"},"nodeType":"YulExpressionStatement","src":"11564:93:19"},{"nodeType":"YulAssignment","src":"11666:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11677:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11682:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11673:3:19"},"nodeType":"YulFunctionCall","src":"11673:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11666:3:19"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11459:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11467:3:19","type":""}],"src":"11325:366:19"},{"body":{"nodeType":"YulBlock","src":"11843:220:19","statements":[{"nodeType":"YulAssignment","src":"11853:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11919:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"11924:2:19","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11860:58:19"},"nodeType":"YulFunctionCall","src":"11860:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11853:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12025:3:19"}],"functionName":{"name":"store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","nodeType":"YulIdentifier","src":"11936:88:19"},"nodeType":"YulFunctionCall","src":"11936:93:19"},"nodeType":"YulExpressionStatement","src":"11936:93:19"},{"nodeType":"YulAssignment","src":"12038:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12054:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12045:3:19"},"nodeType":"YulFunctionCall","src":"12045:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12038:3:19"}]}]},"name":"abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11831:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11839:3:19","type":""}],"src":"11697:366:19"},{"body":{"nodeType":"YulBlock","src":"12215:220:19","statements":[{"nodeType":"YulAssignment","src":"12225:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12291:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12296:2:19","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12232:58:19"},"nodeType":"YulFunctionCall","src":"12232:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12225:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12397:3:19"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"12308:88:19"},"nodeType":"YulFunctionCall","src":"12308:93:19"},"nodeType":"YulExpressionStatement","src":"12308:93:19"},{"nodeType":"YulAssignment","src":"12410:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12421:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12426:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12417:3:19"},"nodeType":"YulFunctionCall","src":"12417:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12410:3:19"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12203:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12211:3:19","type":""}],"src":"12069:366:19"},{"body":{"nodeType":"YulBlock","src":"12587:220:19","statements":[{"nodeType":"YulAssignment","src":"12597:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12663:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12668:2:19","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12604:58:19"},"nodeType":"YulFunctionCall","src":"12604:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12597:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12769:3:19"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"12680:88:19"},"nodeType":"YulFunctionCall","src":"12680:93:19"},"nodeType":"YulExpressionStatement","src":"12680:93:19"},{"nodeType":"YulAssignment","src":"12782:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12793:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12789:3:19"},"nodeType":"YulFunctionCall","src":"12789:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12782:3:19"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12575:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12583:3:19","type":""}],"src":"12441:366:19"},{"body":{"nodeType":"YulBlock","src":"12959:220:19","statements":[{"nodeType":"YulAssignment","src":"12969:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13035:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12976:58:19"},"nodeType":"YulFunctionCall","src":"12976:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12969:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13141:3:19"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"13052:88:19"},"nodeType":"YulFunctionCall","src":"13052:93:19"},"nodeType":"YulExpressionStatement","src":"13052:93:19"},{"nodeType":"YulAssignment","src":"13154:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13165:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13170:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13161:3:19"},"nodeType":"YulFunctionCall","src":"13161:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13154:3:19"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12947:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12955:3:19","type":""}],"src":"12813:366:19"},{"body":{"nodeType":"YulBlock","src":"13331:220:19","statements":[{"nodeType":"YulAssignment","src":"13341:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13407:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13412:2:19","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13348:58:19"},"nodeType":"YulFunctionCall","src":"13348:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13341:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13513:3:19"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"13424:88:19"},"nodeType":"YulFunctionCall","src":"13424:93:19"},"nodeType":"YulExpressionStatement","src":"13424:93:19"},{"nodeType":"YulAssignment","src":"13526:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13537:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13542:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13533:3:19"},"nodeType":"YulFunctionCall","src":"13533:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13526:3:19"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13319:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13327:3:19","type":""}],"src":"13185:366:19"},{"body":{"nodeType":"YulBlock","src":"13703:220:19","statements":[{"nodeType":"YulAssignment","src":"13713:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13779:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13784:2:19","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:58:19"},"nodeType":"YulFunctionCall","src":"13720:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13713:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13885:3:19"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"13796:88:19"},"nodeType":"YulFunctionCall","src":"13796:93:19"},"nodeType":"YulExpressionStatement","src":"13796:93:19"},{"nodeType":"YulAssignment","src":"13898:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13909:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13905:3:19"},"nodeType":"YulFunctionCall","src":"13905:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13898:3:19"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13691:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13699:3:19","type":""}],"src":"13557:366:19"},{"body":{"nodeType":"YulBlock","src":"14075:220:19","statements":[{"nodeType":"YulAssignment","src":"14085:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14151:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14156:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14092:58:19"},"nodeType":"YulFunctionCall","src":"14092:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14085:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14257:3:19"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"14168:88:19"},"nodeType":"YulFunctionCall","src":"14168:93:19"},"nodeType":"YulExpressionStatement","src":"14168:93:19"},{"nodeType":"YulAssignment","src":"14270:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14281:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14286:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14277:3:19"},"nodeType":"YulFunctionCall","src":"14277:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14270:3:19"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14063:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14071:3:19","type":""}],"src":"13929:366:19"},{"body":{"nodeType":"YulBlock","src":"14447:220:19","statements":[{"nodeType":"YulAssignment","src":"14457:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14523:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14528:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14464:58:19"},"nodeType":"YulFunctionCall","src":"14464:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14457:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14629:3:19"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"14540:88:19"},"nodeType":"YulFunctionCall","src":"14540:93:19"},"nodeType":"YulExpressionStatement","src":"14540:93:19"},{"nodeType":"YulAssignment","src":"14642:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14653:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14658:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14649:3:19"},"nodeType":"YulFunctionCall","src":"14649:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14642:3:19"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14435:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14443:3:19","type":""}],"src":"14301:366:19"},{"body":{"nodeType":"YulBlock","src":"14819:220:19","statements":[{"nodeType":"YulAssignment","src":"14829:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14895:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14900:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14836:58:19"},"nodeType":"YulFunctionCall","src":"14836:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14829:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15001:3:19"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"14912:88:19"},"nodeType":"YulFunctionCall","src":"14912:93:19"},"nodeType":"YulExpressionStatement","src":"14912:93:19"},{"nodeType":"YulAssignment","src":"15014:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15025:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15030:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15021:3:19"},"nodeType":"YulFunctionCall","src":"15021:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15014:3:19"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14807:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14815:3:19","type":""}],"src":"14673:366:19"},{"body":{"nodeType":"YulBlock","src":"15191:220:19","statements":[{"nodeType":"YulAssignment","src":"15201:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15267:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15272:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15208:58:19"},"nodeType":"YulFunctionCall","src":"15208:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15201:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15373:3:19"}],"functionName":{"name":"store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","nodeType":"YulIdentifier","src":"15284:88:19"},"nodeType":"YulFunctionCall","src":"15284:93:19"},"nodeType":"YulExpressionStatement","src":"15284:93:19"},{"nodeType":"YulAssignment","src":"15386:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15397:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15402:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15393:3:19"},"nodeType":"YulFunctionCall","src":"15393:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15386:3:19"}]}]},"name":"abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15179:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15187:3:19","type":""}],"src":"15045:366:19"},{"body":{"nodeType":"YulBlock","src":"15563:220:19","statements":[{"nodeType":"YulAssignment","src":"15573:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15639:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15644:2:19","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15580:58:19"},"nodeType":"YulFunctionCall","src":"15580:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15573:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15745:3:19"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"15656:88:19"},"nodeType":"YulFunctionCall","src":"15656:93:19"},"nodeType":"YulExpressionStatement","src":"15656:93:19"},{"nodeType":"YulAssignment","src":"15758:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15769:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15774:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15765:3:19"},"nodeType":"YulFunctionCall","src":"15765:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15758:3:19"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15551:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15559:3:19","type":""}],"src":"15417:366:19"},{"body":{"nodeType":"YulBlock","src":"15935:220:19","statements":[{"nodeType":"YulAssignment","src":"15945:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16011:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16016:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15952:58:19"},"nodeType":"YulFunctionCall","src":"15952:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15945:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16117:3:19"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"16028:88:19"},"nodeType":"YulFunctionCall","src":"16028:93:19"},"nodeType":"YulExpressionStatement","src":"16028:93:19"},{"nodeType":"YulAssignment","src":"16130:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16141:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16146:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16137:3:19"},"nodeType":"YulFunctionCall","src":"16137:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16130:3:19"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15923:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15931:3:19","type":""}],"src":"15789:366:19"},{"body":{"nodeType":"YulBlock","src":"16351:395:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16361:26:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16377:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16382:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16373:3:19"},"nodeType":"YulFunctionCall","src":"16373:14:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"16365:4:19","type":""}]},{"nodeType":"YulBlock","src":"16397:167:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16437:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16467:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16474:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16463:3:19"},"nodeType":"YulFunctionCall","src":"16463:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16457:5:19"},"nodeType":"YulFunctionCall","src":"16457:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16441:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16525:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16543:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16548:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16539:3:19"},"nodeType":"YulFunctionCall","src":"16539:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"16493:31:19"},"nodeType":"YulFunctionCall","src":"16493:61:19"},"nodeType":"YulExpressionStatement","src":"16493:61:19"}]},{"nodeType":"YulBlock","src":"16574:165:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16610:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16640:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16647:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16636:3:19"},"nodeType":"YulFunctionCall","src":"16636:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16630:5:19"},"nodeType":"YulFunctionCall","src":"16630:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16614:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16700:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16718:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16723:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16714:3:19"},"nodeType":"YulFunctionCall","src":"16714:14:19"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"16666:33:19"},"nodeType":"YulFunctionCall","src":"16666:63:19"},"nodeType":"YulExpressionStatement","src":"16666:63:19"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1243_memory_ptr_to_t_struct$_Checkpoint_$1243_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16338:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16345:3:19","type":""}],"src":"16229:517:19"},{"body":{"nodeType":"YulBlock","src":"16807:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16824:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16847:5:19"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"16829:17:19"},"nodeType":"YulFunctionCall","src":"16829:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16817:6:19"},"nodeType":"YulFunctionCall","src":"16817:37:19"},"nodeType":"YulExpressionStatement","src":"16817:37:19"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16795:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16802:3:19","type":""}],"src":"16752:108:19"},{"body":{"nodeType":"YulBlock","src":"16931:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16948:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16971:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16953:17:19"},"nodeType":"YulFunctionCall","src":"16953:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16941:6:19"},"nodeType":"YulFunctionCall","src":"16941:37:19"},"nodeType":"YulExpressionStatement","src":"16941:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16919:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16926:3:19","type":""}],"src":"16866:118:19"},{"body":{"nodeType":"YulBlock","src":"17043:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17060:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17082:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"17065:16:19"},"nodeType":"YulFunctionCall","src":"17065:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17053:6:19"},"nodeType":"YulFunctionCall","src":"17053:36:19"},"nodeType":"YulExpressionStatement","src":"17053:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17031:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17038:3:19","type":""}],"src":"16990:105:19"},{"body":{"nodeType":"YulBlock","src":"17164:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17181:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17203:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"17186:16:19"},"nodeType":"YulFunctionCall","src":"17186:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17174:6:19"},"nodeType":"YulFunctionCall","src":"17174:36:19"},"nodeType":"YulExpressionStatement","src":"17174:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17152:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17159:3:19","type":""}],"src":"17101:115:19"},{"body":{"nodeType":"YulBlock","src":"17283:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17300:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17321:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"17305:15:19"},"nodeType":"YulFunctionCall","src":"17305:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17293:6:19"},"nodeType":"YulFunctionCall","src":"17293:35:19"},"nodeType":"YulExpressionStatement","src":"17293:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17271:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17278:3:19","type":""}],"src":"17222:112:19"},{"body":{"nodeType":"YulBlock","src":"17585:418:19","statements":[{"nodeType":"YulAssignment","src":"17596:155:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17747:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17603:142:19"},"nodeType":"YulFunctionCall","src":"17603:148:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17596:3:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17823:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17832:3:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17761:61:19"},"nodeType":"YulFunctionCall","src":"17761:75:19"},"nodeType":"YulExpressionStatement","src":"17761:75:19"},{"nodeType":"YulAssignment","src":"17845:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17856:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17861:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17852:3:19"},"nodeType":"YulFunctionCall","src":"17852:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17845:3:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17936:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17945:3:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17874:61:19"},"nodeType":"YulFunctionCall","src":"17874:75:19"},"nodeType":"YulExpressionStatement","src":"17874:75:19"},{"nodeType":"YulAssignment","src":"17958:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17969:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17974:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17965:3:19"},"nodeType":"YulFunctionCall","src":"17965:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17958:3:19"}]},{"nodeType":"YulAssignment","src":"17987:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"17994:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17987:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17556:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17562:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17570:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17581:3:19","type":""}],"src":"17340:663:19"},{"body":{"nodeType":"YulBlock","src":"18107:124:19","statements":[{"nodeType":"YulAssignment","src":"18117:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18129:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18140:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18125:3:19"},"nodeType":"YulFunctionCall","src":"18125:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18117:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18197:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18210:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18221:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18206:3:19"},"nodeType":"YulFunctionCall","src":"18206:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18153:43:19"},"nodeType":"YulFunctionCall","src":"18153:71:19"},"nodeType":"YulExpressionStatement","src":"18153:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18079:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18091:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18102:4:19","type":""}],"src":"18009:222:19"},{"body":{"nodeType":"YulBlock","src":"18329:118:19","statements":[{"nodeType":"YulAssignment","src":"18339:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18351:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18362:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18347:3:19"},"nodeType":"YulFunctionCall","src":"18347:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18339:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18413:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18426:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18437:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18422:3:19"},"nodeType":"YulFunctionCall","src":"18422:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18375:37:19"},"nodeType":"YulFunctionCall","src":"18375:65:19"},"nodeType":"YulExpressionStatement","src":"18375:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18301:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18313:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18324:4:19","type":""}],"src":"18237:210:19"},{"body":{"nodeType":"YulBlock","src":"18551:124:19","statements":[{"nodeType":"YulAssignment","src":"18561:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18584:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18569:3:19"},"nodeType":"YulFunctionCall","src":"18569:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18561:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18641:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18654:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18665:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18650:3:19"},"nodeType":"YulFunctionCall","src":"18650:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18597:43:19"},"nodeType":"YulFunctionCall","src":"18597:71:19"},"nodeType":"YulExpressionStatement","src":"18597:71:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18523:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18535:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18546:4:19","type":""}],"src":"18453:222:19"},{"body":{"nodeType":"YulBlock","src":"18919:537:19","statements":[{"nodeType":"YulAssignment","src":"18929:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18941:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18952:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18937:3:19"},"nodeType":"YulFunctionCall","src":"18937:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18929:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19010:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19023:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19034:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19019:3:19"},"nodeType":"YulFunctionCall","src":"19019:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18966:43:19"},"nodeType":"YulFunctionCall","src":"18966:71:19"},"nodeType":"YulExpressionStatement","src":"18966:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19091:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19104:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19115:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19100:3:19"},"nodeType":"YulFunctionCall","src":"19100:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19047:43:19"},"nodeType":"YulFunctionCall","src":"19047:72:19"},"nodeType":"YulExpressionStatement","src":"19047:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19173:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19186:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19197:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19182:3:19"},"nodeType":"YulFunctionCall","src":"19182:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19129:43:19"},"nodeType":"YulFunctionCall","src":"19129:72:19"},"nodeType":"YulExpressionStatement","src":"19129:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19255:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19268:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19279:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19264:3:19"},"nodeType":"YulFunctionCall","src":"19264:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19211:43:19"},"nodeType":"YulFunctionCall","src":"19211:72:19"},"nodeType":"YulExpressionStatement","src":"19211:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19337:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19350:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19361:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19346:3:19"},"nodeType":"YulFunctionCall","src":"19346:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19293:43:19"},"nodeType":"YulFunctionCall","src":"19293:73:19"},"nodeType":"YulExpressionStatement","src":"19293:73:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19420:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19433:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19444:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19429:3:19"},"nodeType":"YulFunctionCall","src":"19429:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19376:43:19"},"nodeType":"YulFunctionCall","src":"19376:73:19"},"nodeType":"YulExpressionStatement","src":"19376:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18851:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18863:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18871:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18879:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18887:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18895:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18903:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18914:4:19","type":""}],"src":"18681:775:19"},{"body":{"nodeType":"YulBlock","src":"19644:371:19","statements":[{"nodeType":"YulAssignment","src":"19654:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19666:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19677:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19662:3:19"},"nodeType":"YulFunctionCall","src":"19662:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19654:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19735:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19748:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19759:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19744:3:19"},"nodeType":"YulFunctionCall","src":"19744:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19691:43:19"},"nodeType":"YulFunctionCall","src":"19691:71:19"},"nodeType":"YulExpressionStatement","src":"19691:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19816:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19829:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19840:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19825:3:19"},"nodeType":"YulFunctionCall","src":"19825:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19772:43:19"},"nodeType":"YulFunctionCall","src":"19772:72:19"},"nodeType":"YulExpressionStatement","src":"19772:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19898:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19911:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19922:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19907:3:19"},"nodeType":"YulFunctionCall","src":"19907:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19854:43:19"},"nodeType":"YulFunctionCall","src":"19854:72:19"},"nodeType":"YulExpressionStatement","src":"19854:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19980:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19993:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20004:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19989:3:19"},"nodeType":"YulFunctionCall","src":"19989:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19936:43:19"},"nodeType":"YulFunctionCall","src":"19936:72:19"},"nodeType":"YulExpressionStatement","src":"19936:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19592:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19604:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19612:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19620:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19628:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19639:4:19","type":""}],"src":"19462:553:19"},{"body":{"nodeType":"YulBlock","src":"20231:454:19","statements":[{"nodeType":"YulAssignment","src":"20241:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20253:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20264:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20249:3:19"},"nodeType":"YulFunctionCall","src":"20249:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20241:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20322:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20335:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20346:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20331:3:19"},"nodeType":"YulFunctionCall","src":"20331:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20278:43:19"},"nodeType":"YulFunctionCall","src":"20278:71:19"},"nodeType":"YulExpressionStatement","src":"20278:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20403:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20416:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20427:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20412:3:19"},"nodeType":"YulFunctionCall","src":"20412:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20359:43:19"},"nodeType":"YulFunctionCall","src":"20359:72:19"},"nodeType":"YulExpressionStatement","src":"20359:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20485:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20498:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20509:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20494:3:19"},"nodeType":"YulFunctionCall","src":"20494:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20441:43:19"},"nodeType":"YulFunctionCall","src":"20441:72:19"},"nodeType":"YulExpressionStatement","src":"20441:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20567:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20580:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20591:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20576:3:19"},"nodeType":"YulFunctionCall","src":"20576:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20523:43:19"},"nodeType":"YulFunctionCall","src":"20523:72:19"},"nodeType":"YulExpressionStatement","src":"20523:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20649:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20662:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20673:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20658:3:19"},"nodeType":"YulFunctionCall","src":"20658:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20605:43:19"},"nodeType":"YulFunctionCall","src":"20605:73:19"},"nodeType":"YulExpressionStatement","src":"20605:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20171:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20183:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20191:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20199:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20207:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20215:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20226:4:19","type":""}],"src":"20021:664:19"},{"body":{"nodeType":"YulBlock","src":"20869:367:19","statements":[{"nodeType":"YulAssignment","src":"20879:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20891:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20902:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20887:3:19"},"nodeType":"YulFunctionCall","src":"20887:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20879:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20960:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20973:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20984:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20969:3:19"},"nodeType":"YulFunctionCall","src":"20969:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20916:43:19"},"nodeType":"YulFunctionCall","src":"20916:71:19"},"nodeType":"YulExpressionStatement","src":"20916:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21037:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21050:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21061:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21046:3:19"},"nodeType":"YulFunctionCall","src":"21046:18:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20997:39:19"},"nodeType":"YulFunctionCall","src":"20997:68:19"},"nodeType":"YulExpressionStatement","src":"20997:68:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21119:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21132:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21143:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21128:3:19"},"nodeType":"YulFunctionCall","src":"21128:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21075:43:19"},"nodeType":"YulFunctionCall","src":"21075:72:19"},"nodeType":"YulExpressionStatement","src":"21075:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21201:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21214:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21225:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21210:3:19"},"nodeType":"YulFunctionCall","src":"21210:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21157:43:19"},"nodeType":"YulFunctionCall","src":"21157:72:19"},"nodeType":"YulExpressionStatement","src":"21157:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20817:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20829:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20837:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20845:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20853:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20864:4:19","type":""}],"src":"20691:545:19"},{"body":{"nodeType":"YulBlock","src":"21360:195:19","statements":[{"nodeType":"YulAssignment","src":"21370:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21382:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21393:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21378:3:19"},"nodeType":"YulFunctionCall","src":"21378:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21370:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21417:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21428:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21413:3:19"},"nodeType":"YulFunctionCall","src":"21413:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21436:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21442:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21432:3:19"},"nodeType":"YulFunctionCall","src":"21432:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21406:6:19"},"nodeType":"YulFunctionCall","src":"21406:47:19"},"nodeType":"YulExpressionStatement","src":"21406:47:19"},{"nodeType":"YulAssignment","src":"21462:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21534:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"21543:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21470:63:19"},"nodeType":"YulFunctionCall","src":"21470:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21462:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21332:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21344:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21355:4:19","type":""}],"src":"21242:313:19"},{"body":{"nodeType":"YulBlock","src":"21732:248:19","statements":[{"nodeType":"YulAssignment","src":"21742:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21754:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21765:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21750:3:19"},"nodeType":"YulFunctionCall","src":"21750:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21742:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21789:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21800:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21785:3:19"},"nodeType":"YulFunctionCall","src":"21785:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21808:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21814:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21804:3:19"},"nodeType":"YulFunctionCall","src":"21804:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21778:6:19"},"nodeType":"YulFunctionCall","src":"21778:47:19"},"nodeType":"YulExpressionStatement","src":"21778:47:19"},{"nodeType":"YulAssignment","src":"21834:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21968:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21842:124:19"},"nodeType":"YulFunctionCall","src":"21842:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21834:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21712:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21727:4:19","type":""}],"src":"21561:419:19"},{"body":{"nodeType":"YulBlock","src":"22157:248:19","statements":[{"nodeType":"YulAssignment","src":"22167:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22179:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22190:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22175:3:19"},"nodeType":"YulFunctionCall","src":"22175:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22167:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22214:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22225:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22210:3:19"},"nodeType":"YulFunctionCall","src":"22210:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22233:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22239:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22229:3:19"},"nodeType":"YulFunctionCall","src":"22229:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22203:6:19"},"nodeType":"YulFunctionCall","src":"22203:47:19"},"nodeType":"YulExpressionStatement","src":"22203:47:19"},{"nodeType":"YulAssignment","src":"22259:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22393:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22267:124:19"},"nodeType":"YulFunctionCall","src":"22267:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22259:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22137:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22152:4:19","type":""}],"src":"21986:419:19"},{"body":{"nodeType":"YulBlock","src":"22582:248:19","statements":[{"nodeType":"YulAssignment","src":"22592:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22604:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22615:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22600:3:19"},"nodeType":"YulFunctionCall","src":"22600:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22592:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22639:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22650:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22635:3:19"},"nodeType":"YulFunctionCall","src":"22635:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22658:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22664:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22654:3:19"},"nodeType":"YulFunctionCall","src":"22654:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22628:6:19"},"nodeType":"YulFunctionCall","src":"22628:47:19"},"nodeType":"YulExpressionStatement","src":"22628:47:19"},{"nodeType":"YulAssignment","src":"22684:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22818:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22692:124:19"},"nodeType":"YulFunctionCall","src":"22692:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22684:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22562:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22577:4:19","type":""}],"src":"22411:419:19"},{"body":{"nodeType":"YulBlock","src":"23007:248:19","statements":[{"nodeType":"YulAssignment","src":"23017:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23029:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23040:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23025:3:19"},"nodeType":"YulFunctionCall","src":"23025:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23017:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23064:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23075:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23060:3:19"},"nodeType":"YulFunctionCall","src":"23060:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23083:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23089:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23079:3:19"},"nodeType":"YulFunctionCall","src":"23079:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23053:6:19"},"nodeType":"YulFunctionCall","src":"23053:47:19"},"nodeType":"YulExpressionStatement","src":"23053:47:19"},{"nodeType":"YulAssignment","src":"23109:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23243:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23117:124:19"},"nodeType":"YulFunctionCall","src":"23117:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23109:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22987:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23002:4:19","type":""}],"src":"22836:419:19"},{"body":{"nodeType":"YulBlock","src":"23432:248:19","statements":[{"nodeType":"YulAssignment","src":"23442:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23454:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23465:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23450:3:19"},"nodeType":"YulFunctionCall","src":"23450:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23442:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23489:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23500:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23485:3:19"},"nodeType":"YulFunctionCall","src":"23485:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23508:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23514:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23504:3:19"},"nodeType":"YulFunctionCall","src":"23504:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23478:6:19"},"nodeType":"YulFunctionCall","src":"23478:47:19"},"nodeType":"YulExpressionStatement","src":"23478:47:19"},{"nodeType":"YulAssignment","src":"23534:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23668:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23542:124:19"},"nodeType":"YulFunctionCall","src":"23542:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23534:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23412:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23427:4:19","type":""}],"src":"23261:419:19"},{"body":{"nodeType":"YulBlock","src":"23857:248:19","statements":[{"nodeType":"YulAssignment","src":"23867:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23879:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23890:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23875:3:19"},"nodeType":"YulFunctionCall","src":"23875:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23867:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23914:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23925:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23910:3:19"},"nodeType":"YulFunctionCall","src":"23910:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23933:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23939:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23929:3:19"},"nodeType":"YulFunctionCall","src":"23929:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23903:6:19"},"nodeType":"YulFunctionCall","src":"23903:47:19"},"nodeType":"YulExpressionStatement","src":"23903:47:19"},{"nodeType":"YulAssignment","src":"23959:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24093:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23967:124:19"},"nodeType":"YulFunctionCall","src":"23967:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23959:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23837:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23852:4:19","type":""}],"src":"23686:419:19"},{"body":{"nodeType":"YulBlock","src":"24282:248:19","statements":[{"nodeType":"YulAssignment","src":"24292:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24304:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24315:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24300:3:19"},"nodeType":"YulFunctionCall","src":"24300:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24292:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24339:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24350:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24335:3:19"},"nodeType":"YulFunctionCall","src":"24335:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24358:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24364:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24354:3:19"},"nodeType":"YulFunctionCall","src":"24354:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24328:6:19"},"nodeType":"YulFunctionCall","src":"24328:47:19"},"nodeType":"YulExpressionStatement","src":"24328:47:19"},{"nodeType":"YulAssignment","src":"24384:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24518:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24392:124:19"},"nodeType":"YulFunctionCall","src":"24392:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24384:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24262:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24277:4:19","type":""}],"src":"24111:419:19"},{"body":{"nodeType":"YulBlock","src":"24707:248:19","statements":[{"nodeType":"YulAssignment","src":"24717:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24729:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24740:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24725:3:19"},"nodeType":"YulFunctionCall","src":"24725:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24717:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24764:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24775:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24760:3:19"},"nodeType":"YulFunctionCall","src":"24760:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24783:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24789:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24779:3:19"},"nodeType":"YulFunctionCall","src":"24779:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24753:6:19"},"nodeType":"YulFunctionCall","src":"24753:47:19"},"nodeType":"YulExpressionStatement","src":"24753:47:19"},{"nodeType":"YulAssignment","src":"24809:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24943:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24817:124:19"},"nodeType":"YulFunctionCall","src":"24817:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24809:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24687:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24702:4:19","type":""}],"src":"24536:419:19"},{"body":{"nodeType":"YulBlock","src":"25132:248:19","statements":[{"nodeType":"YulAssignment","src":"25142:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25154:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25165:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25150:3:19"},"nodeType":"YulFunctionCall","src":"25150:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25142:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25189:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25200:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25185:3:19"},"nodeType":"YulFunctionCall","src":"25185:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25208:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"25214:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25204:3:19"},"nodeType":"YulFunctionCall","src":"25204:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25178:6:19"},"nodeType":"YulFunctionCall","src":"25178:47:19"},"nodeType":"YulExpressionStatement","src":"25178:47:19"},{"nodeType":"YulAssignment","src":"25234:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25368:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25242:124:19"},"nodeType":"YulFunctionCall","src":"25242:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25234:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25112:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25127:4:19","type":""}],"src":"24961:419:19"},{"body":{"nodeType":"YulBlock","src":"25557:248:19","statements":[{"nodeType":"YulAssignment","src":"25567:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25579:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25590:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25575:3:19"},"nodeType":"YulFunctionCall","src":"25575:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25567:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25614:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25625:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25610:3:19"},"nodeType":"YulFunctionCall","src":"25610:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25633:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"25639:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25629:3:19"},"nodeType":"YulFunctionCall","src":"25629:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25603:6:19"},"nodeType":"YulFunctionCall","src":"25603:47:19"},"nodeType":"YulExpressionStatement","src":"25603:47:19"},{"nodeType":"YulAssignment","src":"25659:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25793:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25667:124:19"},"nodeType":"YulFunctionCall","src":"25667:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25659:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25537:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25552:4:19","type":""}],"src":"25386:419:19"},{"body":{"nodeType":"YulBlock","src":"25982:248:19","statements":[{"nodeType":"YulAssignment","src":"25992:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26004:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26015:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26000:3:19"},"nodeType":"YulFunctionCall","src":"26000:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25992:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26039:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26050:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26035:3:19"},"nodeType":"YulFunctionCall","src":"26035:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26058:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26064:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26054:3:19"},"nodeType":"YulFunctionCall","src":"26054:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26028:6:19"},"nodeType":"YulFunctionCall","src":"26028:47:19"},"nodeType":"YulExpressionStatement","src":"26028:47:19"},{"nodeType":"YulAssignment","src":"26084:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26218:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26092:124:19"},"nodeType":"YulFunctionCall","src":"26092:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26084:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25962:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25977:4:19","type":""}],"src":"25811:419:19"},{"body":{"nodeType":"YulBlock","src":"26407:248:19","statements":[{"nodeType":"YulAssignment","src":"26417:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26429:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26440:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26425:3:19"},"nodeType":"YulFunctionCall","src":"26425:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26417:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26464:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26475:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26460:3:19"},"nodeType":"YulFunctionCall","src":"26460:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26483:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26489:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26479:3:19"},"nodeType":"YulFunctionCall","src":"26479:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26453:6:19"},"nodeType":"YulFunctionCall","src":"26453:47:19"},"nodeType":"YulExpressionStatement","src":"26453:47:19"},{"nodeType":"YulAssignment","src":"26509:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26643:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26517:124:19"},"nodeType":"YulFunctionCall","src":"26517:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26509:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26387:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26402:4:19","type":""}],"src":"26236:419:19"},{"body":{"nodeType":"YulBlock","src":"26832:248:19","statements":[{"nodeType":"YulAssignment","src":"26842:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26854:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26865:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26850:3:19"},"nodeType":"YulFunctionCall","src":"26850:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26842:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26889:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26900:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26885:3:19"},"nodeType":"YulFunctionCall","src":"26885:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26908:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26914:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26904:3:19"},"nodeType":"YulFunctionCall","src":"26904:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26878:6:19"},"nodeType":"YulFunctionCall","src":"26878:47:19"},"nodeType":"YulExpressionStatement","src":"26878:47:19"},{"nodeType":"YulAssignment","src":"26934:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27068:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26942:124:19"},"nodeType":"YulFunctionCall","src":"26942:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26934:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26812:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26827:4:19","type":""}],"src":"26661:419:19"},{"body":{"nodeType":"YulBlock","src":"27257:248:19","statements":[{"nodeType":"YulAssignment","src":"27267:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27279:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27290:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27275:3:19"},"nodeType":"YulFunctionCall","src":"27275:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27267:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27314:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27325:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27310:3:19"},"nodeType":"YulFunctionCall","src":"27310:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27333:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"27339:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27329:3:19"},"nodeType":"YulFunctionCall","src":"27329:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27303:6:19"},"nodeType":"YulFunctionCall","src":"27303:47:19"},"nodeType":"YulExpressionStatement","src":"27303:47:19"},{"nodeType":"YulAssignment","src":"27359:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27493:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27367:124:19"},"nodeType":"YulFunctionCall","src":"27367:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27359:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27237:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27252:4:19","type":""}],"src":"27086:419:19"},{"body":{"nodeType":"YulBlock","src":"27682:248:19","statements":[{"nodeType":"YulAssignment","src":"27692:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27704:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27715:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27700:3:19"},"nodeType":"YulFunctionCall","src":"27700:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27692:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27739:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27750:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27735:3:19"},"nodeType":"YulFunctionCall","src":"27735:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27758:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"27764:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27754:3:19"},"nodeType":"YulFunctionCall","src":"27754:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27728:6:19"},"nodeType":"YulFunctionCall","src":"27728:47:19"},"nodeType":"YulExpressionStatement","src":"27728:47:19"},{"nodeType":"YulAssignment","src":"27784:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27918:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27792:124:19"},"nodeType":"YulFunctionCall","src":"27792:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27784:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27662:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27677:4:19","type":""}],"src":"27511:419:19"},{"body":{"nodeType":"YulBlock","src":"28107:248:19","statements":[{"nodeType":"YulAssignment","src":"28117:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28129:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28140:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28125:3:19"},"nodeType":"YulFunctionCall","src":"28125:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28117:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28164:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28175:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28160:3:19"},"nodeType":"YulFunctionCall","src":"28160:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28183:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"28189:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28179:3:19"},"nodeType":"YulFunctionCall","src":"28179:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28153:6:19"},"nodeType":"YulFunctionCall","src":"28153:47:19"},"nodeType":"YulExpressionStatement","src":"28153:47:19"},{"nodeType":"YulAssignment","src":"28209:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28343:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28217:124:19"},"nodeType":"YulFunctionCall","src":"28217:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28209:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28087:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28102:4:19","type":""}],"src":"27936:419:19"},{"body":{"nodeType":"YulBlock","src":"28532:248:19","statements":[{"nodeType":"YulAssignment","src":"28542:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28554:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28565:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28550:3:19"},"nodeType":"YulFunctionCall","src":"28550:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28542:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28589:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28600:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28585:3:19"},"nodeType":"YulFunctionCall","src":"28585:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28608:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"28614:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28604:3:19"},"nodeType":"YulFunctionCall","src":"28604:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28578:6:19"},"nodeType":"YulFunctionCall","src":"28578:47:19"},"nodeType":"YulExpressionStatement","src":"28578:47:19"},{"nodeType":"YulAssignment","src":"28634:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28768:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28642:124:19"},"nodeType":"YulFunctionCall","src":"28642:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28634:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28512:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28527:4:19","type":""}],"src":"28361:419:19"},{"body":{"nodeType":"YulBlock","src":"28957:248:19","statements":[{"nodeType":"YulAssignment","src":"28967:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28979:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28990:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28975:3:19"},"nodeType":"YulFunctionCall","src":"28975:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28967:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29014:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29025:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29010:3:19"},"nodeType":"YulFunctionCall","src":"29010:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29033:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"29039:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29029:3:19"},"nodeType":"YulFunctionCall","src":"29029:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29003:6:19"},"nodeType":"YulFunctionCall","src":"29003:47:19"},"nodeType":"YulExpressionStatement","src":"29003:47:19"},{"nodeType":"YulAssignment","src":"29059:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29193:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29067:124:19"},"nodeType":"YulFunctionCall","src":"29067:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29059:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28937:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28952:4:19","type":""}],"src":"28786:419:19"},{"body":{"nodeType":"YulBlock","src":"29382:248:19","statements":[{"nodeType":"YulAssignment","src":"29392:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29404:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29415:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29400:3:19"},"nodeType":"YulFunctionCall","src":"29400:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29392:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29439:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29450:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29435:3:19"},"nodeType":"YulFunctionCall","src":"29435:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29458:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"29464:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29454:3:19"},"nodeType":"YulFunctionCall","src":"29454:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29428:6:19"},"nodeType":"YulFunctionCall","src":"29428:47:19"},"nodeType":"YulExpressionStatement","src":"29428:47:19"},{"nodeType":"YulAssignment","src":"29484:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29618:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29492:124:19"},"nodeType":"YulFunctionCall","src":"29492:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29484:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29362:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29377:4:19","type":""}],"src":"29211:419:19"},{"body":{"nodeType":"YulBlock","src":"29807:248:19","statements":[{"nodeType":"YulAssignment","src":"29817:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29829:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29840:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29825:3:19"},"nodeType":"YulFunctionCall","src":"29825:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29817:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29864:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29875:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29860:3:19"},"nodeType":"YulFunctionCall","src":"29860:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29883:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"29889:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29879:3:19"},"nodeType":"YulFunctionCall","src":"29879:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29853:6:19"},"nodeType":"YulFunctionCall","src":"29853:47:19"},"nodeType":"YulExpressionStatement","src":"29853:47:19"},{"nodeType":"YulAssignment","src":"29909:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30043:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29917:124:19"},"nodeType":"YulFunctionCall","src":"29917:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29909:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29787:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29802:4:19","type":""}],"src":"29636:419:19"},{"body":{"nodeType":"YulBlock","src":"30232:248:19","statements":[{"nodeType":"YulAssignment","src":"30242:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30254:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30265:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30250:3:19"},"nodeType":"YulFunctionCall","src":"30250:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30242:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30289:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30300:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30285:3:19"},"nodeType":"YulFunctionCall","src":"30285:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30308:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"30314:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30304:3:19"},"nodeType":"YulFunctionCall","src":"30304:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30278:6:19"},"nodeType":"YulFunctionCall","src":"30278:47:19"},"nodeType":"YulExpressionStatement","src":"30278:47:19"},{"nodeType":"YulAssignment","src":"30334:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30468:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30342:124:19"},"nodeType":"YulFunctionCall","src":"30342:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30334:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30212:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30227:4:19","type":""}],"src":"30061:419:19"},{"body":{"nodeType":"YulBlock","src":"30657:248:19","statements":[{"nodeType":"YulAssignment","src":"30667:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30679:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30690:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30675:3:19"},"nodeType":"YulFunctionCall","src":"30675:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30667:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30714:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30725:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30710:3:19"},"nodeType":"YulFunctionCall","src":"30710:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30733:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"30739:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30729:3:19"},"nodeType":"YulFunctionCall","src":"30729:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30703:6:19"},"nodeType":"YulFunctionCall","src":"30703:47:19"},"nodeType":"YulExpressionStatement","src":"30703:47:19"},{"nodeType":"YulAssignment","src":"30759:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30893:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30767:124:19"},"nodeType":"YulFunctionCall","src":"30767:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30759:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30637:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30652:4:19","type":""}],"src":"30486:419:19"},{"body":{"nodeType":"YulBlock","src":"31082:248:19","statements":[{"nodeType":"YulAssignment","src":"31092:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31104:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31115:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31100:3:19"},"nodeType":"YulFunctionCall","src":"31100:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31092:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31139:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31150:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31135:3:19"},"nodeType":"YulFunctionCall","src":"31135:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31158:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"31164:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31154:3:19"},"nodeType":"YulFunctionCall","src":"31154:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31128:6:19"},"nodeType":"YulFunctionCall","src":"31128:47:19"},"nodeType":"YulExpressionStatement","src":"31128:47:19"},{"nodeType":"YulAssignment","src":"31184:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31318:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31192:124:19"},"nodeType":"YulFunctionCall","src":"31192:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31184:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31062:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31077:4:19","type":""}],"src":"30911:419:19"},{"body":{"nodeType":"YulBlock","src":"31507:248:19","statements":[{"nodeType":"YulAssignment","src":"31517:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31529:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31540:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31525:3:19"},"nodeType":"YulFunctionCall","src":"31525:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31517:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31564:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31575:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31560:3:19"},"nodeType":"YulFunctionCall","src":"31560:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31583:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"31589:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31579:3:19"},"nodeType":"YulFunctionCall","src":"31579:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31553:6:19"},"nodeType":"YulFunctionCall","src":"31553:47:19"},"nodeType":"YulExpressionStatement","src":"31553:47:19"},{"nodeType":"YulAssignment","src":"31609:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31743:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31617:124:19"},"nodeType":"YulFunctionCall","src":"31617:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31609:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31487:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31502:4:19","type":""}],"src":"31336:419:19"},{"body":{"nodeType":"YulBlock","src":"31932:248:19","statements":[{"nodeType":"YulAssignment","src":"31942:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31954:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31965:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31950:3:19"},"nodeType":"YulFunctionCall","src":"31950:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31942:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31989:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32000:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31985:3:19"},"nodeType":"YulFunctionCall","src":"31985:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32008:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"32014:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32004:3:19"},"nodeType":"YulFunctionCall","src":"32004:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31978:6:19"},"nodeType":"YulFunctionCall","src":"31978:47:19"},"nodeType":"YulExpressionStatement","src":"31978:47:19"},{"nodeType":"YulAssignment","src":"32034:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32168:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32042:124:19"},"nodeType":"YulFunctionCall","src":"32042:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32034:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31912:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31927:4:19","type":""}],"src":"31761:419:19"},{"body":{"nodeType":"YulBlock","src":"32357:248:19","statements":[{"nodeType":"YulAssignment","src":"32367:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32379:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32390:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32375:3:19"},"nodeType":"YulFunctionCall","src":"32375:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32367:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32414:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32425:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32410:3:19"},"nodeType":"YulFunctionCall","src":"32410:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32433:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"32439:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32429:3:19"},"nodeType":"YulFunctionCall","src":"32429:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32403:6:19"},"nodeType":"YulFunctionCall","src":"32403:47:19"},"nodeType":"YulExpressionStatement","src":"32403:47:19"},{"nodeType":"YulAssignment","src":"32459:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32593:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32467:124:19"},"nodeType":"YulFunctionCall","src":"32467:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32459:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32337:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32352:4:19","type":""}],"src":"32186:419:19"},{"body":{"nodeType":"YulBlock","src":"32765:180:19","statements":[{"nodeType":"YulAssignment","src":"32775:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32787:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32798:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32783:3:19"},"nodeType":"YulFunctionCall","src":"32783:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32775:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32911:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32924:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"32935:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32920:3:19"},"nodeType":"YulFunctionCall","src":"32920:17:19"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1243_memory_ptr_to_t_struct$_Checkpoint_$1243_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32811:99:19"},"nodeType":"YulFunctionCall","src":"32811:127:19"},"nodeType":"YulExpressionStatement","src":"32811:127:19"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1243_memory_ptr__to_t_struct$_Checkpoint_$1243_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32737:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32749:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32760:4:19","type":""}],"src":"32611:334:19"},{"body":{"nodeType":"YulBlock","src":"33049:124:19","statements":[{"nodeType":"YulAssignment","src":"33059:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33071:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33082:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33067:3:19"},"nodeType":"YulFunctionCall","src":"33067:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33059:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33139:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33152:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33163:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33148:3:19"},"nodeType":"YulFunctionCall","src":"33148:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33095:43:19"},"nodeType":"YulFunctionCall","src":"33095:71:19"},"nodeType":"YulExpressionStatement","src":"33095:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33021:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33033:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33044:4:19","type":""}],"src":"32951:222:19"},{"body":{"nodeType":"YulBlock","src":"33305:206:19","statements":[{"nodeType":"YulAssignment","src":"33315:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33327:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33338:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33323:3:19"},"nodeType":"YulFunctionCall","src":"33323:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33315:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33395:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33408:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33419:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33404:3:19"},"nodeType":"YulFunctionCall","src":"33404:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33351:43:19"},"nodeType":"YulFunctionCall","src":"33351:71:19"},"nodeType":"YulExpressionStatement","src":"33351:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33476:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33489:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33500:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33485:3:19"},"nodeType":"YulFunctionCall","src":"33485:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33432:43:19"},"nodeType":"YulFunctionCall","src":"33432:72:19"},"nodeType":"YulExpressionStatement","src":"33432:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33269:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33281:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33289:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33300:4:19","type":""}],"src":"33179:332:19"},{"body":{"nodeType":"YulBlock","src":"33613:122:19","statements":[{"nodeType":"YulAssignment","src":"33623:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33635:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33646:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33631:3:19"},"nodeType":"YulFunctionCall","src":"33631:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33623:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33701:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33714:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33725:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33710:3:19"},"nodeType":"YulFunctionCall","src":"33710:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"33659:41:19"},"nodeType":"YulFunctionCall","src":"33659:69:19"},"nodeType":"YulExpressionStatement","src":"33659:69:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33585:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33597:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33608:4:19","type":""}],"src":"33517:218:19"},{"body":{"nodeType":"YulBlock","src":"33835:120:19","statements":[{"nodeType":"YulAssignment","src":"33845:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33857:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33868:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33853:3:19"},"nodeType":"YulFunctionCall","src":"33853:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33845:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33921:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33934:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33945:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33930:3:19"},"nodeType":"YulFunctionCall","src":"33930:17:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"33881:39:19"},"nodeType":"YulFunctionCall","src":"33881:67:19"},"nodeType":"YulExpressionStatement","src":"33881:67:19"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33807:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33819:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33830:4:19","type":""}],"src":"33741:214:19"},{"body":{"nodeType":"YulBlock","src":"34020:40:19","statements":[{"nodeType":"YulAssignment","src":"34031:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34047:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34041:5:19"},"nodeType":"YulFunctionCall","src":"34041:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34031:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34003:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34013:6:19","type":""}],"src":"33961:99:19"},{"body":{"nodeType":"YulBlock","src":"34162:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34179:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"34184:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34172:6:19"},"nodeType":"YulFunctionCall","src":"34172:19:19"},"nodeType":"YulExpressionStatement","src":"34172:19:19"},{"nodeType":"YulAssignment","src":"34200:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34219:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"34224:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34215:3:19"},"nodeType":"YulFunctionCall","src":"34215:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34200:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34134:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"34139:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34150:11:19","type":""}],"src":"34066:169:19"},{"body":{"nodeType":"YulBlock","src":"34355:34:19","statements":[{"nodeType":"YulAssignment","src":"34365:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"34380:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34365:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34327:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"34332:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34343:11:19","type":""}],"src":"34241:148:19"},{"body":{"nodeType":"YulBlock","src":"34439:261:19","statements":[{"nodeType":"YulAssignment","src":"34449:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34472:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34454:17:19"},"nodeType":"YulFunctionCall","src":"34454:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34449:1:19"}]},{"nodeType":"YulAssignment","src":"34483:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34506:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34488:17:19"},"nodeType":"YulFunctionCall","src":"34488:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34483:1:19"}]},{"body":{"nodeType":"YulBlock","src":"34646:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34648:16:19"},"nodeType":"YulFunctionCall","src":"34648:18:19"},"nodeType":"YulExpressionStatement","src":"34648:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34567:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34574:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"34642:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34570:3:19"},"nodeType":"YulFunctionCall","src":"34570:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34564:2:19"},"nodeType":"YulFunctionCall","src":"34564:81:19"},"nodeType":"YulIf","src":"34561:2:19"},{"nodeType":"YulAssignment","src":"34678:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34689:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"34692:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34685:3:19"},"nodeType":"YulFunctionCall","src":"34685:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34678:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34426:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"34429:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34435:3:19","type":""}],"src":"34395:305:19"},{"body":{"nodeType":"YulBlock","src":"34748:143:19","statements":[{"nodeType":"YulAssignment","src":"34758:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34781:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34763:17:19"},"nodeType":"YulFunctionCall","src":"34763:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34758:1:19"}]},{"nodeType":"YulAssignment","src":"34792:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34815:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34797:17:19"},"nodeType":"YulFunctionCall","src":"34797:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34792:1:19"}]},{"body":{"nodeType":"YulBlock","src":"34839:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"34841:16:19"},"nodeType":"YulFunctionCall","src":"34841:18:19"},"nodeType":"YulExpressionStatement","src":"34841:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34836:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34829:6:19"},"nodeType":"YulFunctionCall","src":"34829:9:19"},"nodeType":"YulIf","src":"34826:2:19"},{"nodeType":"YulAssignment","src":"34871:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34880:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"34883:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34876:3:19"},"nodeType":"YulFunctionCall","src":"34876:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"34871:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34737:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"34740:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"34746:1:19","type":""}],"src":"34706:185:19"},{"body":{"nodeType":"YulBlock","src":"34942:146:19","statements":[{"nodeType":"YulAssignment","src":"34952:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34975:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34957:17:19"},"nodeType":"YulFunctionCall","src":"34957:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34952:1:19"}]},{"nodeType":"YulAssignment","src":"34986:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35009:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34991:17:19"},"nodeType":"YulFunctionCall","src":"34991:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34986:1:19"}]},{"body":{"nodeType":"YulBlock","src":"35033:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35035:16:19"},"nodeType":"YulFunctionCall","src":"35035:18:19"},"nodeType":"YulExpressionStatement","src":"35035:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35027:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"35030:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35024:2:19"},"nodeType":"YulFunctionCall","src":"35024:8:19"},"nodeType":"YulIf","src":"35021:2:19"},{"nodeType":"YulAssignment","src":"35065:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35077:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"35080:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35073:3:19"},"nodeType":"YulFunctionCall","src":"35073:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"35065:4:19"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34928:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"34931:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"34937:4:19","type":""}],"src":"34897:191:19"},{"body":{"nodeType":"YulBlock","src":"35139:51:19","statements":[{"nodeType":"YulAssignment","src":"35149:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35178:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"35160:17:19"},"nodeType":"YulFunctionCall","src":"35160:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35149:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35121:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35131:7:19","type":""}],"src":"35094:96:19"},{"body":{"nodeType":"YulBlock","src":"35238:48:19","statements":[{"nodeType":"YulAssignment","src":"35248:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35273:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35266:6:19"},"nodeType":"YulFunctionCall","src":"35266:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35259:6:19"},"nodeType":"YulFunctionCall","src":"35259:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35248:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35220:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35230:7:19","type":""}],"src":"35196:90:19"},{"body":{"nodeType":"YulBlock","src":"35337:32:19","statements":[{"nodeType":"YulAssignment","src":"35347:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"35358:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35347:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35319:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35329:7:19","type":""}],"src":"35292:77:19"},{"body":{"nodeType":"YulBlock","src":"35420:81:19","statements":[{"nodeType":"YulAssignment","src":"35430:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35445:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"35452:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35441:3:19"},"nodeType":"YulFunctionCall","src":"35441:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35430:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35402:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35412:7:19","type":""}],"src":"35375:126:19"},{"body":{"nodeType":"YulBlock","src":"35552:97:19","statements":[{"nodeType":"YulAssignment","src":"35562:81:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35577:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"35584:58:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35573:3:19"},"nodeType":"YulFunctionCall","src":"35573:70:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35562:7:19"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35534:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35544:7:19","type":""}],"src":"35507:142:19"},{"body":{"nodeType":"YulBlock","src":"35700:32:19","statements":[{"nodeType":"YulAssignment","src":"35710:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"35721:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35710:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35682:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35692:7:19","type":""}],"src":"35655:77:19"},{"body":{"nodeType":"YulBlock","src":"35782:49:19","statements":[{"nodeType":"YulAssignment","src":"35792:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35807:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"35814:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35803:3:19"},"nodeType":"YulFunctionCall","src":"35803:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35792:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35764:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35774:7:19","type":""}],"src":"35738:93:19"},{"body":{"nodeType":"YulBlock","src":"35880:43:19","statements":[{"nodeType":"YulAssignment","src":"35890:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35905:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"35912:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35901:3:19"},"nodeType":"YulFunctionCall","src":"35901:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35890:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35862:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35872:7:19","type":""}],"src":"35837:86:19"},{"body":{"nodeType":"YulBlock","src":"35978:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"35988:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"35997:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35992:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"36057:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"36082:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"36087:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36078:3:19"},"nodeType":"YulFunctionCall","src":"36078:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36101:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"36106:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36097:3:19"},"nodeType":"YulFunctionCall","src":"36097:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36091:5:19"},"nodeType":"YulFunctionCall","src":"36091:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36071:6:19"},"nodeType":"YulFunctionCall","src":"36071:39:19"},"nodeType":"YulExpressionStatement","src":"36071:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36018:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"36021:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36015:2:19"},"nodeType":"YulFunctionCall","src":"36015:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36029:19:19","statements":[{"nodeType":"YulAssignment","src":"36031:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36040:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"36043:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36036:3:19"},"nodeType":"YulFunctionCall","src":"36036:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36031:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"36011:3:19","statements":[]},"src":"36007:113:19"},{"body":{"nodeType":"YulBlock","src":"36154:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"36204:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"36209:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36200:3:19"},"nodeType":"YulFunctionCall","src":"36200:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"36218:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36193:6:19"},"nodeType":"YulFunctionCall","src":"36193:27:19"},"nodeType":"YulExpressionStatement","src":"36193:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36135:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"36138:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36132:2:19"},"nodeType":"YulFunctionCall","src":"36132:13:19"},"nodeType":"YulIf","src":"36129:2:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"35960:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"35965:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"35970:6:19","type":""}],"src":"35929:307:19"},{"body":{"nodeType":"YulBlock","src":"36293:269:19","statements":[{"nodeType":"YulAssignment","src":"36303:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36317:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"36323:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36313:3:19"},"nodeType":"YulFunctionCall","src":"36313:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"36303:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"36334:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36364:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"36370:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36360:3:19"},"nodeType":"YulFunctionCall","src":"36360:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"36338:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"36411:51:19","statements":[{"nodeType":"YulAssignment","src":"36425:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36439:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36447:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36435:3:19"},"nodeType":"YulFunctionCall","src":"36435:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"36425:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"36391:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36384:6:19"},"nodeType":"YulFunctionCall","src":"36384:26:19"},"nodeType":"YulIf","src":"36381:2:19"},{"body":{"nodeType":"YulBlock","src":"36514:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"36528:16:19"},"nodeType":"YulFunctionCall","src":"36528:18:19"},"nodeType":"YulExpressionStatement","src":"36528:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"36478:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36501:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"36509:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36498:2:19"},"nodeType":"YulFunctionCall","src":"36498:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"36475:2:19"},"nodeType":"YulFunctionCall","src":"36475:38:19"},"nodeType":"YulIf","src":"36472:2:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"36277:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"36286:6:19","type":""}],"src":"36242:320:19"},{"body":{"nodeType":"YulBlock","src":"36615:32:19","statements":[{"nodeType":"YulAssignment","src":"36625:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"36636:5:19"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"36625:7:19"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36597:5:19","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"36607:7:19","type":""}],"src":"36568:79:19"},{"body":{"nodeType":"YulBlock","src":"36681:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36698:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36701:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36691:6:19"},"nodeType":"YulFunctionCall","src":"36691:88:19"},"nodeType":"YulExpressionStatement","src":"36691:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36795:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36798:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36788:6:19"},"nodeType":"YulFunctionCall","src":"36788:15:19"},"nodeType":"YulExpressionStatement","src":"36788:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36819:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36822:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36812:6:19"},"nodeType":"YulFunctionCall","src":"36812:15:19"},"nodeType":"YulExpressionStatement","src":"36812:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"36653:180:19"},{"body":{"nodeType":"YulBlock","src":"36867:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36884:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36887:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36877:6:19"},"nodeType":"YulFunctionCall","src":"36877:88:19"},"nodeType":"YulExpressionStatement","src":"36877:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36981:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36984:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36974:6:19"},"nodeType":"YulFunctionCall","src":"36974:15:19"},"nodeType":"YulExpressionStatement","src":"36974:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37005:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37008:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36998:6:19"},"nodeType":"YulFunctionCall","src":"36998:15:19"},"nodeType":"YulExpressionStatement","src":"36998:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"36839:180:19"},{"body":{"nodeType":"YulBlock","src":"37053:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37070:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37073:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37063:6:19"},"nodeType":"YulFunctionCall","src":"37063:88:19"},"nodeType":"YulExpressionStatement","src":"37063:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37167:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37170:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37160:6:19"},"nodeType":"YulFunctionCall","src":"37160:15:19"},"nodeType":"YulExpressionStatement","src":"37160:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37191:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37194:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37184:6:19"},"nodeType":"YulFunctionCall","src":"37184:15:19"},"nodeType":"YulExpressionStatement","src":"37184:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"37025:180:19"},{"body":{"nodeType":"YulBlock","src":"37259:54:19","statements":[{"nodeType":"YulAssignment","src":"37269:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37287:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"37294:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37283:3:19"},"nodeType":"YulFunctionCall","src":"37283:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37303:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37299:3:19"},"nodeType":"YulFunctionCall","src":"37299:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37279:3:19"},"nodeType":"YulFunctionCall","src":"37279:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"37269:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37242:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"37252:6:19","type":""}],"src":"37211:102:19"},{"body":{"nodeType":"YulBlock","src":"37425:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37447:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37455:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37443:3:19"},"nodeType":"YulFunctionCall","src":"37443:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"37459:26:19","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37436:6:19"},"nodeType":"YulFunctionCall","src":"37436:50:19"},"nodeType":"YulExpressionStatement","src":"37436:50:19"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37417:6:19","type":""}],"src":"37319:174:19"},{"body":{"nodeType":"YulBlock","src":"37605:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37627:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37635:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37623:3:19"},"nodeType":"YulFunctionCall","src":"37623:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"37639:31:19","type":"","value":"ERC20Snapshot: nonexistent id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37616:6:19"},"nodeType":"YulFunctionCall","src":"37616:55:19"},"nodeType":"YulExpressionStatement","src":"37616:55:19"}]},"name":"store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37597:6:19","type":""}],"src":"37499:179:19"},{"body":{"nodeType":"YulBlock","src":"37790:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37812:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37820:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37808:3:19"},"nodeType":"YulFunctionCall","src":"37808:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"37824:34:19","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37801:6:19"},"nodeType":"YulFunctionCall","src":"37801:58:19"},"nodeType":"YulExpressionStatement","src":"37801:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37880:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"37888:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37876:3:19"},"nodeType":"YulFunctionCall","src":"37876:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"37893:5:19","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37869:6:19"},"nodeType":"YulFunctionCall","src":"37869:30:19"},"nodeType":"YulExpressionStatement","src":"37869:30:19"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37782:6:19","type":""}],"src":"37684:222:19"},{"body":{"nodeType":"YulBlock","src":"38018:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38040:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38048:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38036:3:19"},"nodeType":"YulFunctionCall","src":"38036:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"38052:33:19","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38029:6:19"},"nodeType":"YulFunctionCall","src":"38029:57:19"},"nodeType":"YulExpressionStatement","src":"38029:57:19"}]},"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38010:6:19","type":""}],"src":"37912:181:19"},{"body":{"nodeType":"YulBlock","src":"38205:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38227:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38235:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38223:3:19"},"nodeType":"YulFunctionCall","src":"38223:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"38239:31:19","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38216:6:19"},"nodeType":"YulFunctionCall","src":"38216:55:19"},"nodeType":"YulExpressionStatement","src":"38216:55:19"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38197:6:19","type":""}],"src":"38099:179:19"},{"body":{"nodeType":"YulBlock","src":"38390:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38412:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38420:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38408:3:19"},"nodeType":"YulFunctionCall","src":"38408:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"38424:34:19","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38401:6:19"},"nodeType":"YulFunctionCall","src":"38401:58:19"},"nodeType":"YulExpressionStatement","src":"38401:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38480:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38488:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38476:3:19"},"nodeType":"YulFunctionCall","src":"38476:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"38493:4:19","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38469:6:19"},"nodeType":"YulFunctionCall","src":"38469:29:19"},"nodeType":"YulExpressionStatement","src":"38469:29:19"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38382:6:19","type":""}],"src":"38284:221:19"},{"body":{"nodeType":"YulBlock","src":"38617:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38639:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38647:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38635:3:19"},"nodeType":"YulFunctionCall","src":"38635:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"38651:33:19","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38628:6:19"},"nodeType":"YulFunctionCall","src":"38628:57:19"},"nodeType":"YulExpressionStatement","src":"38628:57:19"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38609:6:19","type":""}],"src":"38511:181:19"},{"body":{"nodeType":"YulBlock","src":"38804:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38826:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"38834:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38822:3:19"},"nodeType":"YulFunctionCall","src":"38822:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"38838:27:19","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38815:6:19"},"nodeType":"YulFunctionCall","src":"38815:51:19"},"nodeType":"YulExpressionStatement","src":"38815:51:19"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38796:6:19","type":""}],"src":"38698:175:19"},{"body":{"nodeType":"YulBlock","src":"38985:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39007:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39015:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39003:3:19"},"nodeType":"YulFunctionCall","src":"39003:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"39019:34:19","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38996:6:19"},"nodeType":"YulFunctionCall","src":"38996:58:19"},"nodeType":"YulExpressionStatement","src":"38996:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39075:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39083:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39071:3:19"},"nodeType":"YulFunctionCall","src":"39071:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"39088:8:19","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39064:6:19"},"nodeType":"YulFunctionCall","src":"39064:33:19"},"nodeType":"YulExpressionStatement","src":"39064:33:19"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38977:6:19","type":""}],"src":"38879:225:19"},{"body":{"nodeType":"YulBlock","src":"39216:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39238:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39246:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39234:3:19"},"nodeType":"YulFunctionCall","src":"39234:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"39250:34:19","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39227:6:19"},"nodeType":"YulFunctionCall","src":"39227:58:19"},"nodeType":"YulExpressionStatement","src":"39227:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39306:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39314:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39302:3:19"},"nodeType":"YulFunctionCall","src":"39302:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"39319:4:19","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39295:6:19"},"nodeType":"YulFunctionCall","src":"39295:29:19"},"nodeType":"YulExpressionStatement","src":"39295:29:19"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39208:6:19","type":""}],"src":"39110:221:19"},{"body":{"nodeType":"YulBlock","src":"39443:108:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39465:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39473:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39461:3:19"},"nodeType":"YulFunctionCall","src":"39461:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"39477:66:19","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39454:6:19"},"nodeType":"YulFunctionCall","src":"39454:90:19"},"nodeType":"YulExpressionStatement","src":"39454:90:19"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39435:6:19","type":""}],"src":"39337:214:19"},{"body":{"nodeType":"YulBlock","src":"39663:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39685:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39693:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39681:3:19"},"nodeType":"YulFunctionCall","src":"39681:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"39697:31:19","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39674:6:19"},"nodeType":"YulFunctionCall","src":"39674:55:19"},"nodeType":"YulExpressionStatement","src":"39674:55:19"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39655:6:19","type":""}],"src":"39557:179:19"},{"body":{"nodeType":"YulBlock","src":"39848:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39870:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"39878:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39866:3:19"},"nodeType":"YulFunctionCall","src":"39866:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"39882:31:19","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39859:6:19"},"nodeType":"YulFunctionCall","src":"39859:55:19"},"nodeType":"YulExpressionStatement","src":"39859:55:19"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39840:6:19","type":""}],"src":"39742:179:19"},{"body":{"nodeType":"YulBlock","src":"40033:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40055:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40063:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40051:3:19"},"nodeType":"YulFunctionCall","src":"40051:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"40067:34:19","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40044:6:19"},"nodeType":"YulFunctionCall","src":"40044:58:19"},"nodeType":"YulExpressionStatement","src":"40044:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40123:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40131:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40119:3:19"},"nodeType":"YulFunctionCall","src":"40119:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"40136:8:19","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40112:6:19"},"nodeType":"YulFunctionCall","src":"40112:33:19"},"nodeType":"YulExpressionStatement","src":"40112:33:19"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40025:6:19","type":""}],"src":"39927:225:19"},{"body":{"nodeType":"YulBlock","src":"40264:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40286:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40294:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40282:3:19"},"nodeType":"YulFunctionCall","src":"40282:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"40298:34:19","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40275:6:19"},"nodeType":"YulFunctionCall","src":"40275:58:19"},"nodeType":"YulExpressionStatement","src":"40275:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40354:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40362:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40350:3:19"},"nodeType":"YulFunctionCall","src":"40350:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"40367:4:19","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40343:6:19"},"nodeType":"YulFunctionCall","src":"40343:29:19"},"nodeType":"YulExpressionStatement","src":"40343:29:19"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40256:6:19","type":""}],"src":"40158:221:19"},{"body":{"nodeType":"YulBlock","src":"40491:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40513:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40521:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40509:3:19"},"nodeType":"YulFunctionCall","src":"40509:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"40525:34:19","type":"","value":"ECDSA: invalid signature 'v' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40502:6:19"},"nodeType":"YulFunctionCall","src":"40502:58:19"},"nodeType":"YulExpressionStatement","src":"40502:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40581:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40589:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40577:3:19"},"nodeType":"YulFunctionCall","src":"40577:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"40594:4:19","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40570:6:19"},"nodeType":"YulFunctionCall","src":"40570:29:19"},"nodeType":"YulExpressionStatement","src":"40570:29:19"}]},"name":"store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40483:6:19","type":""}],"src":"40385:221:19"},{"body":{"nodeType":"YulBlock","src":"40718:74:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40740:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40748:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40736:3:19"},"nodeType":"YulFunctionCall","src":"40736:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"40752:32:19","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40729:6:19"},"nodeType":"YulFunctionCall","src":"40729:56:19"},"nodeType":"YulExpressionStatement","src":"40729:56:19"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40710:6:19","type":""}],"src":"40612:180:19"},{"body":{"nodeType":"YulBlock","src":"40904:129:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40926:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"40934:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40922:3:19"},"nodeType":"YulFunctionCall","src":"40922:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"40938:34:19","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40915:6:19"},"nodeType":"YulFunctionCall","src":"40915:58:19"},"nodeType":"YulExpressionStatement","src":"40915:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40994:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41002:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40990:3:19"},"nodeType":"YulFunctionCall","src":"40990:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"41007:18:19","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40983:6:19"},"nodeType":"YulFunctionCall","src":"40983:43:19"},"nodeType":"YulExpressionStatement","src":"40983:43:19"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40896:6:19","type":""}],"src":"40798:235:19"},{"body":{"nodeType":"YulBlock","src":"41145:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41167:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41175:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41163:3:19"},"nodeType":"YulFunctionCall","src":"41163:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"41179:34:19","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41156:6:19"},"nodeType":"YulFunctionCall","src":"41156:58:19"},"nodeType":"YulExpressionStatement","src":"41156:58:19"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41137:6:19","type":""}],"src":"41039:182:19"},{"body":{"nodeType":"YulBlock","src":"41333:120:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41355:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41363:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41351:3:19"},"nodeType":"YulFunctionCall","src":"41351:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"41367:34:19","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41344:6:19"},"nodeType":"YulFunctionCall","src":"41344:58:19"},"nodeType":"YulExpressionStatement","src":"41344:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41423:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41431:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41419:3:19"},"nodeType":"YulFunctionCall","src":"41419:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"41436:9:19","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41412:6:19"},"nodeType":"YulFunctionCall","src":"41412:34:19"},"nodeType":"YulExpressionStatement","src":"41412:34:19"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41325:6:19","type":""}],"src":"41227:226:19"},{"body":{"nodeType":"YulBlock","src":"41565:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41587:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41595:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41583:3:19"},"nodeType":"YulFunctionCall","src":"41583:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"41599:34:19","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41576:6:19"},"nodeType":"YulFunctionCall","src":"41576:58:19"},"nodeType":"YulExpressionStatement","src":"41576:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41655:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41663:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41651:3:19"},"nodeType":"YulFunctionCall","src":"41651:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"41668:3:19","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41644:6:19"},"nodeType":"YulFunctionCall","src":"41644:28:19"},"nodeType":"YulExpressionStatement","src":"41644:28:19"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41557:6:19","type":""}],"src":"41459:220:19"},{"body":{"nodeType":"YulBlock","src":"41791:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41813:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41821:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41809:3:19"},"nodeType":"YulFunctionCall","src":"41809:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"41825:34:19","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41802:6:19"},"nodeType":"YulFunctionCall","src":"41802:58:19"},"nodeType":"YulExpressionStatement","src":"41802:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41881:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"41889:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41877:3:19"},"nodeType":"YulFunctionCall","src":"41877:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"41894:7:19","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41870:6:19"},"nodeType":"YulFunctionCall","src":"41870:32:19"},"nodeType":"YulExpressionStatement","src":"41870:32:19"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41783:6:19","type":""}],"src":"41685:224:19"},{"body":{"nodeType":"YulBlock","src":"42021:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42043:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42051:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42039:3:19"},"nodeType":"YulFunctionCall","src":"42039:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"42055:34:19","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42032:6:19"},"nodeType":"YulFunctionCall","src":"42032:58:19"},"nodeType":"YulExpressionStatement","src":"42032:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42111:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42119:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42107:3:19"},"nodeType":"YulFunctionCall","src":"42107:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"42124:8:19","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42100:6:19"},"nodeType":"YulFunctionCall","src":"42100:33:19"},"nodeType":"YulExpressionStatement","src":"42100:33:19"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42013:6:19","type":""}],"src":"41915:225:19"},{"body":{"nodeType":"YulBlock","src":"42252:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42274:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42282:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42270:3:19"},"nodeType":"YulFunctionCall","src":"42270:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"42286:34:19","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42263:6:19"},"nodeType":"YulFunctionCall","src":"42263:58:19"},"nodeType":"YulExpressionStatement","src":"42263:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42342:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42350:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42338:3:19"},"nodeType":"YulFunctionCall","src":"42338:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"42355:6:19","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42331:6:19"},"nodeType":"YulFunctionCall","src":"42331:31:19"},"nodeType":"YulExpressionStatement","src":"42331:31:19"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42244:6:19","type":""}],"src":"42146:223:19"},{"body":{"nodeType":"YulBlock","src":"42481:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42503:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42511:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42499:3:19"},"nodeType":"YulFunctionCall","src":"42499:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"42515:24:19","type":"","value":"ERC20Snapshot: id is 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42492:6:19"},"nodeType":"YulFunctionCall","src":"42492:48:19"},"nodeType":"YulExpressionStatement","src":"42492:48:19"}]},"name":"store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42473:6:19","type":""}],"src":"42375:172:19"},{"body":{"nodeType":"YulBlock","src":"42659:118:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42681:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42689:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42677:3:19"},"nodeType":"YulFunctionCall","src":"42677:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"42693:34:19","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42670:6:19"},"nodeType":"YulFunctionCall","src":"42670:58:19"},"nodeType":"YulExpressionStatement","src":"42670:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42749:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42757:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42745:3:19"},"nodeType":"YulFunctionCall","src":"42745:15:19"},{"kind":"string","nodeType":"YulLiteral","src":"42762:7:19","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42738:6:19"},"nodeType":"YulFunctionCall","src":"42738:32:19"},"nodeType":"YulExpressionStatement","src":"42738:32:19"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42651:6:19","type":""}],"src":"42553:224:19"},{"body":{"nodeType":"YulBlock","src":"42889:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42911:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"42919:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42907:3:19"},"nodeType":"YulFunctionCall","src":"42907:14:19"},{"kind":"string","nodeType":"YulLiteral","src":"42923:33:19","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42900:6:19"},"nodeType":"YulFunctionCall","src":"42900:57:19"},"nodeType":"YulExpressionStatement","src":"42900:57:19"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42881:6:19","type":""}],"src":"42783:181:19"},{"body":{"nodeType":"YulBlock","src":"43013:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"43070:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43079:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43082:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43072:6:19"},"nodeType":"YulFunctionCall","src":"43072:12:19"},"nodeType":"YulExpressionStatement","src":"43072:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43036:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43061:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"43043:17:19"},"nodeType":"YulFunctionCall","src":"43043:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43033:2:19"},"nodeType":"YulFunctionCall","src":"43033:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43026:6:19"},"nodeType":"YulFunctionCall","src":"43026:43:19"},"nodeType":"YulIf","src":"43023:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43006:5:19","type":""}],"src":"42970:122:19"},{"body":{"nodeType":"YulBlock","src":"43141:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"43198:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43207:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43210:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43200:6:19"},"nodeType":"YulFunctionCall","src":"43200:12:19"},"nodeType":"YulExpressionStatement","src":"43200:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43164:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43189:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"43171:17:19"},"nodeType":"YulFunctionCall","src":"43171:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43161:2:19"},"nodeType":"YulFunctionCall","src":"43161:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43154:6:19"},"nodeType":"YulFunctionCall","src":"43154:43:19"},"nodeType":"YulIf","src":"43151:2:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43134:5:19","type":""}],"src":"43098:122:19"},{"body":{"nodeType":"YulBlock","src":"43269:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"43326:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43335:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43338:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43328:6:19"},"nodeType":"YulFunctionCall","src":"43328:12:19"},"nodeType":"YulExpressionStatement","src":"43328:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43292:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43317:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43299:17:19"},"nodeType":"YulFunctionCall","src":"43299:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43289:2:19"},"nodeType":"YulFunctionCall","src":"43289:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43282:6:19"},"nodeType":"YulFunctionCall","src":"43282:43:19"},"nodeType":"YulIf","src":"43279:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43262:5:19","type":""}],"src":"43226:122:19"},{"body":{"nodeType":"YulBlock","src":"43396:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"43452:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43461:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43464:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43454:6:19"},"nodeType":"YulFunctionCall","src":"43454:12:19"},"nodeType":"YulExpressionStatement","src":"43454:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43419:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43443:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"43426:16:19"},"nodeType":"YulFunctionCall","src":"43426:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43416:2:19"},"nodeType":"YulFunctionCall","src":"43416:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43409:6:19"},"nodeType":"YulFunctionCall","src":"43409:42:19"},"nodeType":"YulIf","src":"43406:2:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43389:5:19","type":""}],"src":"43354:120:19"},{"body":{"nodeType":"YulBlock","src":"43521:77:19","statements":[{"body":{"nodeType":"YulBlock","src":"43576:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43585:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43588:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43578:6:19"},"nodeType":"YulFunctionCall","src":"43578:12:19"},"nodeType":"YulExpressionStatement","src":"43578:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43544:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43567:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"43551:15:19"},"nodeType":"YulFunctionCall","src":"43551:22:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43541:2:19"},"nodeType":"YulFunctionCall","src":"43541:33:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43534:6:19"},"nodeType":"YulFunctionCall","src":"43534:41:19"},"nodeType":"YulIf","src":"43531:2:19"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43514:5:19","type":""}],"src":"43480:118:19"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1243_memory_ptr_to_t_struct$_Checkpoint_$1243_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1243_memory_ptr__to_t_struct$_Checkpoint_$1243_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1243_memory_ptr_to_t_struct$_Checkpoint_$1243_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function store_literal_in_memory_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Snapshot: nonexistent id\")\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: block not yet mined\")\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function store_literal_in_memory_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 'v' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Snapshot: id is 0\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2897":[{"length":32,"start":7011}],"2899":[{"length":32,"start":6970}],"2901":[{"length":32,"start":6884}],"2903":[{"length":32,"start":7087}],"2905":[{"length":32,"start":7120}],"2907":[{"length":32,"start":7054}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101e55760003560e01c8063715018a61161010f5780639ab24eb0116100a2578063d505accf11610071578063d505accf146105de578063dd62ed3e146105fa578063f1127ed81461062a578063f2fde38b1461065a576101e5565b80639ab24eb014610532578063a457c2d714610562578063a9059cbb14610592578063c3cda520146105c2576101e5565b80638e539e8c116100de5780638e539e8c146104aa57806395d89b41146104da5780639711715a146104f8578063981b24d014610502576101e5565b8063715018a61461043657806379cc6790146104405780637ecebe001461045c5780638da5cb5b1461048c576101e5565b80633a46b1a811610187578063587cde1e11610156578063587cde1e1461038a5780635c19a95c146103ba5780636fcfff45146103d657806370a0823114610406576101e5565b80633a46b1a8146102f257806340c10f191461032257806342966c681461033e5780634ee2cd7e1461035a576101e5565b806323b872dd116101c357806323b872dd14610256578063313ce567146102865780633644e515146102a457806339509351146102c2576101e5565b806306fdde03146101ea578063095ea7b31461020857806318160ddd14610238575b600080fd5b6101f2610676565b6040516101ff9190613a21565b60405180910390f35b610222600480360381019061021d9190613289565b610708565b60405161022f91906138ad565b60405180910390f35b61024061072b565b60405161024d9190613d9e565b60405180910390f35b610270600480360381019061026b919061319c565b610735565b60405161027d91906138ad565b60405180910390f35b61028e610764565b60405161029b9190613dfd565b60405180910390f35b6102ac61076d565b6040516102b991906138c8565b60405180910390f35b6102dc60048036038101906102d79190613289565b61077c565b6040516102e991906138ad565b60405180910390f35b61030c60048036038101906103079190613289565b6107b3565b6040516103199190613d9e565b60405180910390f35b61033c60048036038101906103379190613289565b610847565b005b6103586004803603810190610353919061338a565b61085d565b005b610374600480360381019061036f9190613289565b610871565b6040516103819190613d9e565b60405180910390f35b6103a4600480360381019061039f9190613137565b6108e1565b6040516103b19190613892565b60405180910390f35b6103d460048036038101906103cf9190613137565b61094a565b005b6103f060048036038101906103eb9190613137565b61095e565b6040516103fd9190613de2565b60405180910390f35b610420600480360381019061041b9190613137565b6109b2565b60405161042d9190613d9e565b60405180910390f35b61043e6109fa565b005b61045a60048036038101906104559190613289565b610a0e565b005b61047660048036038101906104719190613137565b610a2e565b6040516104839190613d9e565b60405180910390f35b610494610a7e565b6040516104a19190613892565b60405180910390f35b6104c460048036038101906104bf919061338a565b610aa8565b6040516104d19190613d9e565b60405180910390f35b6104e2610afe565b6040516104ef9190613a21565b60405180910390f35b610500610b90565b005b61051c6004803603810190610517919061338a565b610ba3565b6040516105299190613d9e565b60405180910390f35b61054c60048036038101906105479190613137565b610bd4565b6040516105599190613d9e565b60405180910390f35b61057c60048036038101906105779190613289565b610d0b565b60405161058991906138ad565b60405180910390f35b6105ac60048036038101906105a79190613289565b610d82565b6040516105b991906138ad565b60405180910390f35b6105dc60048036038101906105d791906132c5565b610da5565b005b6105f860048036038101906105f391906131eb565b610ea9565b005b610614600480360381019061060f9190613160565b610feb565b6040516106219190613d9e565b60405180910390f35b610644600480360381019061063f919061334e565b611072565b6040516106519190613d83565b60405180910390f35b610674600480360381019061066f9190613137565b6111a8565b005b60606003805461068590613fc4565b80601f01602080910402602001604051908101604052809291908181526020018280546106b190613fc4565b80156106fe5780601f106106d3576101008083540402835291602001916106fe565b820191906000526020600020905b8154815290600101906020018083116106e157829003601f168201915b5050505050905090565b600080610713611600565b9050610720818585611608565b600191505092915050565b6000600254905090565b600080610740611600565b905061074d8582856117d3565b61075885858561185f565b60019150509392505050565b60006012905090565b6000610777611ae0565b905090565b600080610787611600565b90506107a88185856107998589610feb565b6107a39190613e3f565b611608565b600191505092915050565b60004382106107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90613aa3565b60405180910390fd5b61083f600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611bfa565b905092915050565b61084f611d52565b6108598282611dd0565b5050565b61086e610868611600565b82611dde565b50565b60008060006108be84600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611dec565b91509150816108d5576108d0856109b2565b6108d7565b805b9250505092915050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61095b610955611600565b82611f08565b50565b60006109ab600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061149a565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a02611d52565b610a0c6000612022565b565b610a2082610a1a611600565b836117d3565b610a2a8282611dde565b5050565b6000610a77600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115f2565b9050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000438210610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390613aa3565b60405180910390fd5b610af7600e83611bfa565b9050919050565b606060048054610b0d90613fc4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3990613fc4565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b5050505050905090565b610b98611d52565b610ba06120e8565b50565b6000806000610bb3846006611dec565b9150915081610bc957610bc461072b565b610bcb565b805b92505050919050565b600080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008114610ce257600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182610c709190613ec6565b81548110610ca7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610ce5565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600080610d16611600565b90506000610d248286610feb565b905083811015610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090613d43565b60405180910390fd5b610d768286868403611608565b60019250505092915050565b600080610d8d611600565b9050610d9a81858561185f565b600191505092915050565b83421115610de8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddf90613ac3565b60405180910390fd5b6000610e4a610e427fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610e279493929190613944565b6040516020818303038152906040528051906020012061213e565b858585612158565b9050610e5581612183565b8614610e96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8d90613b23565b60405180910390fd5b610ea08188611f08565b50505050505050565b83421115610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390613ba3565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f1b8c612183565b89604051602001610f31969594939291906138e3565b6040516020818303038152906040528051906020012090506000610f548261213e565b90506000610f6482878787612158565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcb90613c23565b60405180910390fd5b610fdf8a8a8a611608565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61107a613090565b600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff16815481106110f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6111b0611d52565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121790613b43565b60405180910390fd5b61122981612022565b50565b61123682826112b9565b61123e6121e1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661126461072b565b11156112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c90613c43565b60405180910390fd5b6112b3600e61141983612205565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132090613d63565b60405180910390fd5b611335600083836124ef565b80600260008282546113479190613e3f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461139c9190613e3f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114019190613d9e565b60405180910390a3611415600083836124ff565b5050565b600081836114279190613e3f565b905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990613c83565b60405180910390fd5b819050919050565b600063ffffffff80168211156114e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dc90613ce3565b60405180910390fd5b819050919050565b6114f88383836115d2565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611543576115368261250f565b61153e612562565b6115a2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158e576115818361250f565b611589612562565b6115a1565b6115978361250f565b6115a08261250f565b5b5b505050565b6115b28383836115d7565b6115cd6115be846108e1565b6115c7846108e1565b83612576565b505050565b505050565b505050565b600081836115ea9190613ec6565b905092915050565b600081600001549050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90613d03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116df90613b63565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516117c69190613d9e565b60405180910390a3505050565b60006117df8484610feb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611859578181101561184b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184290613b83565b60405180910390fd5b6118588484848403611608565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c690613cc3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561193f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193690613a83565b60405180910390fd5b61194a8383836124ef565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156119d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c790613bc3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a639190613e3f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611ac79190613d9e565b60405180910390a3611ada8484846124ff565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015611b5c57507f000000000000000000000000000000000000000000000000000000000000000046145b15611b89577f00000000000000000000000000000000000000000000000000000000000000009050611bf7565b611bf47f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061276f565b90505b90565b6000808380549050905060005b81811015611c9f576000611c1b82846127a9565b905084868281548110611c57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff161115611c8957809250611c99565b600181611c969190613e3f565b91505b50611c07565b60008214611d275784600183611cb59190613ec6565b81548110611cec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611d2a565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169250505092915050565b611d5a611600565b73ffffffffffffffffffffffffffffffffffffffff16611d78610a7e565b73ffffffffffffffffffffffffffffffffffffffff1614611dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc590613c63565b60405180910390fd5b565b611dda828261122c565b5050565b611de882826127cf565b5050565b60008060008411611e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2990613d23565b60405180910390fd5b611e3a6127ed565b841115611e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7390613a63565b60405180910390fd5b6000611e9485856000016127fe90919063ffffffff16565b90508360000180549050811415611eb2576000809250925050611f01565b6001846001018281548110611ef0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015492509250505b9250929050565b6000611f13836108e1565b90506000611f20846109b2565b905082600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461201c828483612576565b50505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006120f46008612924565b60006120fe6127ed565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb678160405161212f9190613d9e565b60405180910390a18091505090565b600061215161214b611ae0565b8361293a565b9050919050565b60008060006121698787878761296d565b9150915061217681612a7a565b8192505050949350505050565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506121d0816115f2565b91506121db81612924565b50919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6000806000858054905090506000811461229957856001826122279190613ec6565b8154811061225e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661229c565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692506122ca83858763ffffffff16565b9150600081118015612343575043866001836122e69190613ec6565b8154811061231d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16145b156123f6576123518261142f565b8660018361235f9190613ec6565b81548110612396577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602179055506124e6565b85604051806040016040528061240b4361149a565b63ffffffff16815260200161241f8561142f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b50935093915050565b6124fa8383836114ed565b505050565b61250a8383836115a7565b505050565b61255f600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061255a836109b2565b612dcb565b50565b612574600661256f61072b565b612dcb565b565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156125b25750600081115b1561276a57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461269057600080612639600d60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115dc85612205565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612685929190613db9565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461276957600080612712600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141985612205565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161275e929190613db9565b60405180910390a250505b5b505050565b6000838383463060405160200161278a959493929190613989565b6040516020818303038152906040528051906020012090509392505050565b600060028284186127ba9190613e95565b8284166127c79190613e3f565b905092915050565b6127d98282612e46565b6127e7600e6115dc83612205565b50505050565b60006127f960086115f2565b905090565b60008083805490501415612815576000905061291e565b600080848054905090505b8082101561289f57600061283483836127a9565b905084868281548110612870577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154111561288957809150612899565b6001816128969190613e3f565b92505b50612820565b6000821180156128fd575083856001846128b99190613ec6565b815481106128f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154145b156129185760018261290f9190613ec6565b9250505061291e565b81925050505b92915050565b6001816000016000828254019250508190555050565b6000828260405160200161294f92919061385b565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156129a8576000600391509150612a71565b601b8560ff16141580156129c05750601c8560ff1614155b156129d2576000600491509150612a71565b6000600187878787604051600081526020016040526040516129f794939291906139dc565b6020604051602081039080840390855afa158015612a19573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a6857600060019250925050612a71565b80600092509250505b94509492505050565b60006004811115612ab4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612af857612dc8565b60016004811115612b32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612b6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ba390613a43565b60405180910390fd5b60026004811115612be6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612c1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5790613b03565b60405180910390fd5b60036004811115612c9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612cd3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d0b90613be3565b60405180910390fd5b600480811115612d4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612d86577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dbe90613c03565b60405180910390fd5b5b50565b6000612dd56127ed565b905080612de48460000161301d565b1015612e415782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ead90613ca3565b60405180910390fd5b612ec2826000836124ef565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3f90613ae3565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254612f9f9190613ec6565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516130049190613d9e565b60405180910390a3613018836000846124ff565b505050565b60008082805490501415613034576000905061308b565b81600183805490506130469190613ec6565b8154811061307d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490505b919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b6000813590506130dd81614705565b92915050565b6000813590506130f28161471c565b92915050565b60008135905061310781614733565b92915050565b60008135905061311c8161474a565b92915050565b60008135905061313181614761565b92915050565b60006020828403121561314957600080fd5b6000613157848285016130ce565b91505092915050565b6000806040838503121561317357600080fd5b6000613181858286016130ce565b9250506020613192858286016130ce565b9150509250929050565b6000806000606084860312156131b157600080fd5b60006131bf868287016130ce565b93505060206131d0868287016130ce565b92505060406131e1868287016130f8565b9150509250925092565b600080600080600080600060e0888a03121561320657600080fd5b60006132148a828b016130ce565b97505060206132258a828b016130ce565b96505060406132368a828b016130f8565b95505060606132478a828b016130f8565b94505060806132588a828b01613122565b93505060a06132698a828b016130e3565b92505060c061327a8a828b016130e3565b91505092959891949750929550565b6000806040838503121561329c57600080fd5b60006132aa858286016130ce565b92505060206132bb858286016130f8565b9150509250929050565b60008060008060008060c087890312156132de57600080fd5b60006132ec89828a016130ce565b96505060206132fd89828a016130f8565b955050604061330e89828a016130f8565b945050606061331f89828a01613122565b935050608061333089828a016130e3565b92505060a061334189828a016130e3565b9150509295509295509295565b6000806040838503121561336157600080fd5b600061336f858286016130ce565b92505060206133808582860161310d565b9150509250929050565b60006020828403121561339c57600080fd5b60006133aa848285016130f8565b91505092915050565b6133bc81613efa565b82525050565b6133cb81613f0c565b82525050565b6133da81613f18565b82525050565b6133f16133ec82613f18565b613ff6565b82525050565b600061340282613e18565b61340c8185613e23565b935061341c818560208601613f91565b6134258161408d565b840191505092915050565b600061343d601883613e23565b91506134488261409e565b602082019050919050565b6000613460601d83613e23565b915061346b826140c7565b602082019050919050565b6000613483602383613e23565b915061348e826140f0565b604082019050919050565b60006134a6601f83613e23565b91506134b18261413f565b602082019050919050565b60006134c9601d83613e23565b91506134d482614168565b602082019050919050565b60006134ec602283613e23565b91506134f782614191565b604082019050919050565b600061350f601f83613e23565b915061351a826141e0565b602082019050919050565b6000613532601983613e23565b915061353d82614209565b602082019050919050565b6000613555602683613e23565b915061356082614232565b604082019050919050565b6000613578602283613e23565b915061358382614281565b604082019050919050565b600061359b600283613e34565b91506135a6826142d0565b600282019050919050565b60006135be601d83613e23565b91506135c9826142f9565b602082019050919050565b60006135e1601d83613e23565b91506135ec82614322565b602082019050919050565b6000613604602683613e23565b915061360f8261434b565b604082019050919050565b6000613627602283613e23565b91506136328261439a565b604082019050919050565b600061364a602283613e23565b9150613655826143e9565b604082019050919050565b600061366d601e83613e23565b915061367882614438565b602082019050919050565b6000613690603083613e23565b915061369b82614461565b604082019050919050565b60006136b3602083613e23565b91506136be826144b0565b602082019050919050565b60006136d6602783613e23565b91506136e1826144d9565b604082019050919050565b60006136f9602183613e23565b915061370482614528565b604082019050919050565b600061371c602583613e23565b915061372782614577565b604082019050919050565b600061373f602683613e23565b915061374a826145c6565b604082019050919050565b6000613762602483613e23565b915061376d82614615565b604082019050919050565b6000613785601683613e23565b915061379082614664565b602082019050919050565b60006137a8602583613e23565b91506137b38261468d565b604082019050919050565b60006137cb601f83613e23565b91506137d6826146dc565b602082019050919050565b6040820160008201516137f7600085018261382e565b50602082015161380a6020850182613810565b50505050565b61381981613f42565b82525050565b61382881613f6a565b82525050565b61383781613f74565b82525050565b61384681613f74565b82525050565b61385581613f84565b82525050565b60006138668261358e565b915061387282856133e0565b60208201915061388282846133e0565b6020820191508190509392505050565b60006020820190506138a760008301846133b3565b92915050565b60006020820190506138c260008301846133c2565b92915050565b60006020820190506138dd60008301846133d1565b92915050565b600060c0820190506138f860008301896133d1565b61390560208301886133b3565b61391260408301876133b3565b61391f606083018661381f565b61392c608083018561381f565b61393960a083018461381f565b979650505050505050565b600060808201905061395960008301876133d1565b61396660208301866133b3565b613973604083018561381f565b613980606083018461381f565b95945050505050565b600060a08201905061399e60008301886133d1565b6139ab60208301876133d1565b6139b860408301866133d1565b6139c5606083018561381f565b6139d260808301846133b3565b9695505050505050565b60006080820190506139f160008301876133d1565b6139fe602083018661384c565b613a0b60408301856133d1565b613a1860608301846133d1565b95945050505050565b60006020820190508181036000830152613a3b81846133f7565b905092915050565b60006020820190508181036000830152613a5c81613430565b9050919050565b60006020820190508181036000830152613a7c81613453565b9050919050565b60006020820190508181036000830152613a9c81613476565b9050919050565b60006020820190508181036000830152613abc81613499565b9050919050565b60006020820190508181036000830152613adc816134bc565b9050919050565b60006020820190508181036000830152613afc816134df565b9050919050565b60006020820190508181036000830152613b1c81613502565b9050919050565b60006020820190508181036000830152613b3c81613525565b9050919050565b60006020820190508181036000830152613b5c81613548565b9050919050565b60006020820190508181036000830152613b7c8161356b565b9050919050565b60006020820190508181036000830152613b9c816135b1565b9050919050565b60006020820190508181036000830152613bbc816135d4565b9050919050565b60006020820190508181036000830152613bdc816135f7565b9050919050565b60006020820190508181036000830152613bfc8161361a565b9050919050565b60006020820190508181036000830152613c1c8161363d565b9050919050565b60006020820190508181036000830152613c3c81613660565b9050919050565b60006020820190508181036000830152613c5c81613683565b9050919050565b60006020820190508181036000830152613c7c816136a6565b9050919050565b60006020820190508181036000830152613c9c816136c9565b9050919050565b60006020820190508181036000830152613cbc816136ec565b9050919050565b60006020820190508181036000830152613cdc8161370f565b9050919050565b60006020820190508181036000830152613cfc81613732565b9050919050565b60006020820190508181036000830152613d1c81613755565b9050919050565b60006020820190508181036000830152613d3c81613778565b9050919050565b60006020820190508181036000830152613d5c8161379b565b9050919050565b60006020820190508181036000830152613d7c816137be565b9050919050565b6000604082019050613d9860008301846137e1565b92915050565b6000602082019050613db3600083018461381f565b92915050565b6000604082019050613dce600083018561381f565b613ddb602083018461381f565b9392505050565b6000602082019050613df7600083018461383d565b92915050565b6000602082019050613e12600083018461384c565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000613e4a82613f6a565b9150613e5583613f6a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613e8a57613e89614000565b5b828201905092915050565b6000613ea082613f6a565b9150613eab83613f6a565b925082613ebb57613eba61402f565b5b828204905092915050565b6000613ed182613f6a565b9150613edc83613f6a565b925082821015613eef57613eee614000565b5b828203905092915050565b6000613f0582613f22565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60005b83811015613faf578082015181840152602081019050613f94565b83811115613fbe576000848401525b50505050565b60006002820490506001821680613fdc57607f821691505b60208210811415613ff057613fef61405e565b5b50919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000600082015250565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433230536e617073686f743a206964206973203000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61470e81613efa565b811461471957600080fd5b50565b61472581613f18565b811461473057600080fd5b50565b61473c81613f6a565b811461474757600080fd5b50565b61475381613f74565b811461475e57600080fd5b50565b61476a81613f84565b811461477557600080fd5b5056fea2646970667358221220d88242ed785019141df7c049f40d8afe656ecddab11734d9a60a2c1579fe80e664736f6c63430008020033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x65A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8E539E8C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x502 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x406 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x35A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x3DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x38C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH2 0xB90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x38AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x32C5 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x31EB JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x614 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x3160 JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x334E JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x3137 JUMP JUMPDEST PUSH2 0x11A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x685 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x713 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x720 DUP2 DUP6 DUP6 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x740 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x74D DUP6 DUP3 DUP6 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x758 DUP6 DUP6 DUP6 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 PUSH2 0x1AE0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x787 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 DUP2 DUP6 DUP6 PUSH2 0x799 DUP6 DUP10 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EE SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83F PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x84F PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x859 DUP3 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86E PUSH2 0x868 PUSH2 0x1600 JUMP JUMPDEST DUP3 PUSH2 0x1DDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8BE DUP5 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x8D5 JUMPI PUSH2 0x8D0 DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B PUSH2 0x955 PUSH2 0x1600 JUMP JUMPDEST DUP3 PUSH2 0x1F08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AB PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x149A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA02 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x0 PUSH2 0x2022 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA20 DUP3 PUSH2 0xA1A PUSH2 0x1600 JUMP JUMPDEST DUP4 PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0xA2A DUP3 DUP3 PUSH2 0x1DDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA77 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF7 PUSH1 0xE DUP4 PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB0D SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x3FC4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB86 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB86 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB69 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0x20E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xBB3 DUP5 PUSH1 0x6 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBC9 JUMPI PUSH2 0xBC4 PUSH2 0x72B JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST DUP1 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xCE2 JUMPI PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD16 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD24 DUP3 DUP7 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x3D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD76 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD8D PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH2 0xD9A DUP2 DUP6 DUP6 PUSH2 0x185F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDF SWAP1 PUSH2 0x3AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE4A PUSH2 0xE42 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE27 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x213E JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP PUSH2 0xE55 DUP2 PUSH2 0x2183 JUMP JUMPDEST DUP7 EQ PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP1 PUSH2 0x3B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA0 DUP2 DUP9 PUSH2 0x1F08 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE3 SWAP1 PUSH2 0x3BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF1B DUP13 PUSH2 0x2183 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF31 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xF54 DUP3 PUSH2 0x213E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF64 DUP3 DUP8 DUP8 DUP8 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCB SWAP1 PUSH2 0x3C23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDF DUP11 DUP11 DUP11 PUSH2 0x1608 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107A PUSH2 0x3090 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1217 SWAP1 PUSH2 0x3B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1229 DUP2 PUSH2 0x2022 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1236 DUP3 DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x123E PUSH2 0x21E1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1264 PUSH2 0x72B JUMP JUMPDEST GT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x3C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B3 PUSH1 0xE PUSH2 0x1419 DUP4 PUSH2 0x2205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x3D63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1335 PUSH1 0x0 DUP4 DUP4 PUSH2 0x24EF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139C SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1401 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1415 PUSH1 0x0 DUP4 DUP4 PUSH2 0x24FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DC SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F8 DUP4 DUP4 DUP4 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1536 DUP3 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x153E PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x158E JUMPI PUSH2 0x1581 DUP4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1597 DUP4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x15A0 DUP3 PUSH2 0x250F JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15B2 DUP4 DUP4 DUP4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x15CD PUSH2 0x15BE DUP5 PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x15C7 DUP5 PUSH2 0x8E1 JUMP JUMPDEST DUP4 PUSH2 0x2576 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP1 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP1 PUSH2 0x3B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP5 DUP5 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1859 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x184B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1842 SWAP1 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1858 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1608 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C6 SWAP1 PUSH2 0x3CC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1936 SWAP1 PUSH2 0x3A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x194A DUP4 DUP4 DUP4 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C7 SWAP1 PUSH2 0x3BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AC7 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1ADA DUP5 DUP5 DUP5 PUSH2 0x24FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B5C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1B89 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x1BF4 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 PUSH2 0x1C1B DUP3 DUP5 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C57 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C89 JUMPI DUP1 SWAP3 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1C96 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1D27 JUMPI DUP5 PUSH1 0x1 DUP4 PUSH2 0x1CB5 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CEC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x1600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D78 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC5 SWAP1 PUSH2 0x3C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1DDA DUP3 DUP3 PUSH2 0x122C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DE8 DUP3 DUP3 PUSH2 0x27CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E29 SWAP1 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E3A PUSH2 0x27ED JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x1E7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E73 SWAP1 PUSH2 0x3A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E94 DUP6 DUP6 PUSH1 0x0 ADD PUSH2 0x27FE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 EQ ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EF0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F13 DUP4 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F20 DUP5 PUSH2 0x9B2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x201C DUP3 DUP5 DUP4 PUSH2 0x2576 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x8 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE PUSH2 0x27ED JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212F SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2151 PUSH2 0x214B PUSH2 0x1AE0 JUMP JUMPDEST DUP4 PUSH2 0x293A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2169 DUP8 DUP8 DUP8 DUP8 PUSH2 0x296D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2176 DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x21D0 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21DB DUP2 PUSH2 0x2924 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2299 JUMPI DUP6 PUSH1 0x1 DUP3 PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x225E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x22CA DUP4 DUP6 DUP8 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x2343 JUMPI POP NUMBER DUP7 PUSH1 0x1 DUP4 PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x231D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x2351 DUP3 PUSH2 0x142F JUMP JUMPDEST DUP7 PUSH1 0x1 DUP4 PUSH2 0x235F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2396 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x24E6 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x240B NUMBER PUSH2 0x149A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x241F DUP6 PUSH2 0x142F JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FA DUP4 DUP4 DUP4 PUSH2 0x14ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x250A DUP4 DUP4 DUP4 PUSH2 0x15A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x255F PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x255A DUP4 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x2DCB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2574 PUSH1 0x6 PUSH2 0x256F PUSH2 0x72B JUMP JUMPDEST PUSH2 0x2DCB JUMP JUMPDEST JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25B2 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x276A JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2690 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2639 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x15DC DUP6 PUSH2 0x2205 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2685 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2769 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2712 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1419 DUP6 PUSH2 0x2205 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x275E SWAP3 SWAP2 SWAP1 PUSH2 0x3DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x278A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x27BA SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x27C7 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27D9 DUP3 DUP3 PUSH2 0x2E46 JUMP JUMPDEST PUSH2 0x27E7 PUSH1 0xE PUSH2 0x15DC DUP4 PUSH2 0x2205 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F9 PUSH1 0x8 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x2815 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x291E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP1 SLOAD SWAP1 POP SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 PUSH2 0x2834 DUP4 DUP4 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2870 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD GT ISZERO PUSH2 0x2889 JUMPI DUP1 SWAP2 POP PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2896 SWAP2 SWAP1 PUSH2 0x3E3F JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x28FD JUMPI POP DUP4 DUP6 PUSH1 0x1 DUP5 PUSH2 0x28B9 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2918 JUMPI PUSH1 0x1 DUP3 PUSH2 0x290F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x291E JUMP JUMPDEST DUP2 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x294F SWAP3 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x29A8 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29C0 JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x29D2 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x2A71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x29F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x2A71 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2AF8 JUMPI PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2B6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BA3 SWAP1 PUSH2 0x3A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2BE6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2C60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C57 SWAP1 PUSH2 0x3B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C9A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2CD3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0B SWAP1 PUSH2 0x3BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x2D4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D86 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2DC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DBE SWAP1 PUSH2 0x3C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD5 PUSH2 0x27ED JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2DE4 DUP5 PUSH1 0x0 ADD PUSH2 0x301D JUMP JUMPDEST LT ISZERO PUSH2 0x2E41 JUMPI DUP3 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EAD SWAP1 PUSH2 0x3CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2F48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3F SWAP1 PUSH2 0x3AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F9F SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3004 SWAP2 SWAP1 PUSH2 0x3D9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3018 DUP4 PUSH1 0x0 DUP5 PUSH2 0x24FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x3034 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x308B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x3046 SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x307D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30DD DUP2 PUSH2 0x4705 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F2 DUP2 PUSH2 0x471C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3107 DUP2 PUSH2 0x4733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x311C DUP2 PUSH2 0x474A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3131 DUP2 PUSH2 0x4761 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3157 DUP5 DUP3 DUP6 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3181 DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3192 DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31BF DUP7 DUP3 DUP8 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31D0 DUP7 DUP3 DUP8 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31E1 DUP7 DUP3 DUP8 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3214 DUP11 DUP3 DUP12 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x3225 DUP11 DUP3 DUP12 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3236 DUP11 DUP3 DUP12 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3247 DUP11 DUP3 DUP12 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3258 DUP11 DUP3 DUP12 ADD PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3269 DUP11 DUP3 DUP12 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x327A DUP11 DUP3 DUP12 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x329C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32BB DUP6 DUP3 DUP7 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32EC DUP10 DUP3 DUP11 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x32FD DUP10 DUP3 DUP11 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x330E DUP10 DUP3 DUP11 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x331F DUP10 DUP3 DUP11 ADD PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3330 DUP10 DUP3 DUP11 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3341 DUP10 DUP3 DUP11 ADD PUSH2 0x30E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x336F DUP6 DUP3 DUP7 ADD PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3380 DUP6 DUP3 DUP7 ADD PUSH2 0x310D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x339C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33AA DUP5 DUP3 DUP6 ADD PUSH2 0x30F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33BC DUP2 PUSH2 0x3EFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33CB DUP2 PUSH2 0x3F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33DA DUP2 PUSH2 0x3F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x33F1 PUSH2 0x33EC DUP3 PUSH2 0x3F18 JUMP JUMPDEST PUSH2 0x3FF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3402 DUP3 PUSH2 0x3E18 JUMP JUMPDEST PUSH2 0x340C DUP2 DUP6 PUSH2 0x3E23 JUMP JUMPDEST SWAP4 POP PUSH2 0x341C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F91 JUMP JUMPDEST PUSH2 0x3425 DUP2 PUSH2 0x408D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343D PUSH1 0x18 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3448 DUP3 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3460 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x346B DUP3 PUSH2 0x40C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3483 PUSH1 0x23 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x348E DUP3 PUSH2 0x40F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A6 PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34B1 DUP3 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C9 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D4 DUP3 PUSH2 0x4168 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EC PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F7 DUP3 PUSH2 0x4191 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x350F PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x351A DUP3 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3532 PUSH1 0x19 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x353D DUP3 PUSH2 0x4209 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3555 PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3560 DUP3 PUSH2 0x4232 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x4281 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359B PUSH1 0x2 DUP4 PUSH2 0x3E34 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A6 DUP3 PUSH2 0x42D0 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BE PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x35C9 DUP3 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x1D DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EC DUP3 PUSH2 0x4322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3604 PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x360F DUP3 PUSH2 0x434B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3627 PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3632 DUP3 PUSH2 0x439A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364A PUSH1 0x22 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3655 DUP3 PUSH2 0x43E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x366D PUSH1 0x1E DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3678 DUP3 PUSH2 0x4438 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3690 PUSH1 0x30 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x369B DUP3 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B3 PUSH1 0x20 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x36BE DUP3 PUSH2 0x44B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 PUSH1 0x27 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x36E1 DUP3 PUSH2 0x44D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F9 PUSH1 0x21 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3704 DUP3 PUSH2 0x4528 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371C PUSH1 0x25 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3727 DUP3 PUSH2 0x4577 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x373F PUSH1 0x26 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x374A DUP3 PUSH2 0x45C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3762 PUSH1 0x24 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x376D DUP3 PUSH2 0x4615 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3785 PUSH1 0x16 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3790 DUP3 PUSH2 0x4664 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A8 PUSH1 0x25 DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B3 DUP3 PUSH2 0x468D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37CB PUSH1 0x1F DUP4 PUSH2 0x3E23 JUMP JUMPDEST SWAP2 POP PUSH2 0x37D6 DUP3 PUSH2 0x46DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37F7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x382E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x380A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3810 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3819 DUP2 PUSH2 0x3F42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3828 DUP2 PUSH2 0x3F6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3837 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3846 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3855 DUP2 PUSH2 0x3F84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 DUP3 PUSH2 0x358E JUMP JUMPDEST SWAP2 POP PUSH2 0x3872 DUP3 DUP6 PUSH2 0x33E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3882 DUP3 DUP5 PUSH2 0x33E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x38F8 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3905 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x3912 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x391F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x392C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3939 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3959 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3966 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x33B3 JUMP JUMPDEST PUSH2 0x3973 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3980 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x399E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39AB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39B8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39C5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x39D2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x33B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x39FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x384C JUMP JUMPDEST PUSH2 0x3A0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33D1 JUMP JUMPDEST PUSH2 0x3A18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3B DUP2 DUP5 PUSH2 0x33F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5C DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A7C DUP2 PUSH2 0x3453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9C DUP2 PUSH2 0x3476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ABC DUP2 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADC DUP2 PUSH2 0x34BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AFC DUP2 PUSH2 0x34DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1C DUP2 PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3C DUP2 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B5C DUP2 PUSH2 0x3548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B7C DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B9C DUP2 PUSH2 0x35B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBC DUP2 PUSH2 0x35D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BDC DUP2 PUSH2 0x35F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BFC DUP2 PUSH2 0x361A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C1C DUP2 PUSH2 0x363D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3C DUP2 PUSH2 0x3660 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C5C DUP2 PUSH2 0x3683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C7C DUP2 PUSH2 0x36A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C9C DUP2 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CBC DUP2 PUSH2 0x36EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CDC DUP2 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFC DUP2 PUSH2 0x3732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D1C DUP2 PUSH2 0x3755 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3C DUP2 PUSH2 0x3778 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D5C DUP2 PUSH2 0x379B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7C DUP2 PUSH2 0x37BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DCE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3DDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x381F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x383D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4A DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E55 DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3E8A JUMPI PUSH2 0x3E89 PUSH2 0x4000 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAB DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x402F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED1 DUP3 PUSH2 0x3F6A JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDC DUP4 PUSH2 0x3F6A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3EEF JUMPI PUSH2 0x3EEE PUSH2 0x4000 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F05 DUP3 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3FAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F94 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3FBE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3FDC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3FF0 JUMPI PUSH2 0x3FEF PUSH2 0x405E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206E6F6E6578697374656E74206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433230536E617073686F743A206964206973203000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x470E DUP2 PUSH2 0x3EFA JUMP JUMPDEST DUP2 EQ PUSH2 0x4719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4725 DUP2 PUSH2 0x3F18 JUMP JUMPDEST DUP2 EQ PUSH2 0x4730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x473C DUP2 PUSH2 0x3F6A JUMP JUMPDEST DUP2 EQ PUSH2 0x4747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4753 DUP2 PUSH2 0x3F74 JUMP JUMPDEST DUP2 EQ PUSH2 0x475E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x476A DUP2 PUSH2 0x3F84 JUMP JUMPDEST DUP2 EQ PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP3 TIMESTAMP 0xED PUSH25 0x5019141DF7C049F40D8AFE656ECDDAB11734D9A60A2C1579FE DUP1 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ","sourceMap":"1137:1202:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2885:113:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2825:265:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1461:93:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4998:262:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2218:126:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5248:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;973:161:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2635:126:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3369:256:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1390:65:18;;;:::i;:::-;;5359:230:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2423:209:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5437:574:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1948:626:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3976:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:148:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;2885:113:8:-;2945:7;2971:20;:18;:20::i;:::-;2964:27;;2885:113;:::o;5873:234:2:-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;2825:265:6:-;2923:7;2964:12;2950:11;:26;2942:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3029:54;3048:12;:21;3061:7;3048:21;;;;;;;;;;;;;;;3071:11;3029:18;:54::i;:::-;3022:61;;2825:265;;;;:::o;1461:93:18:-;1094:13:0;:11;:13::i;:::-;1530:17:18::1;1536:2;1540:6;1530:5;:17::i;:::-;1461:93:::0;;:::o;578:89:4:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;4998:262:5:-;5085:7;5105:16;5123:13;5140:55;5149:10;5161:24;:33;5186:7;5161:33;;;;;;;;;;;;;;;5140:8;:55::i;:::-;5104:91;;;;5213:11;:40;;5235:18;5245:7;5235:9;:18::i;:::-;5213:40;;;5227:5;5213:40;5206:47;;;;4998:262;;;;:::o;2218:126:6:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;5248:112::-;5319:34;5329:12;:10;:12::i;:::-;5343:9;5319;:34::i;:::-;5248:112;:::o;1981:149::-;2051:6;2076:47;2094:12;:21;2107:7;2094:21;;;;;;;;;;;;;;;:28;;;;2076:17;:47::i;:::-;2069:54;;1981:149;;;:::o;3408:125:2:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:4:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2635:126:8:-;2704:7;2730:24;:7;:14;2738:5;2730:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2723:31;;2635:126;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3369:256:6:-;3456:7;3497:12;3483:11;:26;3475:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3562:56;3581:23;3606:11;3562:18;:56::i;:::-;3555:63;;3369:256;;;:::o;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;1390:65:18:-;1094:13:0;:11;:13::i;:::-;1437:11:18::1;:9;:11::i;:::-;;1390:65::o:0;5359:230:5:-;5431:7;5451:16;5469:13;5486:43;5495:10;5507:21;5486:8;:43::i;:::-;5450:79;;;;5547:11;:35;;5569:13;:11;:13::i;:::-;5547:35;;;5561:5;5547:35;5540:42;;;;5359:230;;;:::o;2423:209:6:-;2496:7;2515:11;2529:12;:21;2542:7;2529:21;;;;;;;;;;;;;;;:28;;;;2515:42;;2581:1;2574:3;:8;:51;;2589:12;:21;2602:7;2589:21;;;;;;;;;;;;;;;2617:1;2611:3;:7;;;;:::i;:::-;2589:30;;;;;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;2574:51;;;2585:1;2574:51;2567:58;;;;;2423:209;;;:::o;6594:427:2:-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;5437:574:6:-;5656:6;5637:15;:25;;5629:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5706:14;5723:169;5750:87;1447:71;5810:9;5821:5;5828:6;5777:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5767:69;;;;;;5750:16;:87::i;:::-;5851:1;5866;5881;5723:13;:169::i;:::-;5706:186;;5919:17;5929:6;5919:9;:17::i;:::-;5910:5;:26;5902:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5976:28;5986:6;5994:9;5976;:28::i;:::-;5437:574;;;;;;;:::o;1948:626:8:-;2183:8;2164:15;:27;;2156:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2236:18;1143:95;2296:5;2303:7;2312:5;2319:16;2329:5;2319:9;:16::i;:::-;2337:8;2267:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2257:90;;;;;;2236:111;;2358:12;2373:28;2390:10;2373:16;:28::i;:::-;2358:43;;2412:14;2429:28;2443:4;2449:1;2452;2455;2429:13;:28::i;:::-;2412:45;;2485:5;2475:15;;:6;:15;;;2467:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2536:31;2545:5;2552:7;2561:5;2536:8;:31::i;:::-;1948:626;;;;;;;;;;:::o;3976:149:2:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;1758:148:6:-;1837:17;;:::i;:::-;1873:12;:21;1886:7;1873:21;;;;;;;;;;;;;;;1895:3;1873:26;;;;;;;;;;;;;;;;;;;;;;;;;1866:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:148;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6305:285:6:-;6389:28;6401:7;6410:6;6389:11;:28::i;:::-;6452:12;:10;:12::i;:::-;6435:29;;:13;:11;:13::i;:::-;:29;;6427:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6528:55;6545:23;6570:4;6576:6;6528:16;:55::i;:::-;;;6305:285;;:::o;8402:389:2:-;8504:1;8485:21;;:7;:21;;;;8477:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;;;;;8667:6;8645:9;:18;8655:7;8645:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8709:7;8688:37;;8705:1;8688:37;;;8718:6;8688:37;;;;;;:::i;:::-;;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;:::-;8402:389;;:::o;9069:96:6:-;9127:7;9157:1;9153;:5;;;;:::i;:::-;9146:12;;9069:96;;;;:::o;2751:192:17:-;2808:7;2844:17;2835:26;;:5;:26;;2827:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2930:5;2915:21;;2751:192;;;:::o;15179:187::-;15235:6;15270:16;15261:25;;:5;:25;;15253:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15353:5;15339:20;;15179:187;;;:::o;5802:602:5:-;5940:44;5967:4;5973:2;5977:6;5940:26;:44::i;:::-;6015:1;5999:18;;:4;:18;;;5995:403;;;6053:26;6076:2;6053:22;:26::i;:::-;6093:28;:26;:28::i;:::-;5995:403;;;6156:1;6142:16;;:2;:16;;;6138:260;;;6194:28;6217:4;6194:22;:28::i;:::-;6236;:26;:28::i;:::-;6138:260;;;6319:28;6342:4;6319:22;:28::i;:::-;6361:26;6384:2;6361:22;:26::i;:::-;6138:260;5995:403;5802:602;;;:::o;7002:254:6:-;7139:43;7165:4;7171:2;7175:6;7139:25;:43::i;:::-;7193:56;7210:15;7220:4;7210:9;:15::i;:::-;7227:13;7237:2;7227:9;:13::i;:::-;7242:6;7193:16;:56::i;:::-;7002:254;;;:::o;11786:121:2:-;;;;:::o;12495:120::-;;;;:::o;9171:101:6:-;9234:7;9264:1;9260;:5;;;;:::i;:::-;9253:12;;9171:101;;;;:::o;827:112:12:-;892:7;918;:14;;;911:21;;827:112;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;10110:370:2:-;10258:1;10241:19;;:5;:19;;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10761:441;;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7475:651;;;;:::o;3143:308:15:-;3196:7;3236:12;3219:29;;3227:4;3219:29;;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;3308:24;3301:31;;;;3215:230;3370:64;3392:10;3404:12;3418:15;3370:21;:64::i;:::-;3363:71;;3143:308;;:::o;3709:1458:6:-;3808:7;4815:12;4830:5;:12;;;;4815:27;;4852:11;4877:229;4890:4;4884:3;:10;4877:229;;;4910:11;4924:23;4937:3;4942:4;4924:12;:23::i;:::-;4910:37;;4988:11;4965:5;4971:3;4965:10;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:34;;;4961:135;;;5026:3;5019:10;;4961:135;;;5080:1;5074:3;:7;;;;:::i;:::-;5068:13;;4961:135;4877:229;;;;5131:1;5123:4;:9;:37;;5139:5;5152:1;5145:4;:8;;;;:::i;:::-;5139:15;;;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;5123:37;;;5135:1;5123:37;5116:44;;;;;;3709:1458;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2041:140:18:-;2151:23;2163:2;2167:6;2151:11;:23::i;:::-;2041:140;;:::o;2187:150::-;2302:28;2314:7;2323:6;2302:11;:28::i;:::-;2187:150;;:::o;6410:1594:5:-;6499:4;6505:7;6545:1;6532:10;:14;6524:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;6605:23;:21;:23::i;:::-;6591:10;:37;;6583:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;7785:13;7801:40;7830:10;7801:9;:13;;:28;;:40;;;;:::i;:::-;7785:56;;7865:9;:13;;:20;;;;7856:5;:29;7852:146;;;7909:5;7916:1;7901:17;;;;;;;7852:146;7957:4;7963:9;:16;;7980:5;7963:23;;;;;;;;;;;;;;;;;;;;;;;;7949:38;;;;;6410:1594;;;;;;:::o;7413:380:6:-;7497:23;7523:20;7533:9;7523;:20::i;:::-;7497:46;;7553:24;7580:20;7590:9;7580;:20::i;:::-;7553:47;;7634:9;7610:10;:21;7621:9;7610:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;7703:9;7659:54;;7686:15;7659:54;;7675:9;7659:54;;;;;;;;;;;;7724:62;7741:15;7758:9;7769:16;7724;:62::i;:::-;7413:380;;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;4488:217:5:-;4535:7;4554:30;:18;:28;:30::i;:::-;4595:17;4615:23;:21;:23::i;:::-;4595:43;;4653:19;4662:9;4653:19;;;;;;:::i;:::-;;;;;;;;4689:9;4682:16;;;4488:217;:::o;4339:165:15:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;4442:21;:55::i;:::-;4435:62;;4339:165;;;:::o;6903:270:14:-;7026:7;7046:17;7065:18;7087:25;7098:4;7104:1;7107;7110;7087:10;:25::i;:::-;7045:67;;;;7122:18;7134:5;7122:11;:18::i;:::-;7157:9;7150:16;;;;6903:270;;;;;;:::o;3129:203:8:-;3189:15;3216:30;3249:7;:14;3257:5;3249:14;;;;;;;;;;;;;;;3216:47;;3283:15;:5;:13;:15::i;:::-;3273:25;;3308:17;:5;:15;:17::i;:::-;3129:203;;;;:::o;6113:103:6:-;6166:7;6192:17;6185:24;;6113:103;:::o;8432:631::-;8602:17;8621;8650:11;8664:5;:12;;;;8650:26;;8705:1;8698:3;:8;:35;;8713:5;8725:1;8719:3;:7;;;;:::i;:::-;8713:14;;;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;8698:35;;;8709:1;8698:35;8686:47;;;;8755:20;8758:9;8769:5;8755:2;:20;;:::i;:::-;8743:32;;8796:1;8790:3;:7;:51;;;;;8829:12;8801:5;8813:1;8807:3;:7;;;;:::i;:::-;8801:14;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:40;;;8790:51;8786:271;;;8880:29;8899:9;8880:18;:29::i;:::-;8857:5;8869:1;8863:3;:7;;;;:::i;:::-;8857:14;;;;;;;;;;;;;;;;;;;;;;;:20;;;:52;;;;;;;;;;;;;;;;;;8786:271;;;8940:5;8951:94;;;;;;;;8974:31;8992:12;8974:17;:31::i;:::-;8951:94;;;;;;9014:29;9033:9;9014:18;:29::i;:::-;8951:94;;;;;8940:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8786:271;8432:631;;;;;;;:::o;1628:203:18:-;1780:44;1807:4;1813:2;1817:6;1780:26;:44::i;:::-;1628:203;;;:::o;1837:198::-;1985:43;2011:4;2017:2;2021:6;1985:25;:43::i;:::-;1837:198;;;:::o;8010:144:5:-;8077:70;8093:24;:33;8118:7;8093:33;;;;;;;;;;;;;;;8128:18;8138:7;8128:9;:18::i;:::-;8077:15;:70::i;:::-;8010:144;:::o;8160:116::-;8216:53;8232:21;8255:13;:11;:13::i;:::-;8216:15;:53::i;:::-;8160:116::o;7799:627:6:-;7926:3;7919:10;;:3;:10;;;;:24;;;;;7942:1;7933:6;:10;7919:24;7915:505;;;7978:1;7963:17;;:3;:17;;;7959:221;;8001:17;8020;8041:54;8058:12;:17;8071:3;8058:17;;;;;;;;;;;;;;;8077:9;8088:6;8041:16;:54::i;:::-;8000:95;;;;8139:3;8118:47;;;8144:9;8155;8118:47;;;;;;;:::i;:::-;;;;;;;;7959:221;;;8213:1;8198:17;;:3;:17;;;8194:216;;8236:17;8255;8276:49;8293:12;:17;8306:3;8293:17;;;;;;;;;;;;;;;8312:4;8318:6;8276:16;:49::i;:::-;8235:90;;;;8369:3;8348:47;;;8374:9;8385;8348:47;;;;;;;:::i;:::-;;;;;;;;8194:216;;;7915:505;7799:627;;;:::o;3457:257:15:-;3597:7;3644:8;3654;3664:11;3677:13;3700:4;3633:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;:::o;806:153:16:-;868:7;951:1;946;942;:5;941:11;;;;:::i;:::-;936:1;932;:5;931:21;;;;:::i;:::-;924:28;;806:153;;;;:::o;6679:190:6:-;6763:28;6775:7;6784:6;6763:11;:28::i;:::-;6802:60;6819:23;6844:9;6855:6;6802:16;:60::i;:::-;;;6679:190;;:::o;4766:125:5:-;4830:7;4856:28;:18;:26;:28::i;:::-;4849:35;;4766:125;:::o;634:892:10:-;723:7;762:1;746:5;:12;;;;:17;742:56;;;786:1;779:8;;;;742:56;808:11;833:12;848:5;:12;;;;833:27;;871:414;884:4;878:3;:10;871:414;;;904:11;918:23;931:3;936:4;918:12;:23::i;:::-;904:37;;1171:7;1158:5;1164:3;1158:10;;;;;;;;;;;;;;;;;;;;;;;;:20;1154:121;;;1205:3;1198:10;;1154:121;;;1259:1;1253:3;:7;;;;:::i;:::-;1247:13;;1154:121;871:414;;;;1408:1;1402:3;:7;:36;;;;;1431:7;1413:5;1425:1;1419:3;:7;;;;:::i;:::-;1413:14;;;;;;;;;;;;;;;;;;;;;;;;:25;1402:36;1398:122;;;1467:1;1461:3;:7;;;;:::i;:::-;1454:14;;;;;;1398:122;1506:3;1499:10;;;;634:892;;;;;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8548:194:14:-;8641:7;8706:15;8723:10;8677:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;:::o;5167:1603::-;5293:7;5302:12;6217:66;6212:1;6204:10;;:79;6200:161;;;6315:1;6319:30;6299:51;;;;;;6200:161;6379:2;6374:1;:7;;;;:18;;;;;6390:2;6385:1;:7;;;;6374:18;6370:100;;;6424:1;6428:30;6408:51;;;;;;6370:100;6564:14;6581:24;6591:4;6597:1;6600;6603;6581:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6564:41;;6637:1;6619:20;;:6;:20;;;6615:101;;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;6742:20;6726:37;;;;;5167:1603;;;;;;;;:::o;548:631::-;625:20;616:29;;;;;;;;;;;;;;;;:5;:29;;;;;;;;;;;;;;;;;612:561;;;661:7;;612:561;721:29;712:38;;;;;;;;;;;;;;;;:5;:38;;;;;;;;;;;;;;;;;708:465;;;766:34;;;;;;;;;;:::i;:::-;;;;;;;;708:465;830:35;821:44;;;;;;;;;;;;;;;;:5;:44;;;;;;;;;;;;;;;;;817:356;;;881:41;;;;;;;;;;:::i;:::-;;;;;;;;817:356;952:30;943:39;;;;;;;;;;;;;;;;:5;:39;;;;;;;;;;;;;;;;;939:234;;;998:44;;;;;;;;;;:::i;:::-;;;;;;;;939:234;1072:30;1063:39;;;;;;;;;;;;;;;;:5;:39;;;;;;;;;;;;;;;;;1059:114;;;1118:44;;;;;;;;;;:::i;:::-;;;;;;;;1059:114;548:631;;:::o;8282:304:5:-;8376:17;8396:23;:21;:23::i;:::-;8376:43;;8466:9;8433:30;8449:9;:13;;8433:15;:30::i;:::-;:42;8429:151;;;8491:9;:13;;8510:9;8491:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8534:9;:16;;8556:12;8534:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8429:151;8282:304;;;:::o;9111:576:2:-;9213:1;9194:21;;:7;:21;;;;9186:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;9324:22;9349:9;:18;9359:7;9349:18;;;;;;;;;;;;;;;;9324:43;;9403:6;9385:14;:24;;9377:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9520:6;9503:14;:23;9482:9;:18;9492:7;9482:18;;;;;;;;;;;;;;;:44;;;;9562:6;9546:12;;:22;;;;;;;:::i;:::-;;;;;;;;9610:1;9584:37;;9593:7;9584:37;;;9614:6;9584:37;;;;;;:::i;:::-;;;;;;;;9632:48;9652:7;9669:1;9673:6;9632:19;:48::i;:::-;9111:576;;;:::o;8592:206:5:-;8662:7;8699:1;8685:3;:10;;;;:15;8681:111;;;8723:1;8716:8;;;;8681:111;8762:3;8779:1;8766:3;:10;;;;:14;;;;:::i;:::-;8762:19;;;;;;;;;;;;;;;;;;;;;;;;8755:26;;8592:206;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:19:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:139::-;;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:137::-;;525:6;512:20;503:29;;541:32;567:5;541:32;:::i;:::-;493:86;;;;:::o;585:135::-;;667:6;654:20;645:29;;683:31;708:5;683:31;:::i;:::-;635:85;;;;:::o;726:262::-;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;893:1;918:53;963:7;954:6;943:9;939:22;918:53;:::i;:::-;908:63;;864:117;792:196;;;;:::o;994:407::-;;;1119:2;1107:9;1098:7;1094:23;1090:32;1087:2;;;1135:1;1132;1125:12;1087:2;1178:1;1203:53;1248:7;1239:6;1228:9;1224:22;1203:53;:::i;:::-;1193:63;;1149:117;1305:2;1331:53;1376:7;1367:6;1356:9;1352:22;1331:53;:::i;:::-;1321:63;;1276:118;1077:324;;;;;:::o;1407:552::-;;;;1549:2;1537:9;1528:7;1524:23;1520:32;1517:2;;;1565:1;1562;1555:12;1517:2;1608:1;1633:53;1678:7;1669:6;1658:9;1654:22;1633:53;:::i;:::-;1623:63;;1579:117;1735:2;1761:53;1806:7;1797:6;1786:9;1782:22;1761:53;:::i;:::-;1751:63;;1706:118;1863:2;1889:53;1934:7;1925:6;1914:9;1910:22;1889:53;:::i;:::-;1879:63;;1834:118;1507:452;;;;;:::o;1965:1132::-;;;;;;;;2173:3;2161:9;2152:7;2148:23;2144:33;2141:2;;;2190:1;2187;2180:12;2141:2;2233:1;2258:53;2303:7;2294:6;2283:9;2279:22;2258:53;:::i;:::-;2248:63;;2204:117;2360:2;2386:53;2431:7;2422:6;2411:9;2407:22;2386:53;:::i;:::-;2376:63;;2331:118;2488:2;2514:53;2559:7;2550:6;2539:9;2535:22;2514:53;:::i;:::-;2504:63;;2459:118;2616:2;2642:53;2687:7;2678:6;2667:9;2663:22;2642:53;:::i;:::-;2632:63;;2587:118;2744:3;2771:51;2814:7;2805:6;2794:9;2790:22;2771:51;:::i;:::-;2761:61;;2715:117;2871:3;2898:53;2943:7;2934:6;2923:9;2919:22;2898:53;:::i;:::-;2888:63;;2842:119;3000:3;3027:53;3072:7;3063:6;3052:9;3048:22;3027:53;:::i;:::-;3017:63;;2971:119;2131:966;;;;;;;;;;:::o;3103:407::-;;;3228:2;3216:9;3207:7;3203:23;3199:32;3196:2;;;3244:1;3241;3234:12;3196:2;3287:1;3312:53;3357:7;3348:6;3337:9;3333:22;3312:53;:::i;:::-;3302:63;;3258:117;3414:2;3440:53;3485:7;3476:6;3465:9;3461:22;3440:53;:::i;:::-;3430:63;;3385:118;3186:324;;;;;:::o;3516:986::-;;;;;;;3707:3;3695:9;3686:7;3682:23;3678:33;3675:2;;;3724:1;3721;3714:12;3675:2;3767:1;3792:53;3837:7;3828:6;3817:9;3813:22;3792:53;:::i;:::-;3782:63;;3738:117;3894:2;3920:53;3965:7;3956:6;3945:9;3941:22;3920:53;:::i;:::-;3910:63;;3865:118;4022:2;4048:53;4093:7;4084:6;4073:9;4069:22;4048:53;:::i;:::-;4038:63;;3993:118;4150:2;4176:51;4219:7;4210:6;4199:9;4195:22;4176:51;:::i;:::-;4166:61;;4121:116;4276:3;4303:53;4348:7;4339:6;4328:9;4324:22;4303:53;:::i;:::-;4293:63;;4247:119;4405:3;4432:53;4477:7;4468:6;4457:9;4453:22;4432:53;:::i;:::-;4422:63;;4376:119;3665:837;;;;;;;;:::o;4508:405::-;;;4632:2;4620:9;4611:7;4607:23;4603:32;4600:2;;;4648:1;4645;4638:12;4600:2;4691:1;4716:53;4761:7;4752:6;4741:9;4737:22;4716:53;:::i;:::-;4706:63;;4662:117;4818:2;4844:52;4888:7;4879:6;4868:9;4864:22;4844:52;:::i;:::-;4834:62;;4789:117;4590:323;;;;;:::o;4919:262::-;;5027:2;5015:9;5006:7;5002:23;4998:32;4995:2;;;5043:1;5040;5033:12;4995:2;5086:1;5111:53;5156:7;5147:6;5136:9;5132:22;5111:53;:::i;:::-;5101:63;;5057:117;4985:196;;;;:::o;5187:118::-;5274:24;5292:5;5274:24;:::i;:::-;5269:3;5262:37;5252:53;;:::o;5311:109::-;5392:21;5407:5;5392:21;:::i;:::-;5387:3;5380:34;5370:50;;:::o;5426:118::-;5513:24;5531:5;5513:24;:::i;:::-;5508:3;5501:37;5491:53;;:::o;5550:157::-;5655:45;5675:24;5693:5;5675:24;:::i;:::-;5655:45;:::i;:::-;5650:3;5643:58;5633:74;;:::o;5713:364::-;;5829:39;5862:5;5829:39;:::i;:::-;5884:71;5948:6;5943:3;5884:71;:::i;:::-;5877:78;;5964:52;6009:6;6004:3;5997:4;5990:5;5986:16;5964:52;:::i;:::-;6041:29;6063:6;6041:29;:::i;:::-;6036:3;6032:39;6025:46;;5805:272;;;;;:::o;6083:366::-;;6246:67;6310:2;6305:3;6246:67;:::i;:::-;6239:74;;6322:93;6411:3;6322:93;:::i;:::-;6440:2;6435:3;6431:12;6424:19;;6229:220;;;:::o;6455:366::-;;6618:67;6682:2;6677:3;6618:67;:::i;:::-;6611:74;;6694:93;6783:3;6694:93;:::i;:::-;6812:2;6807:3;6803:12;6796:19;;6601:220;;;:::o;6827:366::-;;6990:67;7054:2;7049:3;6990:67;:::i;:::-;6983:74;;7066:93;7155:3;7066:93;:::i;:::-;7184:2;7179:3;7175:12;7168:19;;6973:220;;;:::o;7199:366::-;;7362:67;7426:2;7421:3;7362:67;:::i;:::-;7355:74;;7438:93;7527:3;7438:93;:::i;:::-;7556:2;7551:3;7547:12;7540:19;;7345:220;;;:::o;7571:366::-;;7734:67;7798:2;7793:3;7734:67;:::i;:::-;7727:74;;7810:93;7899:3;7810:93;:::i;:::-;7928:2;7923:3;7919:12;7912:19;;7717:220;;;:::o;7943:366::-;;8106:67;8170:2;8165:3;8106:67;:::i;:::-;8099:74;;8182:93;8271:3;8182:93;:::i;:::-;8300:2;8295:3;8291:12;8284:19;;8089:220;;;:::o;8315:366::-;;8478:67;8542:2;8537:3;8478:67;:::i;:::-;8471:74;;8554:93;8643:3;8554:93;:::i;:::-;8672:2;8667:3;8663:12;8656:19;;8461:220;;;:::o;8687:366::-;;8850:67;8914:2;8909:3;8850:67;:::i;:::-;8843:74;;8926:93;9015:3;8926:93;:::i;:::-;9044:2;9039:3;9035:12;9028:19;;8833:220;;;:::o;9059:366::-;;9222:67;9286:2;9281:3;9222:67;:::i;:::-;9215:74;;9298:93;9387:3;9298:93;:::i;:::-;9416:2;9411:3;9407:12;9400:19;;9205:220;;;:::o;9431:366::-;;9594:67;9658:2;9653:3;9594:67;:::i;:::-;9587:74;;9670:93;9759:3;9670:93;:::i;:::-;9788:2;9783:3;9779:12;9772:19;;9577:220;;;:::o;9803:400::-;;9984:84;10066:1;10061:3;9984:84;:::i;:::-;9977:91;;10077:93;10166:3;10077:93;:::i;:::-;10195:1;10190:3;10186:11;10179:18;;9967:236;;;:::o;10209:366::-;;10372:67;10436:2;10431:3;10372:67;:::i;:::-;10365:74;;10448:93;10537:3;10448:93;:::i;:::-;10566:2;10561:3;10557:12;10550:19;;10355:220;;;:::o;10581:366::-;;10744:67;10808:2;10803:3;10744:67;:::i;:::-;10737:74;;10820:93;10909:3;10820:93;:::i;:::-;10938:2;10933:3;10929:12;10922:19;;10727:220;;;:::o;10953:366::-;;11116:67;11180:2;11175:3;11116:67;:::i;:::-;11109:74;;11192:93;11281:3;11192:93;:::i;:::-;11310:2;11305:3;11301:12;11294:19;;11099:220;;;:::o;11325:366::-;;11488:67;11552:2;11547:3;11488:67;:::i;:::-;11481:74;;11564:93;11653:3;11564:93;:::i;:::-;11682:2;11677:3;11673:12;11666:19;;11471:220;;;:::o;11697:366::-;;11860:67;11924:2;11919:3;11860:67;:::i;:::-;11853:74;;11936:93;12025:3;11936:93;:::i;:::-;12054:2;12049:3;12045:12;12038:19;;11843:220;;;:::o;12069:366::-;;12232:67;12296:2;12291:3;12232:67;:::i;:::-;12225:74;;12308:93;12397:3;12308:93;:::i;:::-;12426:2;12421:3;12417:12;12410:19;;12215:220;;;:::o;12441:366::-;;12604:67;12668:2;12663:3;12604:67;:::i;:::-;12597:74;;12680:93;12769:3;12680:93;:::i;:::-;12798:2;12793:3;12789:12;12782:19;;12587:220;;;:::o;12813:366::-;;12976:67;13040:2;13035:3;12976:67;:::i;:::-;12969:74;;13052:93;13141:3;13052:93;:::i;:::-;13170:2;13165:3;13161:12;13154:19;;12959:220;;;:::o;13185:366::-;;13348:67;13412:2;13407:3;13348:67;:::i;:::-;13341:74;;13424:93;13513:3;13424:93;:::i;:::-;13542:2;13537:3;13533:12;13526:19;;13331:220;;;:::o;13557:366::-;;13720:67;13784:2;13779:3;13720:67;:::i;:::-;13713:74;;13796:93;13885:3;13796:93;:::i;:::-;13914:2;13909:3;13905:12;13898:19;;13703:220;;;:::o;13929:366::-;;14092:67;14156:2;14151:3;14092:67;:::i;:::-;14085:74;;14168:93;14257:3;14168:93;:::i;:::-;14286:2;14281:3;14277:12;14270:19;;14075:220;;;:::o;14301:366::-;;14464:67;14528:2;14523:3;14464:67;:::i;:::-;14457:74;;14540:93;14629:3;14540:93;:::i;:::-;14658:2;14653:3;14649:12;14642:19;;14447:220;;;:::o;14673:366::-;;14836:67;14900:2;14895:3;14836:67;:::i;:::-;14829:74;;14912:93;15001:3;14912:93;:::i;:::-;15030:2;15025:3;15021:12;15014:19;;14819:220;;;:::o;15045:366::-;;15208:67;15272:2;15267:3;15208:67;:::i;:::-;15201:74;;15284:93;15373:3;15284:93;:::i;:::-;15402:2;15397:3;15393:12;15386:19;;15191:220;;;:::o;15417:366::-;;15580:67;15644:2;15639:3;15580:67;:::i;:::-;15573:74;;15656:93;15745:3;15656:93;:::i;:::-;15774:2;15769:3;15765:12;15758:19;;15563:220;;;:::o;15789:366::-;;15952:67;16016:2;16011:3;15952:67;:::i;:::-;15945:74;;16028:93;16117:3;16028:93;:::i;:::-;16146:2;16141:3;16137:12;16130:19;;15935:220;;;:::o;16229:517::-;16382:4;16377:3;16373:14;16474:4;16467:5;16463:16;16457:23;16493:61;16548:4;16543:3;16539:14;16525:12;16493:61;:::i;:::-;16397:167;16647:4;16640:5;16636:16;16630:23;16666:63;16723:4;16718:3;16714:14;16700:12;16666:63;:::i;:::-;16574:165;16351:395;;;:::o;16752:108::-;16829:24;16847:5;16829:24;:::i;:::-;16824:3;16817:37;16807:53;;:::o;16866:118::-;16953:24;16971:5;16953:24;:::i;:::-;16948:3;16941:37;16931:53;;:::o;16990:105::-;17065:23;17082:5;17065:23;:::i;:::-;17060:3;17053:36;17043:52;;:::o;17101:115::-;17186:23;17203:5;17186:23;:::i;:::-;17181:3;17174:36;17164:52;;:::o;17222:112::-;17305:22;17321:5;17305:22;:::i;:::-;17300:3;17293:35;17283:51;;:::o;17340:663::-;;17603:148;17747:3;17603:148;:::i;:::-;17596:155;;17761:75;17832:3;17823:6;17761:75;:::i;:::-;17861:2;17856:3;17852:12;17845:19;;17874:75;17945:3;17936:6;17874:75;:::i;:::-;17974:2;17969:3;17965:12;17958:19;;17994:3;17987:10;;17585:418;;;;;:::o;18009:222::-;;18140:2;18129:9;18125:18;18117:26;;18153:71;18221:1;18210:9;18206:17;18197:6;18153:71;:::i;:::-;18107:124;;;;:::o;18237:210::-;;18362:2;18351:9;18347:18;18339:26;;18375:65;18437:1;18426:9;18422:17;18413:6;18375:65;:::i;:::-;18329:118;;;;:::o;18453:222::-;;18584:2;18573:9;18569:18;18561:26;;18597:71;18665:1;18654:9;18650:17;18641:6;18597:71;:::i;:::-;18551:124;;;;:::o;18681:775::-;;18952:3;18941:9;18937:19;18929:27;;18966:71;19034:1;19023:9;19019:17;19010:6;18966:71;:::i;:::-;19047:72;19115:2;19104:9;19100:18;19091:6;19047:72;:::i;:::-;19129;19197:2;19186:9;19182:18;19173:6;19129:72;:::i;:::-;19211;19279:2;19268:9;19264:18;19255:6;19211:72;:::i;:::-;19293:73;19361:3;19350:9;19346:19;19337:6;19293:73;:::i;:::-;19376;19444:3;19433:9;19429:19;19420:6;19376:73;:::i;:::-;18919:537;;;;;;;;;:::o;19462:553::-;;19677:3;19666:9;19662:19;19654:27;;19691:71;19759:1;19748:9;19744:17;19735:6;19691:71;:::i;:::-;19772:72;19840:2;19829:9;19825:18;19816:6;19772:72;:::i;:::-;19854;19922:2;19911:9;19907:18;19898:6;19854:72;:::i;:::-;19936;20004:2;19993:9;19989:18;19980:6;19936:72;:::i;:::-;19644:371;;;;;;;:::o;20021:664::-;;20264:3;20253:9;20249:19;20241:27;;20278:71;20346:1;20335:9;20331:17;20322:6;20278:71;:::i;:::-;20359:72;20427:2;20416:9;20412:18;20403:6;20359:72;:::i;:::-;20441;20509:2;20498:9;20494:18;20485:6;20441:72;:::i;:::-;20523;20591:2;20580:9;20576:18;20567:6;20523:72;:::i;:::-;20605:73;20673:3;20662:9;20658:19;20649:6;20605:73;:::i;:::-;20231:454;;;;;;;;:::o;20691:545::-;;20902:3;20891:9;20887:19;20879:27;;20916:71;20984:1;20973:9;20969:17;20960:6;20916:71;:::i;:::-;20997:68;21061:2;21050:9;21046:18;21037:6;20997:68;:::i;:::-;21075:72;21143:2;21132:9;21128:18;21119:6;21075:72;:::i;:::-;21157;21225:2;21214:9;21210:18;21201:6;21157:72;:::i;:::-;20869:367;;;;;;;:::o;21242:313::-;;21393:2;21382:9;21378:18;21370:26;;21442:9;21436:4;21432:20;21428:1;21417:9;21413:17;21406:47;21470:78;21543:4;21534:6;21470:78;:::i;:::-;21462:86;;21360:195;;;;:::o;21561:419::-;;21765:2;21754:9;21750:18;21742:26;;21814:9;21808:4;21804:20;21800:1;21789:9;21785:17;21778:47;21842:131;21968:4;21842:131;:::i;:::-;21834:139;;21732:248;;;:::o;21986:419::-;;22190:2;22179:9;22175:18;22167:26;;22239:9;22233:4;22229:20;22225:1;22214:9;22210:17;22203:47;22267:131;22393:4;22267:131;:::i;:::-;22259:139;;22157:248;;;:::o;22411:419::-;;22615:2;22604:9;22600:18;22592:26;;22664:9;22658:4;22654:20;22650:1;22639:9;22635:17;22628:47;22692:131;22818:4;22692:131;:::i;:::-;22684:139;;22582:248;;;:::o;22836:419::-;;23040:2;23029:9;23025:18;23017:26;;23089:9;23083:4;23079:20;23075:1;23064:9;23060:17;23053:47;23117:131;23243:4;23117:131;:::i;:::-;23109:139;;23007:248;;;:::o;23261:419::-;;23465:2;23454:9;23450:18;23442:26;;23514:9;23508:4;23504:20;23500:1;23489:9;23485:17;23478:47;23542:131;23668:4;23542:131;:::i;:::-;23534:139;;23432:248;;;:::o;23686:419::-;;23890:2;23879:9;23875:18;23867:26;;23939:9;23933:4;23929:20;23925:1;23914:9;23910:17;23903:47;23967:131;24093:4;23967:131;:::i;:::-;23959:139;;23857:248;;;:::o;24111:419::-;;24315:2;24304:9;24300:18;24292:26;;24364:9;24358:4;24354:20;24350:1;24339:9;24335:17;24328:47;24392:131;24518:4;24392:131;:::i;:::-;24384:139;;24282:248;;;:::o;24536:419::-;;24740:2;24729:9;24725:18;24717:26;;24789:9;24783:4;24779:20;24775:1;24764:9;24760:17;24753:47;24817:131;24943:4;24817:131;:::i;:::-;24809:139;;24707:248;;;:::o;24961:419::-;;25165:2;25154:9;25150:18;25142:26;;25214:9;25208:4;25204:20;25200:1;25189:9;25185:17;25178:47;25242:131;25368:4;25242:131;:::i;:::-;25234:139;;25132:248;;;:::o;25386:419::-;;25590:2;25579:9;25575:18;25567:26;;25639:9;25633:4;25629:20;25625:1;25614:9;25610:17;25603:47;25667:131;25793:4;25667:131;:::i;:::-;25659:139;;25557:248;;;:::o;25811:419::-;;26015:2;26004:9;26000:18;25992:26;;26064:9;26058:4;26054:20;26050:1;26039:9;26035:17;26028:47;26092:131;26218:4;26092:131;:::i;:::-;26084:139;;25982:248;;;:::o;26236:419::-;;26440:2;26429:9;26425:18;26417:26;;26489:9;26483:4;26479:20;26475:1;26464:9;26460:17;26453:47;26517:131;26643:4;26517:131;:::i;:::-;26509:139;;26407:248;;;:::o;26661:419::-;;26865:2;26854:9;26850:18;26842:26;;26914:9;26908:4;26904:20;26900:1;26889:9;26885:17;26878:47;26942:131;27068:4;26942:131;:::i;:::-;26934:139;;26832:248;;;:::o;27086:419::-;;27290:2;27279:9;27275:18;27267:26;;27339:9;27333:4;27329:20;27325:1;27314:9;27310:17;27303:47;27367:131;27493:4;27367:131;:::i;:::-;27359:139;;27257:248;;;:::o;27511:419::-;;27715:2;27704:9;27700:18;27692:26;;27764:9;27758:4;27754:20;27750:1;27739:9;27735:17;27728:47;27792:131;27918:4;27792:131;:::i;:::-;27784:139;;27682:248;;;:::o;27936:419::-;;28140:2;28129:9;28125:18;28117:26;;28189:9;28183:4;28179:20;28175:1;28164:9;28160:17;28153:47;28217:131;28343:4;28217:131;:::i;:::-;28209:139;;28107:248;;;:::o;28361:419::-;;28565:2;28554:9;28550:18;28542:26;;28614:9;28608:4;28604:20;28600:1;28589:9;28585:17;28578:47;28642:131;28768:4;28642:131;:::i;:::-;28634:139;;28532:248;;;:::o;28786:419::-;;28990:2;28979:9;28975:18;28967:26;;29039:9;29033:4;29029:20;29025:1;29014:9;29010:17;29003:47;29067:131;29193:4;29067:131;:::i;:::-;29059:139;;28957:248;;;:::o;29211:419::-;;29415:2;29404:9;29400:18;29392:26;;29464:9;29458:4;29454:20;29450:1;29439:9;29435:17;29428:47;29492:131;29618:4;29492:131;:::i;:::-;29484:139;;29382:248;;;:::o;29636:419::-;;29840:2;29829:9;29825:18;29817:26;;29889:9;29883:4;29879:20;29875:1;29864:9;29860:17;29853:47;29917:131;30043:4;29917:131;:::i;:::-;29909:139;;29807:248;;;:::o;30061:419::-;;30265:2;30254:9;30250:18;30242:26;;30314:9;30308:4;30304:20;30300:1;30289:9;30285:17;30278:47;30342:131;30468:4;30342:131;:::i;:::-;30334:139;;30232:248;;;:::o;30486:419::-;;30690:2;30679:9;30675:18;30667:26;;30739:9;30733:4;30729:20;30725:1;30714:9;30710:17;30703:47;30767:131;30893:4;30767:131;:::i;:::-;30759:139;;30657:248;;;:::o;30911:419::-;;31115:2;31104:9;31100:18;31092:26;;31164:9;31158:4;31154:20;31150:1;31139:9;31135:17;31128:47;31192:131;31318:4;31192:131;:::i;:::-;31184:139;;31082:248;;;:::o;31336:419::-;;31540:2;31529:9;31525:18;31517:26;;31589:9;31583:4;31579:20;31575:1;31564:9;31560:17;31553:47;31617:131;31743:4;31617:131;:::i;:::-;31609:139;;31507:248;;;:::o;31761:419::-;;31965:2;31954:9;31950:18;31942:26;;32014:9;32008:4;32004:20;32000:1;31989:9;31985:17;31978:47;32042:131;32168:4;32042:131;:::i;:::-;32034:139;;31932:248;;;:::o;32186:419::-;;32390:2;32379:9;32375:18;32367:26;;32439:9;32433:4;32429:20;32425:1;32414:9;32410:17;32403:47;32467:131;32593:4;32467:131;:::i;:::-;32459:139;;32357:248;;;:::o;32611:334::-;;32798:2;32787:9;32783:18;32775:26;;32811:127;32935:1;32924:9;32920:17;32911:6;32811:127;:::i;:::-;32765:180;;;;:::o;32951:222::-;;33082:2;33071:9;33067:18;33059:26;;33095:71;33163:1;33152:9;33148:17;33139:6;33095:71;:::i;:::-;33049:124;;;;:::o;33179:332::-;;33338:2;33327:9;33323:18;33315:26;;33351:71;33419:1;33408:9;33404:17;33395:6;33351:71;:::i;:::-;33432:72;33500:2;33489:9;33485:18;33476:6;33432:72;:::i;:::-;33305:206;;;;;:::o;33517:218::-;;33646:2;33635:9;33631:18;33623:26;;33659:69;33725:1;33714:9;33710:17;33701:6;33659:69;:::i;:::-;33613:122;;;;:::o;33741:214::-;;33868:2;33857:9;33853:18;33845:26;;33881:67;33945:1;33934:9;33930:17;33921:6;33881:67;:::i;:::-;33835:120;;;;:::o;33961:99::-;;34047:5;34041:12;34031:22;;34020:40;;;:::o;34066:169::-;;34184:6;34179:3;34172:19;34224:4;34219:3;34215:14;34200:29;;34162:73;;;;:::o;34241:148::-;;34380:3;34365:18;;34355:34;;;;:::o;34395:305::-;;34454:20;34472:1;34454:20;:::i;:::-;34449:25;;34488:20;34506:1;34488:20;:::i;:::-;34483:25;;34642:1;34574:66;34570:74;34567:1;34564:81;34561:2;;;34648:18;;:::i;:::-;34561:2;34692:1;34689;34685:9;34678:16;;34439:261;;;;:::o;34706:185::-;;34763:20;34781:1;34763:20;:::i;:::-;34758:25;;34797:20;34815:1;34797:20;:::i;:::-;34792:25;;34836:1;34826:2;;34841:18;;:::i;:::-;34826:2;34883:1;34880;34876:9;34871:14;;34748:143;;;;:::o;34897:191::-;;34957:20;34975:1;34957:20;:::i;:::-;34952:25;;34991:20;35009:1;34991:20;:::i;:::-;34986:25;;35030:1;35027;35024:8;35021:2;;;35035:18;;:::i;:::-;35021:2;35080:1;35077;35073:9;35065:17;;34942:146;;;;:::o;35094:96::-;;35160:24;35178:5;35160:24;:::i;:::-;35149:35;;35139:51;;;:::o;35196:90::-;;35273:5;35266:13;35259:21;35248:32;;35238:48;;;:::o;35292:77::-;;35358:5;35347:16;;35337:32;;;:::o;35375:126::-;;35452:42;35445:5;35441:54;35430:65;;35420:81;;;:::o;35507:142::-;;35584:58;35577:5;35573:70;35562:81;;35552:97;;;:::o;35655:77::-;;35721:5;35710:16;;35700:32;;;:::o;35738:93::-;;35814:10;35807:5;35803:22;35792:33;;35782:49;;;:::o;35837:86::-;;35912:4;35905:5;35901:16;35890:27;;35880:43;;;:::o;35929:307::-;35997:1;36007:113;36021:6;36018:1;36015:13;36007:113;;;36106:1;36101:3;36097:11;36091:18;36087:1;36082:3;36078:11;36071:39;36043:2;36040:1;36036:10;36031:15;;36007:113;;;36138:6;36135:1;36132:13;36129:2;;;36218:1;36209:6;36204:3;36200:16;36193:27;36129:2;35978:258;;;;:::o;36242:320::-;;36323:1;36317:4;36313:12;36303:22;;36370:1;36364:4;36360:12;36391:18;36381:2;;36447:4;36439:6;36435:17;36425:27;;36381:2;36509;36501:6;36498:14;36478:18;36475:38;36472:2;;;36528:18;;:::i;:::-;36472:2;36293:269;;;;:::o;36568:79::-;;36636:5;36625:16;;36615:32;;;:::o;36653:180::-;36701:77;36698:1;36691:88;36798:4;36795:1;36788:15;36822:4;36819:1;36812:15;36839:180;36887:77;36884:1;36877:88;36984:4;36981:1;36974:15;37008:4;37005:1;36998:15;37025:180;37073:77;37070:1;37063:88;37170:4;37167:1;37160:15;37194:4;37191:1;37184:15;37211:102;;37303:2;37299:7;37294:2;37287:5;37283:14;37279:28;37269:38;;37259:54;;;:::o;37319:174::-;37459:26;37455:1;37447:6;37443:14;37436:50;37425:68;:::o;37499:179::-;37639:31;37635:1;37627:6;37623:14;37616:55;37605:73;:::o;37684:222::-;37824:34;37820:1;37812:6;37808:14;37801:58;37893:5;37888:2;37880:6;37876:15;37869:30;37790:116;:::o;37912:181::-;38052:33;38048:1;38040:6;38036:14;38029:57;38018:75;:::o;38099:179::-;38239:31;38235:1;38227:6;38223:14;38216:55;38205:73;:::o;38284:221::-;38424:34;38420:1;38412:6;38408:14;38401:58;38493:4;38488:2;38480:6;38476:15;38469:29;38390:115;:::o;38511:181::-;38651:33;38647:1;38639:6;38635:14;38628:57;38617:75;:::o;38698:175::-;38838:27;38834:1;38826:6;38822:14;38815:51;38804:69;:::o;38879:225::-;39019:34;39015:1;39007:6;39003:14;38996:58;39088:8;39083:2;39075:6;39071:15;39064:33;38985:119;:::o;39110:221::-;39250:34;39246:1;39238:6;39234:14;39227:58;39319:4;39314:2;39306:6;39302:15;39295:29;39216:115;:::o;39337:214::-;39477:66;39473:1;39465:6;39461:14;39454:90;39443:108;:::o;39557:179::-;39697:31;39693:1;39685:6;39681:14;39674:55;39663:73;:::o;39742:179::-;39882:31;39878:1;39870:6;39866:14;39859:55;39848:73;:::o;39927:225::-;40067:34;40063:1;40055:6;40051:14;40044:58;40136:8;40131:2;40123:6;40119:15;40112:33;40033:119;:::o;40158:221::-;40298:34;40294:1;40286:6;40282:14;40275:58;40367:4;40362:2;40354:6;40350:15;40343:29;40264:115;:::o;40385:221::-;40525:34;40521:1;40513:6;40509:14;40502:58;40594:4;40589:2;40581:6;40577:15;40570:29;40491:115;:::o;40612:180::-;40752:32;40748:1;40740:6;40736:14;40729:56;40718:74;:::o;40798:235::-;40938:34;40934:1;40926:6;40922:14;40915:58;41007:18;41002:2;40994:6;40990:15;40983:43;40904:129;:::o;41039:182::-;41179:34;41175:1;41167:6;41163:14;41156:58;41145:76;:::o;41227:226::-;41367:34;41363:1;41355:6;41351:14;41344:58;41436:9;41431:2;41423:6;41419:15;41412:34;41333:120;:::o;41459:220::-;41599:34;41595:1;41587:6;41583:14;41576:58;41668:3;41663:2;41655:6;41651:15;41644:28;41565:114;:::o;41685:224::-;41825:34;41821:1;41813:6;41809:14;41802:58;41894:7;41889:2;41881:6;41877:15;41870:32;41791:118;:::o;41915:225::-;42055:34;42051:1;42043:6;42039:14;42032:58;42124:8;42119:2;42111:6;42107:15;42100:33;42021:119;:::o;42146:223::-;42286:34;42282:1;42274:6;42270:14;42263:58;42355:6;42350:2;42342:6;42338:15;42331:31;42252:117;:::o;42375:172::-;42515:24;42511:1;42503:6;42499:14;42492:48;42481:66;:::o;42553:224::-;42693:34;42689:1;42681:6;42677:14;42670:58;42762:7;42757:2;42749:6;42745:15;42738:32;42659:118;:::o;42783:181::-;42923:33;42919:1;42911:6;42907:14;42900:57;42889:75;:::o;42970:122::-;43043:24;43061:5;43043:24;:::i;:::-;43036:5;43033:35;43023:2;;43082:1;43079;43072:12;43023:2;43013:79;:::o;43098:122::-;43171:24;43189:5;43171:24;:::i;:::-;43164:5;43161:35;43151:2;;43210:1;43207;43200:12;43151:2;43141:79;:::o;43226:122::-;43299:24;43317:5;43299:24;:::i;:::-;43292:5;43289:35;43279:2;;43338:1;43335;43328:12;43279:2;43269:79;:::o;43354:120::-;43426:23;43443:5;43426:23;:::i;:::-;43419:5;43416:34;43406:2;;43464:1;43461;43454:12;43406:2;43396:78;:::o;43480:118::-;43551:22;43567:5;43551:22;:::i;:::-;43544:5;43541:33;43531:2;;43588:1;43585;43578:12;43531:2;43521:77;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","snapshot()":"9711715a","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"marketing@megatechmgt.com\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Megatech.sol\":\"Megatech\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":{\"keccak256\":\"0x9f3a9fc338edd87bff11d626ee6f365ac72f03a8841c4a2938438ef81e8cf1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d2192ec88279638f4866b2c09e017702699fdb995bf1ca167b7110bc5b29d51\",\"dweb:/ipfs/Qme2JhqYoH25xKpgC7qj8o9yKofJyragCuHfX4CQMuPuef\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x7fd2492be0468be4662081ee25cde38a31e4a0ceca0fed10160462389013910f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c660ba772feee0fcb29319b15b328b429cd020079786e8d00992159f4b7b4e\",\"dweb:/ipfs/QmTjnb1FLbjHkgSZ7qcRZnNSwmZnobBpkJ9UWSc1SkVqhU\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"contracts/Megatech.sol\":{\"keccak256\":\"0xb546dc68ab1a299530e71b5d96336afd1cf67878c9097f966121eb7508612889\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53d2b471023c1fbf1f8344bb80f3cceea6931c1cabbb39bf877606246984bb20\",\"dweb:/ipfs/QmRxdvwFrmq9xwfzpFSTiBoFKrPWynieSfPu3htYMPZa9m\"]}},\"version\":1}"}}}}}